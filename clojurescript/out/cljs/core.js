// Compiled by ClojureScript 0.0-2665 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2665";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__9938__delegate = function (args){
return console.log.apply(console,(function (){var G__9937 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__9937) : cljs.core.into_array.call(null,G__9937));
})());
};
var G__9938 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__9939__i = 0, G__9939__a = new Array(arguments.length -  0);
while (G__9939__i < G__9939__a.length) {G__9939__a[G__9939__i] = arguments[G__9939__i + 0]; ++G__9939__i;}
  args = new cljs.core.IndexedSeq(G__9939__a,0);
} 
return G__9938__delegate.call(this,args);};
G__9938.cljs$lang$maxFixedArity = 0;
G__9938.cljs$lang$applyTo = (function (arglist__9940){
var args = cljs.core.seq(arglist__9940);
return G__9938__delegate(args);
});
G__9938.cljs$core$IFn$_invoke$arity$variadic = G__9938__delegate;
return G__9938;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__9942 = x;
return goog.isString(G__9942);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__9944 = x__$1;
return goog.typeOf(G__9944);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3729__auto__ = ty;
if(cljs.core.truth_(and__3729__auto__)){
return ty.cljs$lang$type;
} else {
return and__3729__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__9946 = obj;
return goog.typeOf(G__9946);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__9948 = Symbol;
return goog.typeOf(G__9948);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4628__auto___9950 = len;
var i_9951 = (0);
while(true){
if((i_9951 < n__4628__auto___9950)){
(new_arr[i_9951] = (arr[i_9951]));

var G__9952 = (i_9951 + (1));
i_9951 = G__9952;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__9953 = (i + (1));
i = G__9953;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__9962__delegate = function (array,i,idxs){
var G__9959 = aget;
var G__9960 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__9961 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9959,G__9960,G__9961) : cljs.core.apply.call(null,G__9959,G__9960,G__9961));
};
var G__9962 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__9963__i = 0, G__9963__a = new Array(arguments.length -  2);
while (G__9963__i < G__9963__a.length) {G__9963__a[G__9963__i] = arguments[G__9963__i + 2]; ++G__9963__i;}
  idxs = new cljs.core.IndexedSeq(G__9963__a,0);
} 
return G__9962__delegate.call(this,array,i,idxs);};
G__9962.cljs$lang$maxFixedArity = 2;
G__9962.cljs$lang$applyTo = (function (arglist__9964){
var array = cljs.core.first(arglist__9964);
arglist__9964 = cljs.core.next(arglist__9964);
var i = cljs.core.first(arglist__9964);
var idxs = cljs.core.rest(arglist__9964);
return G__9962__delegate(array,i,idxs);
});
G__9962.cljs$core$IFn$_invoke$arity$variadic = G__9962__delegate;
return G__9962;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__9965 = null;
if (arguments.length > 2) {
var G__9966__i = 0, G__9966__a = new Array(arguments.length -  2);
while (G__9966__i < G__9966__a.length) {G__9966__a[G__9966__i] = arguments[G__9966__i + 2]; ++G__9966__i;}
G__9965 = new cljs.core.IndexedSeq(G__9966__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__9965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__9975__delegate = function (array,idx,idx2,idxv){
var G__9971 = aset;
var G__9972 = (array[idx]);
var G__9973 = idx2;
var G__9974 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9971,G__9972,G__9973,G__9974) : cljs.core.apply.call(null,G__9971,G__9972,G__9973,G__9974));
};
var G__9975 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__9976__i = 0, G__9976__a = new Array(arguments.length -  3);
while (G__9976__i < G__9976__a.length) {G__9976__a[G__9976__i] = arguments[G__9976__i + 3]; ++G__9976__i;}
  idxv = new cljs.core.IndexedSeq(G__9976__a,0);
} 
return G__9975__delegate.call(this,array,idx,idx2,idxv);};
G__9975.cljs$lang$maxFixedArity = 3;
G__9975.cljs$lang$applyTo = (function (arglist__9977){
var array = cljs.core.first(arglist__9977);
arglist__9977 = cljs.core.next(arglist__9977);
var idx = cljs.core.first(arglist__9977);
arglist__9977 = cljs.core.next(arglist__9977);
var idx2 = cljs.core.first(arglist__9977);
var idxv = cljs.core.rest(arglist__9977);
return G__9975__delegate(array,idx,idx2,idxv);
});
G__9975.cljs$core$IFn$_invoke$arity$variadic = G__9975__delegate;
return G__9975;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__9978 = null;
if (arguments.length > 3) {
var G__9979__i = 0, G__9979__a = new Array(arguments.length -  3);
while (G__9979__i < G__9979__a.length) {G__9979__a[G__9979__i] = arguments[G__9979__i + 3]; ++G__9979__i;}
G__9978 = new cljs.core.IndexedSeq(G__9979__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__9978);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__9985 = (function (a,x){
a.push(x);

return a;
});
var G__9986 = [];
var G__9987 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9985,G__9986,G__9987) : cljs.core.reduce.call(null,G__9985,G__9986,G__9987));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__9988__i = 0, G__9988__a = new Array(arguments.length -  2);
while (G__9988__i < G__9988__a.length) {G__9988__a[G__9988__i] = arguments[G__9988__i + 2]; ++G__9988__i;}
  args = new cljs.core.IndexedSeq(G__9988__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__9989){
var obj = cljs.core.first(arglist__9989);
arglist__9989 = cljs.core.next(arglist__9989);
var s = cljs.core.first(arglist__9989);
var args = cljs.core.rest(arglist__9989);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj9991 = {};
return obj9991;
})();


cljs.core.IFn = (function (){var obj9993 = {};
return obj9993;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10039 = x__4385__auto__;
return goog.typeOf(G__10039);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10041 = x__4385__auto__;
return goog.typeOf(G__10041);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10043 = x__4385__auto__;
return goog.typeOf(G__10043);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10045 = x__4385__auto__;
return goog.typeOf(G__10045);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10047 = x__4385__auto__;
return goog.typeOf(G__10047);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10049 = x__4385__auto__;
return goog.typeOf(G__10049);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10051 = x__4385__auto__;
return goog.typeOf(G__10051);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10053 = x__4385__auto__;
return goog.typeOf(G__10053);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10055 = x__4385__auto__;
return goog.typeOf(G__10055);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10057 = x__4385__auto__;
return goog.typeOf(G__10057);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10059 = x__4385__auto__;
return goog.typeOf(G__10059);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10061 = x__4385__auto__;
return goog.typeOf(G__10061);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10063 = x__4385__auto__;
return goog.typeOf(G__10063);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10065 = x__4385__auto__;
return goog.typeOf(G__10065);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10067 = x__4385__auto__;
return goog.typeOf(G__10067);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10069 = x__4385__auto__;
return goog.typeOf(G__10069);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10071 = x__4385__auto__;
return goog.typeOf(G__10071);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10073 = x__4385__auto__;
return goog.typeOf(G__10073);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10075 = x__4385__auto__;
return goog.typeOf(G__10075);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10077 = x__4385__auto__;
return goog.typeOf(G__10077);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10079 = x__4385__auto__;
return goog.typeOf(G__10079);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._invoke[(function (){var G__10081 = x__4385__auto__;
return goog.typeOf(G__10081);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._invoke["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj10083 = {};
return obj10083;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3729__auto__ = value;
if(and__3729__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3729__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4385__auto__ = (((value == null))?null:value);
return (function (){var or__3741__auto__ = (cljs.core._clone[(function (){var G__10087 = x__4385__auto__;
return goog.typeOf(G__10087);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._clone["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj10089 = {};
return obj10089;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._count[(function (){var G__10093 = x__4385__auto__;
return goog.typeOf(G__10093);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._count["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj10095 = {};
return obj10095;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._empty[(function (){var G__10099 = x__4385__auto__;
return goog.typeOf(G__10099);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._empty["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj10101 = {};
return obj10101;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._conj[(function (){var G__10105 = x__4385__auto__;
return goog.typeOf(G__10105);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._conj["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj10107 = {};
return obj10107;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._nth[(function (){var G__10113 = x__4385__auto__;
return goog.typeOf(G__10113);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._nth["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._nth[(function (){var G__10115 = x__4385__auto__;
return goog.typeOf(G__10115);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._nth["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj10117 = {};
return obj10117;
})();


cljs.core.ISeq = (function (){var obj10119 = {};
return obj10119;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._first[(function (){var G__10123 = x__4385__auto__;
return goog.typeOf(G__10123);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._first["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._rest[(function (){var G__10127 = x__4385__auto__;
return goog.typeOf(G__10127);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._rest["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj10129 = {};
return obj10129;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._next[(function (){var G__10133 = x__4385__auto__;
return goog.typeOf(G__10133);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._next["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj10135 = {};
return obj10135;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._lookup[(function (){var G__10141 = x__4385__auto__;
return goog.typeOf(G__10141);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._lookup["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._lookup[(function (){var G__10143 = x__4385__auto__;
return goog.typeOf(G__10143);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._lookup["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj10145 = {};
return obj10145;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__10149 = x__4385__auto__;
return goog.typeOf(G__10149);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._assoc[(function (){var G__10153 = x__4385__auto__;
return goog.typeOf(G__10153);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._assoc["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj10155 = {};
return obj10155;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._dissoc[(function (){var G__10159 = x__4385__auto__;
return goog.typeOf(G__10159);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj10161 = {};
return obj10161;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._key[(function (){var G__10165 = x__4385__auto__;
return goog.typeOf(G__10165);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._key["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._val[(function (){var G__10169 = x__4385__auto__;
return goog.typeOf(G__10169);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._val["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj10171 = {};
return obj10171;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._disjoin[(function (){var G__10175 = x__4385__auto__;
return goog.typeOf(G__10175);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj10177 = {};
return obj10177;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._peek[(function (){var G__10181 = x__4385__auto__;
return goog.typeOf(G__10181);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._peek["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._pop[(function (){var G__10185 = x__4385__auto__;
return goog.typeOf(G__10185);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._pop["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj10187 = {};
return obj10187;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._assoc_n[(function (){var G__10191 = x__4385__auto__;
return goog.typeOf(G__10191);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj10193 = {};
return obj10193;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._deref[(function (){var G__10197 = x__4385__auto__;
return goog.typeOf(G__10197);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._deref["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj10199 = {};
return obj10199;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._deref_with_timeout[(function (){var G__10203 = x__4385__auto__;
return goog.typeOf(G__10203);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj10205 = {};
return obj10205;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._meta[(function (){var G__10209 = x__4385__auto__;
return goog.typeOf(G__10209);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._meta["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj10211 = {};
return obj10211;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._with_meta[(function (){var G__10215 = x__4385__auto__;
return goog.typeOf(G__10215);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj10217 = {};
return obj10217;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._reduce[(function (){var G__10223 = x__4385__auto__;
return goog.typeOf(G__10223);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._reduce["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._reduce[(function (){var G__10225 = x__4385__auto__;
return goog.typeOf(G__10225);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._reduce["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj10227 = {};
return obj10227;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._kv_reduce[(function (){var G__10231 = x__4385__auto__;
return goog.typeOf(G__10231);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj10233 = {};
return obj10233;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._equiv[(function (){var G__10237 = x__4385__auto__;
return goog.typeOf(G__10237);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._equiv["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj10239 = {};
return obj10239;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._hash[(function (){var G__10243 = x__4385__auto__;
return goog.typeOf(G__10243);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._hash["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj10245 = {};
return obj10245;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._seq[(function (){var G__10249 = x__4385__auto__;
return goog.typeOf(G__10249);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._seq["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj10251 = {};
return obj10251;
})();


cljs.core.IList = (function (){var obj10253 = {};
return obj10253;
})();


cljs.core.IRecord = (function (){var obj10255 = {};
return obj10255;
})();


cljs.core.IReversible = (function (){var obj10257 = {};
return obj10257;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._rseq[(function (){var G__10261 = x__4385__auto__;
return goog.typeOf(G__10261);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._rseq["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj10263 = {};
return obj10263;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._sorted_seq[(function (){var G__10267 = x__4385__auto__;
return goog.typeOf(G__10267);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._sorted_seq_from[(function (){var G__10271 = x__4385__auto__;
return goog.typeOf(G__10271);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._entry_key[(function (){var G__10275 = x__4385__auto__;
return goog.typeOf(G__10275);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._comparator[(function (){var G__10279 = x__4385__auto__;
return goog.typeOf(G__10279);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._comparator["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj10281 = {};
return obj10281;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3729__auto__ = writer;
if(and__3729__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3729__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4385__auto__ = (((writer == null))?null:writer);
return (function (){var or__3741__auto__ = (cljs.core._write[(function (){var G__10285 = x__4385__auto__;
return goog.typeOf(G__10285);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._write["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3729__auto__ = writer;
if(and__3729__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3729__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4385__auto__ = (((writer == null))?null:writer);
return (function (){var or__3741__auto__ = (cljs.core._flush[(function (){var G__10289 = x__4385__auto__;
return goog.typeOf(G__10289);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._flush["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj10291 = {};
return obj10291;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._pr_writer[(function (){var G__10295 = x__4385__auto__;
return goog.typeOf(G__10295);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj10297 = {};
return obj10297;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3729__auto__ = d;
if(and__3729__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3729__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4385__auto__ = (((d == null))?null:d);
return (function (){var or__3741__auto__ = (cljs.core._realized_QMARK_[(function (){var G__10301 = x__4385__auto__;
return goog.typeOf(G__10301);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj10303 = {};
return obj10303;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._notify_watches[(function (){var G__10307 = x__4385__auto__;
return goog.typeOf(G__10307);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._add_watch[(function (){var G__10311 = x__4385__auto__;
return goog.typeOf(G__10311);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3729__auto__ = this$;
if(and__3729__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3729__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4385__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3741__auto__ = (cljs.core._remove_watch[(function (){var G__10315 = x__4385__auto__;
return goog.typeOf(G__10315);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj10317 = {};
return obj10317;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._as_transient[(function (){var G__10321 = x__4385__auto__;
return goog.typeOf(G__10321);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj10323 = {};
return obj10323;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._conj_BANG_[(function (){var G__10327 = x__4385__auto__;
return goog.typeOf(G__10327);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._persistent_BANG_[(function (){var G__10331 = x__4385__auto__;
return goog.typeOf(G__10331);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj10333 = {};
return obj10333;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._assoc_BANG_[(function (){var G__10337 = x__4385__auto__;
return goog.typeOf(G__10337);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj10339 = {};
return obj10339;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__10343 = x__4385__auto__;
return goog.typeOf(G__10343);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj10345 = {};
return obj10345;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__10349 = x__4385__auto__;
return goog.typeOf(G__10349);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._pop_BANG_[(function (){var G__10353 = x__4385__auto__;
return goog.typeOf(G__10353);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj10355 = {};
return obj10355;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3729__auto__ = tcoll;
if(and__3729__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4385__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3741__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__10359 = x__4385__auto__;
return goog.typeOf(G__10359);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj10361 = {};
return obj10361;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3729__auto__ = x;
if(and__3729__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3729__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4385__auto__ = (((x == null))?null:x);
return (function (){var or__3741__auto__ = (cljs.core._compare[(function (){var G__10365 = x__4385__auto__;
return goog.typeOf(G__10365);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._compare["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj10367 = {};
return obj10367;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._drop_first[(function (){var G__10371 = x__4385__auto__;
return goog.typeOf(G__10371);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj10373 = {};
return obj10373;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._chunked_first[(function (){var G__10377 = x__4385__auto__;
return goog.typeOf(G__10377);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._chunked_rest[(function (){var G__10381 = x__4385__auto__;
return goog.typeOf(G__10381);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj10383 = {};
return obj10383;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._chunked_next[(function (){var G__10387 = x__4385__auto__;
return goog.typeOf(G__10387);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj10389 = {};
return obj10389;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3729__auto__ = x;
if(and__3729__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3729__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4385__auto__ = (((x == null))?null:x);
return (function (){var or__3741__auto__ = (cljs.core._name[(function (){var G__10393 = x__4385__auto__;
return goog.typeOf(G__10393);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._name["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3729__auto__ = x;
if(and__3729__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3729__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4385__auto__ = (((x == null))?null:x);
return (function (){var or__3741__auto__ = (cljs.core._namespace[(function (){var G__10397 = x__4385__auto__;
return goog.typeOf(G__10397);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._namespace["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj10399 = {};
return obj10399;
})();


cljs.core.IReset = (function (){var obj10401 = {};
return obj10401;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._reset_BANG_[(function (){var G__10405 = x__4385__auto__;
return goog.typeOf(G__10405);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj10407 = {};
return obj10407;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._swap_BANG_[(function (){var G__10417 = x__4385__auto__;
return goog.typeOf(G__10417);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._swap_BANG_[(function (){var G__10419 = x__4385__auto__;
return goog.typeOf(G__10419);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._swap_BANG_[(function (){var G__10421 = x__4385__auto__;
return goog.typeOf(G__10421);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._swap_BANG_[(function (){var G__10423 = x__4385__auto__;
return goog.typeOf(G__10423);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj10425 = {};
return obj10425;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3729__auto__ = o;
if(and__3729__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3729__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4385__auto__ = (((o == null))?null:o);
return (function (){var or__3741__auto__ = (cljs.core._vreset_BANG_[(function (){var G__10429 = x__4385__auto__;
return goog.typeOf(G__10429);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj10431 = {};
return obj10431;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3729__auto__ = coll;
if(and__3729__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3729__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4385__auto__ = (((coll == null))?null:coll);
return (function (){var or__3741__auto__ = (cljs.core._iterator[(function (){var G__10435 = x__4385__auto__;
return goog.typeOf(G__10435);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._iterator["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__10438 = (4294967295);
var G__10439 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10438,G__10439) : Math.imul.call(null,G__10438,G__10439));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__10442 = a;
var G__10443 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10442,G__10443) : Math.imul.call(null,G__10442,G__10443));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__10444 = (i + (2));
var G__10445 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__10444;
h1 = G__10445;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj10447 = {};
return obj10447;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__10448 = (i + (1));
var G__10449 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__10448;
hash = G__10449;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj10453 = {};
return obj10453;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__10456 = o;
if(G__10456){
var bit__4415__auto__ = (G__10456.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4415__auto__) || (G__10456.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__10457 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10457) : Math.floor.call(null,G__10457));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3729__auto__ = cljs.core.not(a.ns);
if(and__3729__auto__){
return b.ns;
} else {
return and__3729__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__10464 = a.ns;
var G__10465 = b.ns;
return goog.array.defaultCompare(G__10464,G__10465);
})();
if(((0) === nsc)){
var G__10466 = a.name;
var G__10467 = b.name;
return goog.array.defaultCompare(G__10466,G__10467);
} else {
return nsc;
}
}
} else {
var G__10468 = a.name;
var G__10469 = b.name;
return goog.array.defaultCompare(G__10468,G__10469);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4162__auto__ = self__._hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__10471 = null;
var G__10471__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__10471__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__10471 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__10471__2.call(this,self__,coll);
case 3:
return G__10471__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__10471.cljs$core$IFn$_invoke$arity$2 = G__10471__2;
G__10471.cljs$core$IFn$_invoke$arity$3 = G__10471__3;
return G__10471;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args10470){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10470)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163840;
})
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.val;
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__10475 = x;
if(G__10475){
var bit__4422__auto__ = null;
if(cljs.core.truth_((function (){var or__3741__auto__ = bit__4422__auto__;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return G__10475.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__10475.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__10475);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__10475);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__10477 = value;
if(G__10477){
var bit__4422__auto__ = (G__10477.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4422__auto__) || (G__10477.cljs$core$ICloneable$)){
return true;
} else {
if((!G__10477.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__10477);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__10477);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10479 = coll;
if(G__10479){
var bit__4415__auto__ = (G__10479.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4415__auto__) || (G__10479.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10481 = coll;
if(G__10481){
var bit__4415__auto__ = (G__10481.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4415__auto__) || (G__10481.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__10483 = coll;
if(G__10483){
var bit__4415__auto__ = (G__10483.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4415__auto__) || (G__10483.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__10485 = coll;
if(G__10485){
var bit__4415__auto__ = (G__10485.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4415__auto__) || (G__10485.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__10490__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__10491 = y;
var G__10492 = cljs.core.first(more);
var G__10493 = cljs.core.next(more);
x = G__10491;
y = G__10492;
more = G__10493;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__10490 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__10494__i = 0, G__10494__a = new Array(arguments.length -  2);
while (G__10494__i < G__10494__a.length) {G__10494__a[G__10494__i] = arguments[G__10494__i + 2]; ++G__10494__i;}
  more = new cljs.core.IndexedSeq(G__10494__a,0);
} 
return G__10490__delegate.call(this,x,y,more);};
G__10490.cljs$lang$maxFixedArity = 2;
G__10490.cljs$lang$applyTo = (function (arglist__10495){
var x = cljs.core.first(arglist__10495);
arglist__10495 = cljs.core.next(arglist__10495);
var y = cljs.core.first(arglist__10495);
var more = cljs.core.rest(arglist__10495);
return G__10490__delegate(x,y,more);
});
G__10490.cljs$core$IFn$_invoke$arity$variadic = G__10490__delegate;
return G__10490;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__10496 = null;
if (arguments.length > 2) {
var G__10497__i = 0, G__10497__a = new Array(arguments.length -  2);
while (G__10497__i < G__10497__a.length) {G__10497__a[G__10497__i] = arguments[G__10497__i + 2]; ++G__10497__i;}
G__10496 = new cljs.core.IndexedSeq(G__10497__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__10496);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__10498 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__10498) : cljs.core.es6_iterator_seq.call(null,G__10498));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__10499 = (n + (1));
var G__10500 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__10501 = cljs.core.next(coll__$1);
n = G__10499;
hash_code = G__10500;
coll__$1 = G__10501;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__10502 = (n + (1));
var G__10503 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__10504 = cljs.core.next(coll__$1);
n = G__10502;
hash_code = G__10503;
coll__$1 = G__10504;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__10505 = o;
return goog.getUid(G__10505);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__10507 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10507) : cljs.core.deref.call(null,G__10507));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10514 = val;
var G__10515 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10514,G__10515) : f.call(null,G__10514,G__10515));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10520 = nval;
var G__10521 = (n + (1));
val = G__10520;
n = G__10521;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10516 = val__$1;
var G__10517 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10516,G__10517) : f.call(null,G__10516,G__10517));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10522 = nval;
var G__10523 = (n + (1));
val__$1 = G__10522;
n = G__10523;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10518 = val__$1;
var G__10519 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10518,G__10519) : f.call(null,G__10518,G__10519));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10524 = nval;
var G__10525 = (n + (1));
val__$1 = G__10524;
n = G__10525;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__10532 = val;
var G__10533 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10532,G__10533) : f.call(null,G__10532,G__10533));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10538 = nval;
var G__10539 = (n + (1));
val = G__10538;
n = G__10539;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__10534 = val__$1;
var G__10535 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10534,G__10535) : f.call(null,G__10534,G__10535));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10540 = nval;
var G__10541 = (n + (1));
val__$1 = G__10540;
n = G__10541;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__10536 = val__$1;
var G__10537 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10536,G__10537) : f.call(null,G__10536,G__10537));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__10542 = nval;
var G__10543 = (n + (1));
val__$1 = G__10542;
n = G__10543;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__10545 = x;
if(G__10545){
var bit__4422__auto__ = (G__10545.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4422__auto__) || (G__10545.cljs$core$ICounted$)){
return true;
} else {
if((!G__10545.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10545);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__10545);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__10547 = x;
if(G__10547){
var bit__4422__auto__ = (G__10547.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4422__auto__) || (G__10547.cljs$core$IIndexed$)){
return true;
} else {
if((!G__10547.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10547);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__10547);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10548 = coll__$1;
var G__10549 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10548,G__10549) : cljs.core.equiv_sequential.call(null,G__10548,G__10549));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10550 = o;
var G__10551 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10550,G__10551) : cljs.core.cons.call(null,G__10550,G__10551));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__10554 = coll__$1;
var G__10555 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10554,G__10555) : cljs.core.equiv_sequential.call(null,G__10554,G__10555));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__10556 = cljs.core.List.EMPTY;
var G__10557 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10556,G__10557) : cljs.core.with_meta.call(null,G__10556,G__10557));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__10558 = f;
var G__10559 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10558,G__10559) : cljs.core.seq_reduce.call(null,G__10558,G__10559));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__10560 = f;
var G__10561 = start;
var G__10562 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10560,G__10561,G__10562) : cljs.core.seq_reduce.call(null,G__10560,G__10561,G__10562));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__10563 = o;
var G__10564 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10563,G__10564) : cljs.core.cons.call(null,G__10563,G__10564));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__10565 = sn;
s = G__10565;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__10570__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__10571 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__10572 = cljs.core.first(xs);
var G__10573 = cljs.core.next(xs);
coll = G__10571;
x = G__10572;
xs = G__10573;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__10570 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__10574__i = 0, G__10574__a = new Array(arguments.length -  2);
while (G__10574__i < G__10574__a.length) {G__10574__a[G__10574__i] = arguments[G__10574__i + 2]; ++G__10574__i;}
  xs = new cljs.core.IndexedSeq(G__10574__a,0);
} 
return G__10570__delegate.call(this,coll,x,xs);};
G__10570.cljs$lang$maxFixedArity = 2;
G__10570.cljs$lang$applyTo = (function (arglist__10575){
var coll = cljs.core.first(arglist__10575);
arglist__10575 = cljs.core.next(arglist__10575);
var x = cljs.core.first(arglist__10575);
var xs = cljs.core.rest(arglist__10575);
return G__10570__delegate(coll,x,xs);
});
G__10570.cljs$core$IFn$_invoke$arity$variadic = G__10570__delegate;
return G__10570;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__10576 = null;
if (arguments.length > 2) {
var G__10577__i = 0, G__10577__a = new Array(arguments.length -  2);
while (G__10577__i < G__10577__a.length) {G__10577__a[G__10577__i] = arguments[G__10577__i + 2]; ++G__10577__i;}
G__10576 = new cljs.core.IndexedSeq(G__10577__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__10576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__10578 = cljs.core.next(s);
var G__10579 = (acc + (1));
s = G__10578;
acc = G__10579;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__10581 = coll;
if(G__10581){
var bit__4415__auto__ = (G__10581.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4415__auto__) || (G__10581.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__10582 = cljs.core.next(coll);
var G__10583 = (n - (1));
coll = G__10582;
n = G__10583;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__10584 = cljs.core.next(coll);
var G__10585 = (n - (1));
var G__10586 = not_found;
coll = G__10584;
n = G__10585;
not_found = G__10586;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__10591 = coll;
if(G__10591){
var bit__4415__auto__ = (G__10591.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4415__auto__) || (G__10591.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10592 = coll;
if(G__10592){
var bit__4422__auto__ = (G__10592.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4422__auto__) || (G__10592.cljs$core$ISeq$)){
return true;
} else {
if((!G__10592.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10592);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10592);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__10593 = coll;
if(G__10593){
var bit__4415__auto__ = (G__10593.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4415__auto__) || (G__10593.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__10594 = coll;
if(G__10594){
var bit__4422__auto__ = (G__10594.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4422__auto__) || (G__10594.cljs$core$ISeq$)){
return true;
} else {
if((!G__10594.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10594);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__10594);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__10595 = (n__$1 - (1));
var G__10596 = cljs.core.rest(xs);
n__$1 = G__10595;
xs = G__10596;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__10599 = o;
if(G__10599){
var bit__4415__auto__ = (G__10599.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4415__auto__) || (G__10599.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__10600 = o;
if(G__10600){
var bit__4415__auto__ = (G__10600.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4415__auto__) || (G__10600.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__10604__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__10605 = ret;
var G__10606 = cljs.core.first(kvs);
var G__10607 = cljs.core.second(kvs);
var G__10608 = cljs.core.nnext(kvs);
coll = G__10605;
k = G__10606;
v = G__10607;
kvs = G__10608;
continue;
} else {
return ret;
}
break;
}
};
var G__10604 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__10609__i = 0, G__10609__a = new Array(arguments.length -  3);
while (G__10609__i < G__10609__a.length) {G__10609__a[G__10609__i] = arguments[G__10609__i + 3]; ++G__10609__i;}
  kvs = new cljs.core.IndexedSeq(G__10609__a,0);
} 
return G__10604__delegate.call(this,coll,k,v,kvs);};
G__10604.cljs$lang$maxFixedArity = 3;
G__10604.cljs$lang$applyTo = (function (arglist__10610){
var coll = cljs.core.first(arglist__10610);
arglist__10610 = cljs.core.next(arglist__10610);
var k = cljs.core.first(arglist__10610);
arglist__10610 = cljs.core.next(arglist__10610);
var v = cljs.core.first(arglist__10610);
var kvs = cljs.core.rest(arglist__10610);
return G__10604__delegate(coll,k,v,kvs);
});
G__10604.cljs$core$IFn$_invoke$arity$variadic = G__10604__delegate;
return G__10604;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__10611 = null;
if (arguments.length > 3) {
var G__10612__i = 0, G__10612__a = new Array(arguments.length -  3);
while (G__10612__i < G__10612__a.length) {G__10612__a[G__10612__i] = arguments[G__10612__i + 3]; ++G__10612__i;}
G__10611 = new cljs.core.IndexedSeq(G__10612__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__10611);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__10615__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__10616 = ret;
var G__10617 = cljs.core.first(ks);
var G__10618 = cljs.core.next(ks);
coll = G__10616;
k = G__10617;
ks = G__10618;
continue;
} else {
return ret;
}
}
break;
}
};
var G__10615 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__10619__i = 0, G__10619__a = new Array(arguments.length -  2);
while (G__10619__i < G__10619__a.length) {G__10619__a[G__10619__i] = arguments[G__10619__i + 2]; ++G__10619__i;}
  ks = new cljs.core.IndexedSeq(G__10619__a,0);
} 
return G__10615__delegate.call(this,coll,k,ks);};
G__10615.cljs$lang$maxFixedArity = 2;
G__10615.cljs$lang$applyTo = (function (arglist__10620){
var coll = cljs.core.first(arglist__10620);
arglist__10620 = cljs.core.next(arglist__10620);
var k = cljs.core.first(arglist__10620);
var ks = cljs.core.rest(arglist__10620);
return G__10615__delegate(coll,k,ks);
});
G__10615.cljs$core$IFn$_invoke$arity$variadic = G__10615__delegate;
return G__10615;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__10621 = null;
if (arguments.length > 2) {
var G__10622__i = 0, G__10622__a = new Array(arguments.length -  2);
while (G__10622__i < G__10622__a.length) {G__10622__a[G__10622__i] = arguments[G__10622__i + 2]; ++G__10622__i;}
G__10621 = new cljs.core.IndexedSeq(G__10622__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__10621);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3741__auto__ = (function (){var G__10627 = f;
return goog.isFunction(G__10627);
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var G__10628 = f;
if(G__10628){
var bit__4422__auto__ = null;
if(cljs.core.truth_((function (){var or__3741__auto____$1 = bit__4422__auto__;
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
return G__10628.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__10628.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10628);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__10628);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__11094 = null;
var G__11094__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__11094__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10630 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10630) : self__.afn.call(null,G__10630));
});
var G__11094__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10631 = a;
var G__10632 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10631,G__10632) : self__.afn.call(null,G__10631,G__10632));
});
var G__11094__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10633 = a;
var G__10634 = b;
var G__10635 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10633,G__10634,G__10635) : self__.afn.call(null,G__10633,G__10634,G__10635));
});
var G__11094__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10636 = a;
var G__10637 = b;
var G__10638 = c;
var G__10639 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10636,G__10637,G__10638,G__10639) : self__.afn.call(null,G__10636,G__10637,G__10638,G__10639));
});
var G__11094__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10640 = a;
var G__10641 = b;
var G__10642 = c;
var G__10643 = d;
var G__10644 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10640,G__10641,G__10642,G__10643,G__10644) : self__.afn.call(null,G__10640,G__10641,G__10642,G__10643,G__10644));
});
var G__11094__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10645 = a;
var G__10646 = b;
var G__10647 = c;
var G__10648 = d;
var G__10649 = e;
var G__10650 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10645,G__10646,G__10647,G__10648,G__10649,G__10650) : self__.afn.call(null,G__10645,G__10646,G__10647,G__10648,G__10649,G__10650));
});
var G__11094__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10651 = a;
var G__10652 = b;
var G__10653 = c;
var G__10654 = d;
var G__10655 = e;
var G__10656 = f;
var G__10657 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657) : self__.afn.call(null,G__10651,G__10652,G__10653,G__10654,G__10655,G__10656,G__10657));
});
var G__11094__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10658 = a;
var G__10659 = b;
var G__10660 = c;
var G__10661 = d;
var G__10662 = e;
var G__10663 = f;
var G__10664 = g;
var G__10665 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10658,G__10659,G__10660,G__10661,G__10662,G__10663,G__10664,G__10665) : self__.afn.call(null,G__10658,G__10659,G__10660,G__10661,G__10662,G__10663,G__10664,G__10665));
});
var G__11094__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10666 = a;
var G__10667 = b;
var G__10668 = c;
var G__10669 = d;
var G__10670 = e;
var G__10671 = f;
var G__10672 = g;
var G__10673 = h;
var G__10674 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674) : self__.afn.call(null,G__10666,G__10667,G__10668,G__10669,G__10670,G__10671,G__10672,G__10673,G__10674));
});
var G__11094__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10675 = a;
var G__10676 = b;
var G__10677 = c;
var G__10678 = d;
var G__10679 = e;
var G__10680 = f;
var G__10681 = g;
var G__10682 = h;
var G__10683 = i;
var G__10684 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10675,G__10676,G__10677,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684) : self__.afn.call(null,G__10675,G__10676,G__10677,G__10678,G__10679,G__10680,G__10681,G__10682,G__10683,G__10684));
});
var G__11094__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10685 = a;
var G__10686 = b;
var G__10687 = c;
var G__10688 = d;
var G__10689 = e;
var G__10690 = f;
var G__10691 = g;
var G__10692 = h;
var G__10693 = i;
var G__10694 = j;
var G__10695 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695) : self__.afn.call(null,G__10685,G__10686,G__10687,G__10688,G__10689,G__10690,G__10691,G__10692,G__10693,G__10694,G__10695));
});
var G__11094__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10696 = a;
var G__10697 = b;
var G__10698 = c;
var G__10699 = d;
var G__10700 = e;
var G__10701 = f;
var G__10702 = g;
var G__10703 = h;
var G__10704 = i;
var G__10705 = j;
var G__10706 = k;
var G__10707 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707) : self__.afn.call(null,G__10696,G__10697,G__10698,G__10699,G__10700,G__10701,G__10702,G__10703,G__10704,G__10705,G__10706,G__10707));
});
var G__11094__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10708 = a;
var G__10709 = b;
var G__10710 = c;
var G__10711 = d;
var G__10712 = e;
var G__10713 = f;
var G__10714 = g;
var G__10715 = h;
var G__10716 = i;
var G__10717 = j;
var G__10718 = k;
var G__10719 = l;
var G__10720 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720) : self__.afn.call(null,G__10708,G__10709,G__10710,G__10711,G__10712,G__10713,G__10714,G__10715,G__10716,G__10717,G__10718,G__10719,G__10720));
});
var G__11094__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10721 = a;
var G__10722 = b;
var G__10723 = c;
var G__10724 = d;
var G__10725 = e;
var G__10726 = f;
var G__10727 = g;
var G__10728 = h;
var G__10729 = i;
var G__10730 = j;
var G__10731 = k;
var G__10732 = l;
var G__10733 = m;
var G__10734 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734) : self__.afn.call(null,G__10721,G__10722,G__10723,G__10724,G__10725,G__10726,G__10727,G__10728,G__10729,G__10730,G__10731,G__10732,G__10733,G__10734));
});
var G__11094__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10735 = a;
var G__10736 = b;
var G__10737 = c;
var G__10738 = d;
var G__10739 = e;
var G__10740 = f;
var G__10741 = g;
var G__10742 = h;
var G__10743 = i;
var G__10744 = j;
var G__10745 = k;
var G__10746 = l;
var G__10747 = m;
var G__10748 = n;
var G__10749 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747,G__10748,G__10749) : self__.afn.call(null,G__10735,G__10736,G__10737,G__10738,G__10739,G__10740,G__10741,G__10742,G__10743,G__10744,G__10745,G__10746,G__10747,G__10748,G__10749));
});
var G__11094__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10750 = a;
var G__10751 = b;
var G__10752 = c;
var G__10753 = d;
var G__10754 = e;
var G__10755 = f;
var G__10756 = g;
var G__10757 = h;
var G__10758 = i;
var G__10759 = j;
var G__10760 = k;
var G__10761 = l;
var G__10762 = m;
var G__10763 = n;
var G__10764 = o;
var G__10765 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765) : self__.afn.call(null,G__10750,G__10751,G__10752,G__10753,G__10754,G__10755,G__10756,G__10757,G__10758,G__10759,G__10760,G__10761,G__10762,G__10763,G__10764,G__10765));
});
var G__11094__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10766 = a;
var G__10767 = b;
var G__10768 = c;
var G__10769 = d;
var G__10770 = e;
var G__10771 = f;
var G__10772 = g;
var G__10773 = h;
var G__10774 = i;
var G__10775 = j;
var G__10776 = k;
var G__10777 = l;
var G__10778 = m;
var G__10779 = n;
var G__10780 = o;
var G__10781 = p;
var G__10782 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782) : self__.afn.call(null,G__10766,G__10767,G__10768,G__10769,G__10770,G__10771,G__10772,G__10773,G__10774,G__10775,G__10776,G__10777,G__10778,G__10779,G__10780,G__10781,G__10782));
});
var G__11094__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10783 = a;
var G__10784 = b;
var G__10785 = c;
var G__10786 = d;
var G__10787 = e;
var G__10788 = f;
var G__10789 = g;
var G__10790 = h;
var G__10791 = i;
var G__10792 = j;
var G__10793 = k;
var G__10794 = l;
var G__10795 = m;
var G__10796 = n;
var G__10797 = o;
var G__10798 = p;
var G__10799 = q;
var G__10800 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800) : self__.afn.call(null,G__10783,G__10784,G__10785,G__10786,G__10787,G__10788,G__10789,G__10790,G__10791,G__10792,G__10793,G__10794,G__10795,G__10796,G__10797,G__10798,G__10799,G__10800));
});
var G__11094__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10801 = a;
var G__10802 = b;
var G__10803 = c;
var G__10804 = d;
var G__10805 = e;
var G__10806 = f;
var G__10807 = g;
var G__10808 = h;
var G__10809 = i;
var G__10810 = j;
var G__10811 = k;
var G__10812 = l;
var G__10813 = m;
var G__10814 = n;
var G__10815 = o;
var G__10816 = p;
var G__10817 = q;
var G__10818 = r;
var G__10819 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818,G__10819) : self__.afn.call(null,G__10801,G__10802,G__10803,G__10804,G__10805,G__10806,G__10807,G__10808,G__10809,G__10810,G__10811,G__10812,G__10813,G__10814,G__10815,G__10816,G__10817,G__10818,G__10819));
});
var G__11094__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10820 = a;
var G__10821 = b;
var G__10822 = c;
var G__10823 = d;
var G__10824 = e;
var G__10825 = f;
var G__10826 = g;
var G__10827 = h;
var G__10828 = i;
var G__10829 = j;
var G__10830 = k;
var G__10831 = l;
var G__10832 = m;
var G__10833 = n;
var G__10834 = o;
var G__10835 = p;
var G__10836 = q;
var G__10837 = r;
var G__10838 = s;
var G__10839 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839) : self__.afn.call(null,G__10820,G__10821,G__10822,G__10823,G__10824,G__10825,G__10826,G__10827,G__10828,G__10829,G__10830,G__10831,G__10832,G__10833,G__10834,G__10835,G__10836,G__10837,G__10838,G__10839));
});
var G__11094__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__10840 = self__.afn;
var G__10841 = a;
var G__10842 = b;
var G__10843 = c;
var G__10844 = d;
var G__10845 = e;
var G__10846 = f;
var G__10847 = g;
var G__10848 = h;
var G__10849 = i;
var G__10850 = j;
var G__10851 = k;
var G__10852 = l;
var G__10853 = m;
var G__10854 = n;
var G__10855 = o;
var G__10856 = p;
var G__10857 = q;
var G__10858 = r;
var G__10859 = s;
var G__10860 = t;
var G__10861 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861) : cljs.core.apply.call(null,G__10840,G__10841,G__10842,G__10843,G__10844,G__10845,G__10846,G__10847,G__10848,G__10849,G__10850,G__10851,G__10852,G__10853,G__10854,G__10855,G__10856,G__10857,G__10858,G__10859,G__10860,G__10861));
});
G__11094 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11094__1.call(this,self__);
case 2:
return G__11094__2.call(this,self__,a);
case 3:
return G__11094__3.call(this,self__,a,b);
case 4:
return G__11094__4.call(this,self__,a,b,c);
case 5:
return G__11094__5.call(this,self__,a,b,c,d);
case 6:
return G__11094__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11094__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11094__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11094__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11094__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11094__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11094__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11094__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11094__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11094__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11094__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11094__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11094__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11094__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11094__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11094__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11094__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11094.cljs$core$IFn$_invoke$arity$1 = G__11094__1;
G__11094.cljs$core$IFn$_invoke$arity$2 = G__11094__2;
G__11094.cljs$core$IFn$_invoke$arity$3 = G__11094__3;
G__11094.cljs$core$IFn$_invoke$arity$4 = G__11094__4;
G__11094.cljs$core$IFn$_invoke$arity$5 = G__11094__5;
G__11094.cljs$core$IFn$_invoke$arity$6 = G__11094__6;
G__11094.cljs$core$IFn$_invoke$arity$7 = G__11094__7;
G__11094.cljs$core$IFn$_invoke$arity$8 = G__11094__8;
G__11094.cljs$core$IFn$_invoke$arity$9 = G__11094__9;
G__11094.cljs$core$IFn$_invoke$arity$10 = G__11094__10;
G__11094.cljs$core$IFn$_invoke$arity$11 = G__11094__11;
G__11094.cljs$core$IFn$_invoke$arity$12 = G__11094__12;
G__11094.cljs$core$IFn$_invoke$arity$13 = G__11094__13;
G__11094.cljs$core$IFn$_invoke$arity$14 = G__11094__14;
G__11094.cljs$core$IFn$_invoke$arity$15 = G__11094__15;
G__11094.cljs$core$IFn$_invoke$arity$16 = G__11094__16;
G__11094.cljs$core$IFn$_invoke$arity$17 = G__11094__17;
G__11094.cljs$core$IFn$_invoke$arity$18 = G__11094__18;
G__11094.cljs$core$IFn$_invoke$arity$19 = G__11094__19;
G__11094.cljs$core$IFn$_invoke$arity$20 = G__11094__20;
G__11094.cljs$core$IFn$_invoke$arity$21 = G__11094__21;
G__11094.cljs$core$IFn$_invoke$arity$22 = G__11094__22;
return G__11094;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args10629){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10629)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__10862 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10862) : self__.afn.call(null,G__10862));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__10863 = a;
var G__10864 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10863,G__10864) : self__.afn.call(null,G__10863,G__10864));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__10865 = a;
var G__10866 = b;
var G__10867 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10865,G__10866,G__10867) : self__.afn.call(null,G__10865,G__10866,G__10867));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__10868 = a;
var G__10869 = b;
var G__10870 = c;
var G__10871 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10868,G__10869,G__10870,G__10871) : self__.afn.call(null,G__10868,G__10869,G__10870,G__10871));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__10872 = a;
var G__10873 = b;
var G__10874 = c;
var G__10875 = d;
var G__10876 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10872,G__10873,G__10874,G__10875,G__10876) : self__.afn.call(null,G__10872,G__10873,G__10874,G__10875,G__10876));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__10877 = a;
var G__10878 = b;
var G__10879 = c;
var G__10880 = d;
var G__10881 = e;
var G__10882 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10877,G__10878,G__10879,G__10880,G__10881,G__10882) : self__.afn.call(null,G__10877,G__10878,G__10879,G__10880,G__10881,G__10882));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__10883 = a;
var G__10884 = b;
var G__10885 = c;
var G__10886 = d;
var G__10887 = e;
var G__10888 = f;
var G__10889 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10883,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889) : self__.afn.call(null,G__10883,G__10884,G__10885,G__10886,G__10887,G__10888,G__10889));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__10890 = a;
var G__10891 = b;
var G__10892 = c;
var G__10893 = d;
var G__10894 = e;
var G__10895 = f;
var G__10896 = g;
var G__10897 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10890,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897) : self__.afn.call(null,G__10890,G__10891,G__10892,G__10893,G__10894,G__10895,G__10896,G__10897));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__10898 = a;
var G__10899 = b;
var G__10900 = c;
var G__10901 = d;
var G__10902 = e;
var G__10903 = f;
var G__10904 = g;
var G__10905 = h;
var G__10906 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906) : self__.afn.call(null,G__10898,G__10899,G__10900,G__10901,G__10902,G__10903,G__10904,G__10905,G__10906));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__10907 = a;
var G__10908 = b;
var G__10909 = c;
var G__10910 = d;
var G__10911 = e;
var G__10912 = f;
var G__10913 = g;
var G__10914 = h;
var G__10915 = i;
var G__10916 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916) : self__.afn.call(null,G__10907,G__10908,G__10909,G__10910,G__10911,G__10912,G__10913,G__10914,G__10915,G__10916));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__10917 = a;
var G__10918 = b;
var G__10919 = c;
var G__10920 = d;
var G__10921 = e;
var G__10922 = f;
var G__10923 = g;
var G__10924 = h;
var G__10925 = i;
var G__10926 = j;
var G__10927 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927) : self__.afn.call(null,G__10917,G__10918,G__10919,G__10920,G__10921,G__10922,G__10923,G__10924,G__10925,G__10926,G__10927));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__10928 = a;
var G__10929 = b;
var G__10930 = c;
var G__10931 = d;
var G__10932 = e;
var G__10933 = f;
var G__10934 = g;
var G__10935 = h;
var G__10936 = i;
var G__10937 = j;
var G__10938 = k;
var G__10939 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10928,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939) : self__.afn.call(null,G__10928,G__10929,G__10930,G__10931,G__10932,G__10933,G__10934,G__10935,G__10936,G__10937,G__10938,G__10939));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__10940 = a;
var G__10941 = b;
var G__10942 = c;
var G__10943 = d;
var G__10944 = e;
var G__10945 = f;
var G__10946 = g;
var G__10947 = h;
var G__10948 = i;
var G__10949 = j;
var G__10950 = k;
var G__10951 = l;
var G__10952 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952) : self__.afn.call(null,G__10940,G__10941,G__10942,G__10943,G__10944,G__10945,G__10946,G__10947,G__10948,G__10949,G__10950,G__10951,G__10952));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__10953 = a;
var G__10954 = b;
var G__10955 = c;
var G__10956 = d;
var G__10957 = e;
var G__10958 = f;
var G__10959 = g;
var G__10960 = h;
var G__10961 = i;
var G__10962 = j;
var G__10963 = k;
var G__10964 = l;
var G__10965 = m;
var G__10966 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966) : self__.afn.call(null,G__10953,G__10954,G__10955,G__10956,G__10957,G__10958,G__10959,G__10960,G__10961,G__10962,G__10963,G__10964,G__10965,G__10966));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__10967 = a;
var G__10968 = b;
var G__10969 = c;
var G__10970 = d;
var G__10971 = e;
var G__10972 = f;
var G__10973 = g;
var G__10974 = h;
var G__10975 = i;
var G__10976 = j;
var G__10977 = k;
var G__10978 = l;
var G__10979 = m;
var G__10980 = n;
var G__10981 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981) : self__.afn.call(null,G__10967,G__10968,G__10969,G__10970,G__10971,G__10972,G__10973,G__10974,G__10975,G__10976,G__10977,G__10978,G__10979,G__10980,G__10981));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__10982 = a;
var G__10983 = b;
var G__10984 = c;
var G__10985 = d;
var G__10986 = e;
var G__10987 = f;
var G__10988 = g;
var G__10989 = h;
var G__10990 = i;
var G__10991 = j;
var G__10992 = k;
var G__10993 = l;
var G__10994 = m;
var G__10995 = n;
var G__10996 = o;
var G__10997 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997) : self__.afn.call(null,G__10982,G__10983,G__10984,G__10985,G__10986,G__10987,G__10988,G__10989,G__10990,G__10991,G__10992,G__10993,G__10994,G__10995,G__10996,G__10997));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__10998 = a;
var G__10999 = b;
var G__11000 = c;
var G__11001 = d;
var G__11002 = e;
var G__11003 = f;
var G__11004 = g;
var G__11005 = h;
var G__11006 = i;
var G__11007 = j;
var G__11008 = k;
var G__11009 = l;
var G__11010 = m;
var G__11011 = n;
var G__11012 = o;
var G__11013 = p;
var G__11014 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014) : self__.afn.call(null,G__10998,G__10999,G__11000,G__11001,G__11002,G__11003,G__11004,G__11005,G__11006,G__11007,G__11008,G__11009,G__11010,G__11011,G__11012,G__11013,G__11014));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__11015 = a;
var G__11016 = b;
var G__11017 = c;
var G__11018 = d;
var G__11019 = e;
var G__11020 = f;
var G__11021 = g;
var G__11022 = h;
var G__11023 = i;
var G__11024 = j;
var G__11025 = k;
var G__11026 = l;
var G__11027 = m;
var G__11028 = n;
var G__11029 = o;
var G__11030 = p;
var G__11031 = q;
var G__11032 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024,G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031,G__11032) : self__.afn.call(null,G__11015,G__11016,G__11017,G__11018,G__11019,G__11020,G__11021,G__11022,G__11023,G__11024,G__11025,G__11026,G__11027,G__11028,G__11029,G__11030,G__11031,G__11032));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__11033 = a;
var G__11034 = b;
var G__11035 = c;
var G__11036 = d;
var G__11037 = e;
var G__11038 = f;
var G__11039 = g;
var G__11040 = h;
var G__11041 = i;
var G__11042 = j;
var G__11043 = k;
var G__11044 = l;
var G__11045 = m;
var G__11046 = n;
var G__11047 = o;
var G__11048 = p;
var G__11049 = q;
var G__11050 = r;
var G__11051 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051) : self__.afn.call(null,G__11033,G__11034,G__11035,G__11036,G__11037,G__11038,G__11039,G__11040,G__11041,G__11042,G__11043,G__11044,G__11045,G__11046,G__11047,G__11048,G__11049,G__11050,G__11051));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__11052 = a;
var G__11053 = b;
var G__11054 = c;
var G__11055 = d;
var G__11056 = e;
var G__11057 = f;
var G__11058 = g;
var G__11059 = h;
var G__11060 = i;
var G__11061 = j;
var G__11062 = k;
var G__11063 = l;
var G__11064 = m;
var G__11065 = n;
var G__11066 = o;
var G__11067 = p;
var G__11068 = q;
var G__11069 = r;
var G__11070 = s;
var G__11071 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071) : self__.afn.call(null,G__11052,G__11053,G__11054,G__11055,G__11056,G__11057,G__11058,G__11059,G__11060,G__11061,G__11062,G__11063,G__11064,G__11065,G__11066,G__11067,G__11068,G__11069,G__11070,G__11071));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11072 = self__.afn;
var G__11073 = a;
var G__11074 = b;
var G__11075 = c;
var G__11076 = d;
var G__11077 = e;
var G__11078 = f;
var G__11079 = g;
var G__11080 = h;
var G__11081 = i;
var G__11082 = j;
var G__11083 = k;
var G__11084 = l;
var G__11085 = m;
var G__11086 = n;
var G__11087 = o;
var G__11088 = p;
var G__11089 = q;
var G__11090 = r;
var G__11091 = s;
var G__11092 = t;
var G__11093 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11072,G__11073,G__11074,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092,G__11093) : cljs.core.apply.call(null,G__11072,G__11073,G__11074,G__11075,G__11076,G__11077,G__11078,G__11079,G__11080,G__11081,G__11082,G__11083,G__11084,G__11085,G__11086,G__11087,G__11088,G__11089,G__11090,G__11091,G__11092,G__11093));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__11098 = o;
if(G__11098){
var bit__4422__auto__ = (G__11098.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4422__auto__) || (G__11098.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__11098.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11098);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__11098);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3729__auto__ = !((o == null));
if(and__3729__auto__){
var G__11102 = o;
if(G__11102){
var bit__4422__auto__ = (G__11102.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4422__auto__) || (G__11102.cljs$core$IMeta$)){
return true;
} else {
if((!G__11102.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11102);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__11102);
}
} else {
return and__3729__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__11105__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__11106 = ret;
var G__11107 = cljs.core.first(ks);
var G__11108 = cljs.core.next(ks);
coll = G__11106;
k = G__11107;
ks = G__11108;
continue;
} else {
return ret;
}
}
break;
}
};
var G__11105 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11109__i = 0, G__11109__a = new Array(arguments.length -  2);
while (G__11109__i < G__11109__a.length) {G__11109__a[G__11109__i] = arguments[G__11109__i + 2]; ++G__11109__i;}
  ks = new cljs.core.IndexedSeq(G__11109__a,0);
} 
return G__11105__delegate.call(this,coll,k,ks);};
G__11105.cljs$lang$maxFixedArity = 2;
G__11105.cljs$lang$applyTo = (function (arglist__11110){
var coll = cljs.core.first(arglist__11110);
arglist__11110 = cljs.core.next(arglist__11110);
var k = cljs.core.first(arglist__11110);
var ks = cljs.core.rest(arglist__11110);
return G__11105__delegate(coll,k,ks);
});
G__11105.cljs$core$IFn$_invoke$arity$variadic = G__11105__delegate;
return G__11105;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__11111 = null;
if (arguments.length > 2) {
var G__11112__i = 0, G__11112__a = new Array(arguments.length -  2);
while (G__11112__i < G__11112__a.length) {G__11112__a[G__11112__i] = arguments[G__11112__i + 2]; ++G__11112__i;}
G__11111 = new cljs.core.IndexedSeq(G__11112__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__11111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11114 = x;
if(G__11114){
var bit__4422__auto__ = (G__11114.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4422__auto__) || (G__11114.cljs$core$ICollection$)){
return true;
} else {
if((!G__11114.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11114);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__11114);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11116 = x;
if(G__11116){
var bit__4422__auto__ = (G__11116.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4422__auto__) || (G__11116.cljs$core$ISet$)){
return true;
} else {
if((!G__11116.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11116);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__11116);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__11118 = x;
if(G__11118){
var bit__4422__auto__ = (G__11118.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4422__auto__) || (G__11118.cljs$core$IAssociative$)){
return true;
} else {
if((!G__11118.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11118);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__11118);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__11120 = x;
if(G__11120){
var bit__4422__auto__ = (G__11120.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4422__auto__) || (G__11120.cljs$core$ISequential$)){
return true;
} else {
if((!G__11120.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11120);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__11120);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__11122 = x;
if(G__11122){
var bit__4422__auto__ = (G__11122.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4422__auto__) || (G__11122.cljs$core$ISorted$)){
return true;
} else {
if((!G__11122.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11122);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__11122);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__11124 = x;
if(G__11124){
var bit__4422__auto__ = (G__11124.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4422__auto__) || (G__11124.cljs$core$IReduce$)){
return true;
} else {
if((!G__11124.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11124);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__11124);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__11126 = x;
if(G__11126){
var bit__4422__auto__ = (G__11126.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4422__auto__) || (G__11126.cljs$core$IMap$)){
return true;
} else {
if((!G__11126.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11126);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__11126);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__11128 = x;
if(G__11128){
var bit__4422__auto__ = (G__11128.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4422__auto__) || (G__11128.cljs$core$IVector$)){
return true;
} else {
if((!G__11128.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11128);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__11128);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__11130 = x;
if(G__11130){
var bit__4415__auto__ = (G__11130.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4415__auto__) || (G__11130.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj11136 = {};
return obj11136;
});
var js_obj__1 = (function() { 
var G__11139__delegate = function (keyvals){
var G__11137 = goog.object.create;
var G__11138 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__11137,G__11138) : cljs.core.apply.call(null,G__11137,G__11138));
};
var G__11139 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__11140__i = 0, G__11140__a = new Array(arguments.length -  0);
while (G__11140__i < G__11140__a.length) {G__11140__a[G__11140__i] = arguments[G__11140__i + 0]; ++G__11140__i;}
  keyvals = new cljs.core.IndexedSeq(G__11140__a,0);
} 
return G__11139__delegate.call(this,keyvals);};
G__11139.cljs$lang$maxFixedArity = 0;
G__11139.cljs$lang$applyTo = (function (arglist__11141){
var keyvals = cljs.core.seq(arglist__11141);
return G__11139__delegate(keyvals);
});
G__11139.cljs$core$IFn$_invoke$arity$variadic = G__11139__delegate;
return G__11139;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__11142 = null;
if (arguments.length > 0) {
var G__11143__i = 0, G__11143__a = new Array(arguments.length -  0);
while (G__11143__i < G__11143__a.length) {G__11143__a[G__11143__i] = arguments[G__11143__i + 0]; ++G__11143__i;}
G__11142 = new cljs.core.IndexedSeq(G__11143__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__11142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__11146_11148 = obj;
var G__11147_11149 = ((function (G__11146_11148,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__11146_11148,keys))
;
goog.object.forEach(G__11146_11148,G__11147_11149);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11150 = (i__$1 + (1));
var G__11151 = (j__$1 + (1));
var G__11152 = (len__$1 - (1));
i__$1 = G__11150;
j__$1 = G__11151;
len__$1 = G__11152;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__11153 = (i__$1 - (1));
var G__11154 = (j__$1 - (1));
var G__11155 = (len__$1 - (1));
i__$1 = G__11153;
j__$1 = G__11154;
len__$1 = G__11155;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj11157 = {};
return obj11157;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__11159 = s;
if(G__11159){
var bit__4422__auto__ = (G__11159.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4422__auto__) || (G__11159.cljs$core$ISeq$)){
return true;
} else {
if((!G__11159.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11159);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__11159);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__11161 = s;
if(G__11161){
var bit__4422__auto__ = (G__11161.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4422__auto__) || (G__11161.cljs$core$ISeqable$)){
return true;
} else {
if((!G__11161.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11161);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__11161);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3741__auto__ = cljs.core.fn_QMARK_(f);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var G__11165 = f;
if(G__11165){
var bit__4422__auto__ = (G__11165.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4422__auto__) || (G__11165.cljs$core$IFn$)){
return true;
} else {
if((!G__11165.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11165);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__11165);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__11178 = n;
return isNaN(G__11178);
})())) && (!((n === Infinity))) && (((function (){var G__11179 = n;
return parseFloat(G__11179);
})() === (function (){var G__11180 = n;
var G__11181 = (10);
return parseInt(G__11180,G__11181);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__11182__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__11183 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__11184 = etc;
s = G__11183;
xs = G__11184;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__11182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11185__i = 0, G__11185__a = new Array(arguments.length -  2);
while (G__11185__i < G__11185__a.length) {G__11185__a[G__11185__i] = arguments[G__11185__i + 2]; ++G__11185__i;}
  more = new cljs.core.IndexedSeq(G__11185__a,0);
} 
return G__11182__delegate.call(this,x,y,more);};
G__11182.cljs$lang$maxFixedArity = 2;
G__11182.cljs$lang$applyTo = (function (arglist__11186){
var x = cljs.core.first(arglist__11186);
arglist__11186 = cljs.core.next(arglist__11186);
var y = cljs.core.first(arglist__11186);
var more = cljs.core.rest(arglist__11186);
return G__11182__delegate(x,y,more);
});
G__11182.cljs$core$IFn$_invoke$arity$variadic = G__11182__delegate;
return G__11182;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__11187 = null;
if (arguments.length > 2) {
var G__11188__i = 0, G__11188__a = new Array(arguments.length -  2);
while (G__11188__i < G__11188__a.length) {G__11188__a[G__11188__i] = arguments[G__11188__i + 2]; ++G__11188__i;}
G__11187 = new cljs.core.IndexedSeq(G__11188__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11187);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__11192 = x;
if(G__11192){
var bit__4415__auto__ = (G__11192.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4415__auto__) || (G__11192.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__11193 = x;
var G__11194 = y;
return goog.array.defaultCompare(G__11193,G__11194);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__11199 = xs;
var G__11200 = ys;
var G__11201 = len;
var G__11202 = (n + (1));
xs = G__11199;
ys = G__11200;
len = G__11201;
n = G__11202;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__11207 = x;
var G__11208 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11207,G__11208) : f.call(null,G__11207,G__11208));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__11209 = y;
var G__11210 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11209,G__11210) : f.call(null,G__11209,G__11210));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__11216 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11216) : cljs.core.to_array.call(null,G__11216));
})();
var G__11217_11219 = a;
var G__11218_11220 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__11217_11219,G__11218_11220);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__11226 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11226) : keyfn.call(null,G__11226));
})(),(function (){var G__11227 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11227) : keyfn.call(null,G__11227));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__11233 = f;
var G__11234 = cljs.core.first(s);
var G__11235 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11233,G__11234,G__11235) : cljs.core.reduce.call(null,G__11233,G__11234,G__11235));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__11236 = val__$1;
var G__11237 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11236,G__11237) : f.call(null,G__11236,G__11237));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11238 = nval;
var G__11239 = cljs.core.next(coll__$1);
val__$1 = G__11238;
coll__$1 = G__11239;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__11243 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11243) : cljs.core.to_array.call(null,G__11243));
})();
var G__11244_11246 = a;
goog.array.shuffle(G__11244_11246);

var G__11245 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11245) : cljs.core.vec.call(null,G__11245));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__11249 = coll;
if(G__11249){
var bit__4415__auto__ = (G__11249.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4415__auto__) || (G__11249.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__11250 = coll;
if(G__11250){
var bit__4415__auto__ = (G__11250.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4415__auto__) || (G__11250.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__11259 = null;
var G__11259__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__11259__1 = (function (x){
var G__11256 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11256) : cf.call(null,G__11256));
});
var G__11259__2 = (function (x,y){
var G__11257 = x;
var G__11258 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11257,G__11258) : f.call(null,G__11257,G__11258));
});
G__11259 = function(x,y){
switch(arguments.length){
case 0:
return G__11259__0.call(this);
case 1:
return G__11259__1.call(this,x);
case 2:
return G__11259__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11259.cljs$core$IFn$_invoke$arity$0 = G__11259__0;
G__11259.cljs$core$IFn$_invoke$arity$1 = G__11259__1;
G__11259.cljs$core$IFn$_invoke$arity$2 = G__11259__2;
return G__11259;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__11266 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11266) : xform.call(null,G__11266));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__11267 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11267) : f__$1.call(null,G__11267));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__11268__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__11268 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11269__i = 0, G__11269__a = new Array(arguments.length -  2);
while (G__11269__i < G__11269__a.length) {G__11269__a[G__11269__i] = arguments[G__11269__i + 2]; ++G__11269__i;}
  more = new cljs.core.IndexedSeq(G__11269__a,0);
} 
return G__11268__delegate.call(this,x,y,more);};
G__11268.cljs$lang$maxFixedArity = 2;
G__11268.cljs$lang$applyTo = (function (arglist__11270){
var x = cljs.core.first(arglist__11270);
arglist__11270 = cljs.core.next(arglist__11270);
var y = cljs.core.first(arglist__11270);
var more = cljs.core.rest(arglist__11270);
return G__11268__delegate(x,y,more);
});
G__11268.cljs$core$IFn$_invoke$arity$variadic = G__11268__delegate;
return G__11268;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__11271 = null;
if (arguments.length > 2) {
var G__11272__i = 0, G__11272__a = new Array(arguments.length -  2);
while (G__11272__i < G__11272__a.length) {G__11272__a[G__11272__i] = arguments[G__11272__i + 2]; ++G__11272__i;}
G__11271 = new cljs.core.IndexedSeq(G__11272__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__11273__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__11273 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11274__i = 0, G__11274__a = new Array(arguments.length -  2);
while (G__11274__i < G__11274__a.length) {G__11274__a[G__11274__i] = arguments[G__11274__i + 2]; ++G__11274__i;}
  more = new cljs.core.IndexedSeq(G__11274__a,0);
} 
return G__11273__delegate.call(this,x,y,more);};
G__11273.cljs$lang$maxFixedArity = 2;
G__11273.cljs$lang$applyTo = (function (arglist__11275){
var x = cljs.core.first(arglist__11275);
arglist__11275 = cljs.core.next(arglist__11275);
var y = cljs.core.first(arglist__11275);
var more = cljs.core.rest(arglist__11275);
return G__11273__delegate(x,y,more);
});
G__11273.cljs$core$IFn$_invoke$arity$variadic = G__11273__delegate;
return G__11273;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__11276 = null;
if (arguments.length > 2) {
var G__11277__i = 0, G__11277__a = new Array(arguments.length -  2);
while (G__11277__i < G__11277__a.length) {G__11277__a[G__11277__i] = arguments[G__11277__i + 2]; ++G__11277__i;}
G__11276 = new cljs.core.IndexedSeq(G__11277__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__11278__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__11278 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11279__i = 0, G__11279__a = new Array(arguments.length -  2);
while (G__11279__i < G__11279__a.length) {G__11279__a[G__11279__i] = arguments[G__11279__i + 2]; ++G__11279__i;}
  more = new cljs.core.IndexedSeq(G__11279__a,0);
} 
return G__11278__delegate.call(this,x,y,more);};
G__11278.cljs$lang$maxFixedArity = 2;
G__11278.cljs$lang$applyTo = (function (arglist__11280){
var x = cljs.core.first(arglist__11280);
arglist__11280 = cljs.core.next(arglist__11280);
var y = cljs.core.first(arglist__11280);
var more = cljs.core.rest(arglist__11280);
return G__11278__delegate(x,y,more);
});
G__11278.cljs$core$IFn$_invoke$arity$variadic = G__11278__delegate;
return G__11278;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__11281 = null;
if (arguments.length > 2) {
var G__11282__i = 0, G__11282__a = new Array(arguments.length -  2);
while (G__11282__i < G__11282__a.length) {G__11282__a[G__11282__i] = arguments[G__11282__i + 2]; ++G__11282__i;}
G__11281 = new cljs.core.IndexedSeq(G__11282__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__11287__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11287 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11288__i = 0, G__11288__a = new Array(arguments.length -  2);
while (G__11288__i < G__11288__a.length) {G__11288__a[G__11288__i] = arguments[G__11288__i + 2]; ++G__11288__i;}
  more = new cljs.core.IndexedSeq(G__11288__a,0);
} 
return G__11287__delegate.call(this,x,y,more);};
G__11287.cljs$lang$maxFixedArity = 2;
G__11287.cljs$lang$applyTo = (function (arglist__11289){
var x = cljs.core.first(arglist__11289);
arglist__11289 = cljs.core.next(arglist__11289);
var y = cljs.core.first(arglist__11289);
var more = cljs.core.rest(arglist__11289);
return G__11287__delegate(x,y,more);
});
G__11287.cljs$core$IFn$_invoke$arity$variadic = G__11287__delegate;
return G__11287;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__11290 = null;
if (arguments.length > 2) {
var G__11291__i = 0, G__11291__a = new Array(arguments.length -  2);
while (G__11291__i < G__11291__a.length) {G__11291__a[G__11291__i] = arguments[G__11291__i + 2]; ++G__11291__i;}
G__11290 = new cljs.core.IndexedSeq(G__11291__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__11292__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__11293 = y;
var G__11294 = cljs.core.first(more);
var G__11295 = cljs.core.next(more);
x = G__11293;
y = G__11294;
more = G__11295;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11292 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11296__i = 0, G__11296__a = new Array(arguments.length -  2);
while (G__11296__i < G__11296__a.length) {G__11296__a[G__11296__i] = arguments[G__11296__i + 2]; ++G__11296__i;}
  more = new cljs.core.IndexedSeq(G__11296__a,0);
} 
return G__11292__delegate.call(this,x,y,more);};
G__11292.cljs$lang$maxFixedArity = 2;
G__11292.cljs$lang$applyTo = (function (arglist__11297){
var x = cljs.core.first(arglist__11297);
arglist__11297 = cljs.core.next(arglist__11297);
var y = cljs.core.first(arglist__11297);
var more = cljs.core.rest(arglist__11297);
return G__11292__delegate(x,y,more);
});
G__11292.cljs$core$IFn$_invoke$arity$variadic = G__11292__delegate;
return G__11292;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__11298 = null;
if (arguments.length > 2) {
var G__11299__i = 0, G__11299__a = new Array(arguments.length -  2);
while (G__11299__i < G__11299__a.length) {G__11299__a[G__11299__i] = arguments[G__11299__i + 2]; ++G__11299__i;}
G__11298 = new cljs.core.IndexedSeq(G__11299__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__11300__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__11301 = y;
var G__11302 = cljs.core.first(more);
var G__11303 = cljs.core.next(more);
x = G__11301;
y = G__11302;
more = G__11303;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11300 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11304__i = 0, G__11304__a = new Array(arguments.length -  2);
while (G__11304__i < G__11304__a.length) {G__11304__a[G__11304__i] = arguments[G__11304__i + 2]; ++G__11304__i;}
  more = new cljs.core.IndexedSeq(G__11304__a,0);
} 
return G__11300__delegate.call(this,x,y,more);};
G__11300.cljs$lang$maxFixedArity = 2;
G__11300.cljs$lang$applyTo = (function (arglist__11305){
var x = cljs.core.first(arglist__11305);
arglist__11305 = cljs.core.next(arglist__11305);
var y = cljs.core.first(arglist__11305);
var more = cljs.core.rest(arglist__11305);
return G__11300__delegate(x,y,more);
});
G__11300.cljs$core$IFn$_invoke$arity$variadic = G__11300__delegate;
return G__11300;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__11306 = null;
if (arguments.length > 2) {
var G__11307__i = 0, G__11307__a = new Array(arguments.length -  2);
while (G__11307__i < G__11307__a.length) {G__11307__a[G__11307__i] = arguments[G__11307__i + 2]; ++G__11307__i;}
G__11306 = new cljs.core.IndexedSeq(G__11307__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11306);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__11308__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__11309 = y;
var G__11310 = cljs.core.first(more);
var G__11311 = cljs.core.next(more);
x = G__11309;
y = G__11310;
more = G__11311;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11308 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11312__i = 0, G__11312__a = new Array(arguments.length -  2);
while (G__11312__i < G__11312__a.length) {G__11312__a[G__11312__i] = arguments[G__11312__i + 2]; ++G__11312__i;}
  more = new cljs.core.IndexedSeq(G__11312__a,0);
} 
return G__11308__delegate.call(this,x,y,more);};
G__11308.cljs$lang$maxFixedArity = 2;
G__11308.cljs$lang$applyTo = (function (arglist__11313){
var x = cljs.core.first(arglist__11313);
arglist__11313 = cljs.core.next(arglist__11313);
var y = cljs.core.first(arglist__11313);
var more = cljs.core.rest(arglist__11313);
return G__11308__delegate(x,y,more);
});
G__11308.cljs$core$IFn$_invoke$arity$variadic = G__11308__delegate;
return G__11308;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__11314 = null;
if (arguments.length > 2) {
var G__11315__i = 0, G__11315__a = new Array(arguments.length -  2);
while (G__11315__i < G__11315__a.length) {G__11315__a[G__11315__i] = arguments[G__11315__i + 2]; ++G__11315__i;}
G__11314 = new cljs.core.IndexedSeq(G__11315__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__11316__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__11317 = y;
var G__11318 = cljs.core.first(more);
var G__11319 = cljs.core.next(more);
x = G__11317;
y = G__11318;
more = G__11319;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11316 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11320__i = 0, G__11320__a = new Array(arguments.length -  2);
while (G__11320__i < G__11320__a.length) {G__11320__a[G__11320__i] = arguments[G__11320__i + 2]; ++G__11320__i;}
  more = new cljs.core.IndexedSeq(G__11320__a,0);
} 
return G__11316__delegate.call(this,x,y,more);};
G__11316.cljs$lang$maxFixedArity = 2;
G__11316.cljs$lang$applyTo = (function (arglist__11321){
var x = cljs.core.first(arglist__11321);
arglist__11321 = cljs.core.next(arglist__11321);
var y = cljs.core.first(arglist__11321);
var more = cljs.core.rest(arglist__11321);
return G__11316__delegate(x,y,more);
});
G__11316.cljs$core$IFn$_invoke$arity$variadic = G__11316__delegate;
return G__11316;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__11322 = null;
if (arguments.length > 2) {
var G__11323__i = 0, G__11323__a = new Array(arguments.length -  2);
while (G__11323__i < G__11323__a.length) {G__11323__a[G__11323__i] = arguments[G__11323__i + 2]; ++G__11323__i;}
G__11322 = new cljs.core.IndexedSeq(G__11323__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11322);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4058__auto__ = x;
var y__4059__auto__ = y;
return ((x__4058__auto__ > y__4059__auto__) ? x__4058__auto__ : y__4059__auto__);
});
var max__3 = (function() { 
var G__11324__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4058__auto__ = x;
var y__4059__auto__ = y;
return ((x__4058__auto__ > y__4059__auto__) ? x__4058__auto__ : y__4059__auto__);
})(),more);
};
var G__11324 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11325__i = 0, G__11325__a = new Array(arguments.length -  2);
while (G__11325__i < G__11325__a.length) {G__11325__a[G__11325__i] = arguments[G__11325__i + 2]; ++G__11325__i;}
  more = new cljs.core.IndexedSeq(G__11325__a,0);
} 
return G__11324__delegate.call(this,x,y,more);};
G__11324.cljs$lang$maxFixedArity = 2;
G__11324.cljs$lang$applyTo = (function (arglist__11326){
var x = cljs.core.first(arglist__11326);
arglist__11326 = cljs.core.next(arglist__11326);
var y = cljs.core.first(arglist__11326);
var more = cljs.core.rest(arglist__11326);
return G__11324__delegate(x,y,more);
});
G__11324.cljs$core$IFn$_invoke$arity$variadic = G__11324__delegate;
return G__11324;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__11327 = null;
if (arguments.length > 2) {
var G__11328__i = 0, G__11328__a = new Array(arguments.length -  2);
while (G__11328__i < G__11328__a.length) {G__11328__a[G__11328__i] = arguments[G__11328__i + 2]; ++G__11328__i;}
G__11327 = new cljs.core.IndexedSeq(G__11328__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4065__auto__ = x;
var y__4066__auto__ = y;
return ((x__4065__auto__ < y__4066__auto__) ? x__4065__auto__ : y__4066__auto__);
});
var min__3 = (function() { 
var G__11329__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4065__auto__ = x;
var y__4066__auto__ = y;
return ((x__4065__auto__ < y__4066__auto__) ? x__4065__auto__ : y__4066__auto__);
})(),more);
};
var G__11329 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11330__i = 0, G__11330__a = new Array(arguments.length -  2);
while (G__11330__i < G__11330__a.length) {G__11330__a[G__11330__i] = arguments[G__11330__i + 2]; ++G__11330__i;}
  more = new cljs.core.IndexedSeq(G__11330__a,0);
} 
return G__11329__delegate.call(this,x,y,more);};
G__11329.cljs$lang$maxFixedArity = 2;
G__11329.cljs$lang$applyTo = (function (arglist__11331){
var x = cljs.core.first(arglist__11331);
arglist__11331 = cljs.core.next(arglist__11331);
var y = cljs.core.first(arglist__11331);
var more = cljs.core.rest(arglist__11331);
return G__11329__delegate(x,y,more);
});
G__11329.cljs$core$IFn$_invoke$arity$variadic = G__11329__delegate;
return G__11329;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__11332 = null;
if (arguments.length > 2) {
var G__11333__i = 0, G__11333__a = new Array(arguments.length -  2);
while (G__11333__i < G__11333__a.length) {G__11333__a[G__11333__i] = arguments[G__11333__i + 2]; ++G__11333__i;}
G__11332 = new cljs.core.IndexedSeq(G__11333__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__11334__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__11334 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11335__i = 0, G__11335__a = new Array(arguments.length -  2);
while (G__11335__i < G__11335__a.length) {G__11335__a[G__11335__i] = arguments[G__11335__i + 2]; ++G__11335__i;}
  more = new cljs.core.IndexedSeq(G__11335__a,0);
} 
return G__11334__delegate.call(this,x,y,more);};
G__11334.cljs$lang$maxFixedArity = 2;
G__11334.cljs$lang$applyTo = (function (arglist__11336){
var x = cljs.core.first(arglist__11336);
arglist__11336 = cljs.core.next(arglist__11336);
var y = cljs.core.first(arglist__11336);
var more = cljs.core.rest(arglist__11336);
return G__11334__delegate(x,y,more);
});
G__11334.cljs$core$IFn$_invoke$arity$variadic = G__11334__delegate;
return G__11334;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__11337 = null;
if (arguments.length > 2) {
var G__11338__i = 0, G__11338__a = new Array(arguments.length -  2);
while (G__11338__i < G__11338__a.length) {G__11338__a[G__11338__i] = arguments[G__11338__i + 2]; ++G__11338__i;}
G__11337 = new cljs.core.IndexedSeq(G__11338__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11337);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__11339__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__11339 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11340__i = 0, G__11340__a = new Array(arguments.length -  2);
while (G__11340__i < G__11340__a.length) {G__11340__a[G__11340__i] = arguments[G__11340__i + 2]; ++G__11340__i;}
  more = new cljs.core.IndexedSeq(G__11340__a,0);
} 
return G__11339__delegate.call(this,x,y,more);};
G__11339.cljs$lang$maxFixedArity = 2;
G__11339.cljs$lang$applyTo = (function (arglist__11341){
var x = cljs.core.first(arglist__11341);
arglist__11341 = cljs.core.next(arglist__11341);
var y = cljs.core.first(arglist__11341);
var more = cljs.core.rest(arglist__11341);
return G__11339__delegate(x,y,more);
});
G__11339.cljs$core$IFn$_invoke$arity$variadic = G__11339__delegate;
return G__11339;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__11342 = null;
if (arguments.length > 2) {
var G__11343__i = 0, G__11343__a = new Array(arguments.length -  2);
while (G__11343__i < G__11343__a.length) {G__11343__a[G__11343__i] = arguments[G__11343__i + 2]; ++G__11343__i;}
G__11342 = new cljs.core.IndexedSeq(G__11343__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11342);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__11348__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__11348 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11349__i = 0, G__11349__a = new Array(arguments.length -  2);
while (G__11349__i < G__11349__a.length) {G__11349__a[G__11349__i] = arguments[G__11349__i + 2]; ++G__11349__i;}
  more = new cljs.core.IndexedSeq(G__11349__a,0);
} 
return G__11348__delegate.call(this,x,y,more);};
G__11348.cljs$lang$maxFixedArity = 2;
G__11348.cljs$lang$applyTo = (function (arglist__11350){
var x = cljs.core.first(arglist__11350);
arglist__11350 = cljs.core.next(arglist__11350);
var y = cljs.core.first(arglist__11350);
var more = cljs.core.rest(arglist__11350);
return G__11348__delegate(x,y,more);
});
G__11348.cljs$core$IFn$_invoke$arity$variadic = G__11348__delegate;
return G__11348;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__11351 = null;
if (arguments.length > 2) {
var G__11352__i = 0, G__11352__a = new Array(arguments.length -  2);
while (G__11352__i < G__11352__a.length) {G__11352__a[G__11352__i] = arguments[G__11352__i + 2]; ++G__11352__i;}
G__11351 = new cljs.core.IndexedSeq(G__11352__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__11353__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__11353 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11354__i = 0, G__11354__a = new Array(arguments.length -  2);
while (G__11354__i < G__11354__a.length) {G__11354__a[G__11354__i] = arguments[G__11354__i + 2]; ++G__11354__i;}
  more = new cljs.core.IndexedSeq(G__11354__a,0);
} 
return G__11353__delegate.call(this,x,y,more);};
G__11353.cljs$lang$maxFixedArity = 2;
G__11353.cljs$lang$applyTo = (function (arglist__11355){
var x = cljs.core.first(arglist__11355);
arglist__11355 = cljs.core.next(arglist__11355);
var y = cljs.core.first(arglist__11355);
var more = cljs.core.rest(arglist__11355);
return G__11353__delegate(x,y,more);
});
G__11353.cljs$core$IFn$_invoke$arity$variadic = G__11353__delegate;
return G__11353;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__11356 = null;
if (arguments.length > 2) {
var G__11357__i = 0, G__11357__a = new Array(arguments.length -  2);
while (G__11357__i < G__11357__a.length) {G__11357__a[G__11357__i] = arguments[G__11357__i + 2]; ++G__11357__i;}
G__11356 = new cljs.core.IndexedSeq(G__11357__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__11358__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__11358 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11359__i = 0, G__11359__a = new Array(arguments.length -  2);
while (G__11359__i < G__11359__a.length) {G__11359__a[G__11359__i] = arguments[G__11359__i + 2]; ++G__11359__i;}
  more = new cljs.core.IndexedSeq(G__11359__a,0);
} 
return G__11358__delegate.call(this,x,y,more);};
G__11358.cljs$lang$maxFixedArity = 2;
G__11358.cljs$lang$applyTo = (function (arglist__11360){
var x = cljs.core.first(arglist__11360);
arglist__11360 = cljs.core.next(arglist__11360);
var y = cljs.core.first(arglist__11360);
var more = cljs.core.rest(arglist__11360);
return G__11358__delegate(x,y,more);
});
G__11358.cljs$core$IFn$_invoke$arity$variadic = G__11358__delegate;
return G__11358;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__11361 = null;
if (arguments.length > 2) {
var G__11362__i = 0, G__11362__a = new Array(arguments.length -  2);
while (G__11362__i < G__11362__a.length) {G__11362__a[G__11362__i] = arguments[G__11362__i + 2]; ++G__11362__i;}
G__11361 = new cljs.core.IndexedSeq(G__11362__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__11365 = x;
var G__11366 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11365,G__11366) : cljs.core.mod.call(null,G__11365,G__11366));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__11367__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__11367 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11368__i = 0, G__11368__a = new Array(arguments.length -  2);
while (G__11368__i < G__11368__a.length) {G__11368__a[G__11368__i] = arguments[G__11368__i + 2]; ++G__11368__i;}
  more = new cljs.core.IndexedSeq(G__11368__a,0);
} 
return G__11367__delegate.call(this,x,y,more);};
G__11367.cljs$lang$maxFixedArity = 2;
G__11367.cljs$lang$applyTo = (function (arglist__11369){
var x = cljs.core.first(arglist__11369);
arglist__11369 = cljs.core.next(arglist__11369);
var y = cljs.core.first(arglist__11369);
var more = cljs.core.rest(arglist__11369);
return G__11367__delegate(x,y,more);
});
G__11367.cljs$core$IFn$_invoke$arity$variadic = G__11367__delegate;
return G__11367;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__11370 = null;
if (arguments.length > 2) {
var G__11371__i = 0, G__11371__a = new Array(arguments.length -  2);
while (G__11371__i < G__11371__a.length) {G__11371__a[G__11371__i] = arguments[G__11371__i + 2]; ++G__11371__i;}
G__11370 = new cljs.core.IndexedSeq(G__11371__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__11372__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__11372 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11373__i = 0, G__11373__a = new Array(arguments.length -  2);
while (G__11373__i < G__11373__a.length) {G__11373__a[G__11373__i] = arguments[G__11373__i + 2]; ++G__11373__i;}
  more = new cljs.core.IndexedSeq(G__11373__a,0);
} 
return G__11372__delegate.call(this,x,y,more);};
G__11372.cljs$lang$maxFixedArity = 2;
G__11372.cljs$lang$applyTo = (function (arglist__11374){
var x = cljs.core.first(arglist__11374);
arglist__11374 = cljs.core.next(arglist__11374);
var y = cljs.core.first(arglist__11374);
var more = cljs.core.rest(arglist__11374);
return G__11372__delegate(x,y,more);
});
G__11372.cljs$core$IFn$_invoke$arity$variadic = G__11372__delegate;
return G__11372;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__11375 = null;
if (arguments.length > 2) {
var G__11376__i = 0, G__11376__a = new Array(arguments.length -  2);
while (G__11376__i < G__11376__a.length) {G__11376__a[G__11376__i] = arguments[G__11376__i + 2]; ++G__11376__i;}
G__11375 = new cljs.core.IndexedSeq(G__11376__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11375);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__11379 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11379) : Math.floor.call(null,G__11379));
} else {
var G__11380 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11380) : Math.ceil.call(null,G__11380));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
*/
cljs.core.bit_xor = (function bit_xor(x,y){
return (x ^ y);
});
/**
* Bitwise and
*/
cljs.core.bit_and = (function bit_and(x,y){
return (x & y);
});
/**
* Bitwise or
*/
cljs.core.bit_or = (function bit_or(x,y){
return (x | y);
});
/**
* Bitwise and
*/
cljs.core.bit_and_not = (function bit_and_not(x,y){
return (x & ~y);
});
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__11385__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11386 = y;
var G__11387 = cljs.core.first(more);
var G__11388 = cljs.core.next(more);
x = G__11386;
y = G__11387;
more = G__11388;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11385 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11389__i = 0, G__11389__a = new Array(arguments.length -  2);
while (G__11389__i < G__11389__a.length) {G__11389__a[G__11389__i] = arguments[G__11389__i + 2]; ++G__11389__i;}
  more = new cljs.core.IndexedSeq(G__11389__a,0);
} 
return G__11385__delegate.call(this,x,y,more);};
G__11385.cljs$lang$maxFixedArity = 2;
G__11385.cljs$lang$applyTo = (function (arglist__11390){
var x = cljs.core.first(arglist__11390);
arglist__11390 = cljs.core.next(arglist__11390);
var y = cljs.core.first(arglist__11390);
var more = cljs.core.rest(arglist__11390);
return G__11385__delegate(x,y,more);
});
G__11385.cljs$core$IFn$_invoke$arity$variadic = G__11385__delegate;
return G__11385;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__11391 = null;
if (arguments.length > 2) {
var G__11392__i = 0, G__11392__a = new Array(arguments.length -  2);
while (G__11392__i < G__11392__a.length) {G__11392__a[G__11392__i] = arguments[G__11392__i + 2]; ++G__11392__i;}
G__11391 = new cljs.core.IndexedSeq(G__11392__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__11393 = (n__$1 - (1));
var G__11394 = cljs.core.next(xs);
n__$1 = G__11393;
xs = G__11394;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__11398 = x;
return goog.string.buildString(G__11398);
}
});
var str__2 = (function() { 
var G__11399__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__11400 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__11401 = cljs.core.next(more);
sb = G__11400;
more = G__11401;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__11399 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__11402__i = 0, G__11402__a = new Array(arguments.length -  1);
while (G__11402__i < G__11402__a.length) {G__11402__a[G__11402__i] = arguments[G__11402__i + 1]; ++G__11402__i;}
  ys = new cljs.core.IndexedSeq(G__11402__a,0);
} 
return G__11399__delegate.call(this,x,ys);};
G__11399.cljs$lang$maxFixedArity = 1;
G__11399.cljs$lang$applyTo = (function (arglist__11403){
var x = cljs.core.first(arglist__11403);
var ys = cljs.core.rest(arglist__11403);
return G__11399__delegate(x,ys);
});
G__11399.cljs$core$IFn$_invoke$arity$variadic = G__11399__delegate;
return G__11399;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__11404 = null;
if (arguments.length > 1) {
var G__11405__i = 0, G__11405__a = new Array(arguments.length -  1);
while (G__11405__i < G__11405__a.length) {G__11405__a[G__11405__i] = arguments[G__11405__i + 1]; ++G__11405__i;}
G__11404 = new cljs.core.IndexedSeq(G__11405__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11404);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__11406 = cljs.core.next(xs);
var G__11407 = cljs.core.next(ys);
xs = G__11406;
ys = G__11407;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__11408 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__11409 = cljs.core.next(s);
res = G__11408;
s = G__11409;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__11414 = ((h + (cljs.core.hash((function (){var G__11412 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11412) : cljs.core.key.call(null,G__11412));
})()) ^ cljs.core.hash((function (){var G__11413 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11413) : cljs.core.val.call(null,G__11413));
})()))) % (4503599627370496));
var G__11415 = cljs.core.next(s);
h = G__11414;
s = G__11415;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__11416 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__11417 = cljs.core.next(s__$1);
h = G__11416;
s__$1 = G__11417;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__11428_11438 = cljs.core.seq(fn_map);
var chunk__11429_11439 = null;
var count__11430_11440 = (0);
var i__11431_11441 = (0);
while(true){
if((i__11431_11441 < count__11430_11440)){
var vec__11432_11442 = chunk__11429_11439.cljs$core$IIndexed$_nth$arity$2(null,i__11431_11441);
var key_name_11443 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11432_11442,(0),null);
var f_11444 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11432_11442,(1),null);
var str_name_11445 = (function (){var G__11433 = key_name_11443;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11433) : cljs.core.name.call(null,G__11433));
})();
(obj[str_name_11445] = f_11444);

var G__11446 = seq__11428_11438;
var G__11447 = chunk__11429_11439;
var G__11448 = count__11430_11440;
var G__11449 = (i__11431_11441 + (1));
seq__11428_11438 = G__11446;
chunk__11429_11439 = G__11447;
count__11430_11440 = G__11448;
i__11431_11441 = G__11449;
continue;
} else {
var temp__4126__auto___11450 = cljs.core.seq(seq__11428_11438);
if(temp__4126__auto___11450){
var seq__11428_11451__$1 = temp__4126__auto___11450;
if(cljs.core.chunked_seq_QMARK_(seq__11428_11451__$1)){
var c__4528__auto___11452 = (function (){var G__11434 = seq__11428_11451__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__11434) : cljs.core.chunk_first.call(null,G__11434));
})();
var G__11453 = (function (){var G__11435 = seq__11428_11451__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__11435) : cljs.core.chunk_rest.call(null,G__11435));
})();
var G__11454 = c__4528__auto___11452;
var G__11455 = cljs.core.count(c__4528__auto___11452);
var G__11456 = (0);
seq__11428_11438 = G__11453;
chunk__11429_11439 = G__11454;
count__11430_11440 = G__11455;
i__11431_11441 = G__11456;
continue;
} else {
var vec__11436_11457 = cljs.core.first(seq__11428_11451__$1);
var key_name_11458 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11436_11457,(0),null);
var f_11459 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11436_11457,(1),null);
var str_name_11460 = (function (){var G__11437 = key_name_11458;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11437) : cljs.core.name.call(null,G__11437));
})();
(obj[str_name_11460] = f_11459);

var G__11461 = cljs.core.next(seq__11428_11451__$1);
var G__11462 = null;
var G__11463 = (0);
var G__11464 = (0);
seq__11428_11438 = G__11461;
chunk__11429_11439 = G__11462;
count__11430_11440 = G__11463;
i__11431_11441 = G__11464;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__11466 = coll;
if(G__11466){
var bit__4422__auto__ = (G__11466.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4422__auto__) || (G__11466.cljs$core$IReversible$)){
return true;
} else {
if((!G__11466.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__11466);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__11466);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__11467 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__11467;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__11468 = (i - (1));
var G__11469 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__11468;
r = G__11469;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__11470__i = 0, G__11470__a = new Array(arguments.length -  0);
while (G__11470__i < G__11470__a.length) {G__11470__a[G__11470__i] = arguments[G__11470__i + 0]; ++G__11470__i;}
  xs = new cljs.core.IndexedSeq(G__11470__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__11471){
var xs = cljs.core.seq(arglist__11471);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3741__auto__ = (coll == null);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var G__11475 = coll;
if(G__11475){
var bit__4415__auto__ = (G__11475.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4415__auto__) || (G__11475.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__11477 = x;
if(G__11477){
var bit__4422__auto__ = (G__11477.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4422__auto__) || (G__11477.cljs$core$IList$)){
return true;
} else {
if((!G__11477.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__11477);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__11477);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3729__auto__ = cljs.core.not(a.ns);
if(and__3729__auto__){
return b.ns;
} else {
return and__3729__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11484 = a.ns;
var G__11485 = b.ns;
return goog.array.defaultCompare(G__11484,G__11485);
})();
if(((0) === nsc)){
var G__11486 = a.name;
var G__11487 = b.name;
return goog.array.defaultCompare(G__11486,G__11487);
} else {
return nsc;
}
}
} else {
var G__11488 = a.name;
var G__11489 = b.name;
return goog.array.defaultCompare(G__11488,G__11489);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4162__auto__ = self__._hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__11491 = null;
var G__11491__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__11491__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__11491 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11491__2.call(this,self__,coll);
case 3:
return G__11491__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11491.cljs$core$IFn$_invoke$arity$2 = G__11491__2;
G__11491.cljs$core$IFn$_invoke$arity$3 = G__11491__3;
return G__11491;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args11490){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11490)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__11493 = x;
if(G__11493){
var bit__4415__auto__ = (G__11493.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4415__auto__) || (G__11493.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__11495 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11495) : cljs.core.name.call(null,G__11495));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__11496 = ls.sval();
ls = G__11496;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__11498 = s;
if(G__11498){
var bit__4415__auto__ = (G__11498.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4415__auto__) || (G__11498.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__11499 = cljs.core.next(s__$1);
s__$1 = G__11499;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_11500 = (0);
var xs_11501 = cljs.core.seq(coll);
while(true){
if(xs_11501){
(ret[i_11500] = cljs.core.to_array(cljs.core.first(xs_11501)));

var G__11502 = (i_11500 + (1));
var G__11503 = cljs.core.next(xs_11501);
i_11500 = G__11502;
xs_11501 = G__11503;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11506 = (i + (1));
var G__11507 = cljs.core.next(s__$1);
i = G__11506;
s__$1 = G__11507;
continue;
} else {
return a;
}
break;
}
} else {
var n__4628__auto___11508 = size;
var i_11509 = (0);
while(true){
if((i_11509 < n__4628__auto___11508)){
(a[i_11509] = init_val_or_seq);

var G__11510 = (i_11509 + (1));
i_11509 = G__11510;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11513 = (i + (1));
var G__11514 = cljs.core.next(s__$1);
i = G__11513;
s__$1 = G__11514;
continue;
} else {
return a;
}
break;
}
} else {
var n__4628__auto___11515 = size;
var i_11516 = (0);
while(true){
if((i_11516 < n__4628__auto___11515)){
(a[i_11516] = init_val_or_seq);

var G__11517 = (i_11516 + (1));
i_11516 = G__11517;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11520 = (i + (1));
var G__11521 = cljs.core.next(s__$1);
i = G__11520;
s__$1 = G__11521;
continue;
} else {
return a;
}
break;
}
} else {
var n__4628__auto___11522 = size;
var i_11523 = (0);
while(true){
if((i_11523 < n__4628__auto___11522)){
(a[i_11523] = init_val_or_seq);

var G__11524 = (i_11523 + (1));
i_11523 = G__11524;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__11527 = (i + (1));
var G__11528 = cljs.core.next(s__$1);
i = G__11527;
s__$1 = G__11528;
continue;
} else {
return a;
}
break;
}
} else {
var n__4628__auto___11529 = size;
var i_11530 = (0);
while(true){
if((i_11530 < n__4628__auto___11529)){
(a[i_11530] = init_val_or_seq);

var G__11531 = (i_11530 + (1));
i_11530 = G__11531;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__11532 = cljs.core.next(s__$1);
var G__11533 = (i - (1));
var G__11534 = (sum + (1));
s__$1 = G__11532;
i = G__11533;
sum = G__11534;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__11554__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__11554 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__11555__i = 0, G__11555__a = new Array(arguments.length -  2);
while (G__11555__i < G__11555__a.length) {G__11555__a[G__11555__i] = arguments[G__11555__i + 2]; ++G__11555__i;}
  zs = new cljs.core.IndexedSeq(G__11555__a,0);
} 
return G__11554__delegate.call(this,x,y,zs);};
G__11554.cljs$lang$maxFixedArity = 2;
G__11554.cljs$lang$applyTo = (function (arglist__11556){
var x = cljs.core.first(arglist__11556);
arglist__11556 = cljs.core.next(arglist__11556);
var y = cljs.core.first(arglist__11556);
var zs = cljs.core.rest(arglist__11556);
return G__11554__delegate(x,y,zs);
});
G__11554.cljs$core$IFn$_invoke$arity$variadic = G__11554__delegate;
return G__11554;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__11557 = null;
if (arguments.length > 2) {
var G__11558__i = 0, G__11558__a = new Array(arguments.length -  2);
while (G__11558__i < G__11558__a.length) {G__11558__a[G__11558__i] = arguments[G__11558__i + 2]; ++G__11558__i;}
G__11557 = new cljs.core.IndexedSeq(G__11558__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__11559__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__11559 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__11560__i = 0, G__11560__a = new Array(arguments.length -  4);
while (G__11560__i < G__11560__a.length) {G__11560__a[G__11560__i] = arguments[G__11560__i + 4]; ++G__11560__i;}
  more = new cljs.core.IndexedSeq(G__11560__a,0);
} 
return G__11559__delegate.call(this,a,b,c,d,more);};
G__11559.cljs$lang$maxFixedArity = 4;
G__11559.cljs$lang$applyTo = (function (arglist__11561){
var a = cljs.core.first(arglist__11561);
arglist__11561 = cljs.core.next(arglist__11561);
var b = cljs.core.first(arglist__11561);
arglist__11561 = cljs.core.next(arglist__11561);
var c = cljs.core.first(arglist__11561);
arglist__11561 = cljs.core.next(arglist__11561);
var d = cljs.core.first(arglist__11561);
var more = cljs.core.rest(arglist__11561);
return G__11559__delegate(a,b,c,d,more);
});
G__11559.cljs$core$IFn$_invoke$arity$variadic = G__11559__delegate;
return G__11559;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__11562 = null;
if (arguments.length > 4) {
var G__11563__i = 0, G__11563__a = new Array(arguments.length -  4);
while (G__11563__i < G__11563__a.length) {G__11563__a[G__11563__i] = arguments[G__11563__i + 4]; ++G__11563__i;}
G__11562 = new cljs.core.IndexedSeq(G__11563__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__11562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__11564__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11565 = ntcoll;
var G__11566 = cljs.core.first(vals);
var G__11567 = cljs.core.next(vals);
tcoll = G__11565;
val = G__11566;
vals = G__11567;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11564 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11568__i = 0, G__11568__a = new Array(arguments.length -  2);
while (G__11568__i < G__11568__a.length) {G__11568__a[G__11568__i] = arguments[G__11568__i + 2]; ++G__11568__i;}
  vals = new cljs.core.IndexedSeq(G__11568__a,0);
} 
return G__11564__delegate.call(this,tcoll,val,vals);};
G__11564.cljs$lang$maxFixedArity = 2;
G__11564.cljs$lang$applyTo = (function (arglist__11569){
var tcoll = cljs.core.first(arglist__11569);
arglist__11569 = cljs.core.next(arglist__11569);
var val = cljs.core.first(arglist__11569);
var vals = cljs.core.rest(arglist__11569);
return G__11564__delegate(tcoll,val,vals);
});
G__11564.cljs$core$IFn$_invoke$arity$variadic = G__11564__delegate;
return G__11564;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__11570 = null;
if (arguments.length > 2) {
var G__11571__i = 0, G__11571__a = new Array(arguments.length -  2);
while (G__11571__i < G__11571__a.length) {G__11571__a[G__11571__i] = arguments[G__11571__i + 2]; ++G__11571__i;}
G__11570 = new cljs.core.IndexedSeq(G__11571__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__11572__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__11573 = ntcoll;
var G__11574 = cljs.core.first(kvs);
var G__11575 = cljs.core.second(kvs);
var G__11576 = cljs.core.nnext(kvs);
tcoll = G__11573;
key = G__11574;
val = G__11575;
kvs = G__11576;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11572 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__11577__i = 0, G__11577__a = new Array(arguments.length -  3);
while (G__11577__i < G__11577__a.length) {G__11577__a[G__11577__i] = arguments[G__11577__i + 3]; ++G__11577__i;}
  kvs = new cljs.core.IndexedSeq(G__11577__a,0);
} 
return G__11572__delegate.call(this,tcoll,key,val,kvs);};
G__11572.cljs$lang$maxFixedArity = 3;
G__11572.cljs$lang$applyTo = (function (arglist__11578){
var tcoll = cljs.core.first(arglist__11578);
arglist__11578 = cljs.core.next(arglist__11578);
var key = cljs.core.first(arglist__11578);
arglist__11578 = cljs.core.next(arglist__11578);
var val = cljs.core.first(arglist__11578);
var kvs = cljs.core.rest(arglist__11578);
return G__11572__delegate(tcoll,key,val,kvs);
});
G__11572.cljs$core$IFn$_invoke$arity$variadic = G__11572__delegate;
return G__11572;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__11579 = null;
if (arguments.length > 3) {
var G__11580__i = 0, G__11580__a = new Array(arguments.length -  3);
while (G__11580__i < G__11580__a.length) {G__11580__a[G__11580__i] = arguments[G__11580__i + 3]; ++G__11580__i;}
G__11579 = new cljs.core.IndexedSeq(G__11580__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__11579);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__11581__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__11582 = ntcoll;
var G__11583 = cljs.core.first(ks);
var G__11584 = cljs.core.next(ks);
tcoll = G__11582;
key = G__11583;
ks = G__11584;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11581 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__11585__i = 0, G__11585__a = new Array(arguments.length -  2);
while (G__11585__i < G__11585__a.length) {G__11585__a[G__11585__i] = arguments[G__11585__i + 2]; ++G__11585__i;}
  ks = new cljs.core.IndexedSeq(G__11585__a,0);
} 
return G__11581__delegate.call(this,tcoll,key,ks);};
G__11581.cljs$lang$maxFixedArity = 2;
G__11581.cljs$lang$applyTo = (function (arglist__11586){
var tcoll = cljs.core.first(arglist__11586);
arglist__11586 = cljs.core.next(arglist__11586);
var key = cljs.core.first(arglist__11586);
var ks = cljs.core.rest(arglist__11586);
return G__11581__delegate(tcoll,key,ks);
});
G__11581.cljs$core$IFn$_invoke$arity$variadic = G__11581__delegate;
return G__11581;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__11587 = null;
if (arguments.length > 2) {
var G__11588__i = 0, G__11588__a = new Array(arguments.length -  2);
while (G__11588__i < G__11588__a.length) {G__11588__a[G__11588__i] = arguments[G__11588__i + 2]; ++G__11588__i;}
G__11587 = new cljs.core.IndexedSeq(G__11588__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__11587);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__11589__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__11590 = ntcoll;
var G__11591 = cljs.core.first(vals);
var G__11592 = cljs.core.next(vals);
tcoll = G__11590;
val = G__11591;
vals = G__11592;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__11589 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__11593__i = 0, G__11593__a = new Array(arguments.length -  2);
while (G__11593__i < G__11593__a.length) {G__11593__a[G__11593__i] = arguments[G__11593__i + 2]; ++G__11593__i;}
  vals = new cljs.core.IndexedSeq(G__11593__a,0);
} 
return G__11589__delegate.call(this,tcoll,val,vals);};
G__11589.cljs$lang$maxFixedArity = 2;
G__11589.cljs$lang$applyTo = (function (arglist__11594){
var tcoll = cljs.core.first(arglist__11594);
arglist__11594 = cljs.core.next(arglist__11594);
var val = cljs.core.first(arglist__11594);
var vals = cljs.core.rest(arglist__11594);
return G__11589__delegate(tcoll,val,vals);
});
G__11589.cljs$core$IFn$_invoke$arity$variadic = G__11589__delegate;
return G__11589;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__11595 = null;
if (arguments.length > 2) {
var G__11596__i = 0, G__11596__a = new Array(arguments.length -  2);
while (G__11596__i < G__11596__a.length) {G__11596__a[G__11596__i] = arguments[G__11596__i + 2]; ++G__11596__i;}
G__11595 = new cljs.core.IndexedSeq(G__11596__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__11595);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4672 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4672);
} else {
var G__11807 = a4672;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11807) : f.call(null,G__11807));
}
} else {
var b4673 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4672,b4673);
} else {
var G__11808 = a4672;
var G__11809 = b4673;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11808,G__11809) : f.call(null,G__11808,G__11809));
}
} else {
var c4674 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4672,b4673,c4674);
} else {
var G__11810 = a4672;
var G__11811 = b4673;
var G__11812 = c4674;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11810,G__11811,G__11812) : f.call(null,G__11810,G__11811,G__11812));
}
} else {
var d4675 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4672,b4673,c4674,d4675);
} else {
var G__11813 = a4672;
var G__11814 = b4673;
var G__11815 = c4674;
var G__11816 = d4675;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11813,G__11814,G__11815,G__11816) : f.call(null,G__11813,G__11814,G__11815,G__11816));
}
} else {
var e4676 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4672,b4673,c4674,d4675,e4676);
} else {
var G__11817 = a4672;
var G__11818 = b4673;
var G__11819 = c4674;
var G__11820 = d4675;
var G__11821 = e4676;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11817,G__11818,G__11819,G__11820,G__11821) : f.call(null,G__11817,G__11818,G__11819,G__11820,G__11821));
}
} else {
var f4677 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4672,b4673,c4674,d4675,e4676,f4677);
} else {
var G__11822 = a4672;
var G__11823 = b4673;
var G__11824 = c4674;
var G__11825 = d4675;
var G__11826 = e4676;
var G__11827 = f4677;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11822,G__11823,G__11824,G__11825,G__11826,G__11827) : f.call(null,G__11822,G__11823,G__11824,G__11825,G__11826,G__11827));
}
} else {
var g4678 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4672,b4673,c4674,d4675,e4676,f4677,g4678);
} else {
var G__11828 = a4672;
var G__11829 = b4673;
var G__11830 = c4674;
var G__11831 = d4675;
var G__11832 = e4676;
var G__11833 = f4677;
var G__11834 = g4678;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834) : f.call(null,G__11828,G__11829,G__11830,G__11831,G__11832,G__11833,G__11834));
}
} else {
var h4679 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679);
} else {
var G__11835 = a4672;
var G__11836 = b4673;
var G__11837 = c4674;
var G__11838 = d4675;
var G__11839 = e4676;
var G__11840 = f4677;
var G__11841 = g4678;
var G__11842 = h4679;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842) : f.call(null,G__11835,G__11836,G__11837,G__11838,G__11839,G__11840,G__11841,G__11842));
}
} else {
var i4680 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680);
} else {
var G__11843 = a4672;
var G__11844 = b4673;
var G__11845 = c4674;
var G__11846 = d4675;
var G__11847 = e4676;
var G__11848 = f4677;
var G__11849 = g4678;
var G__11850 = h4679;
var G__11851 = i4680;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851) : f.call(null,G__11843,G__11844,G__11845,G__11846,G__11847,G__11848,G__11849,G__11850,G__11851));
}
} else {
var j4681 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681);
} else {
var G__11852 = a4672;
var G__11853 = b4673;
var G__11854 = c4674;
var G__11855 = d4675;
var G__11856 = e4676;
var G__11857 = f4677;
var G__11858 = g4678;
var G__11859 = h4679;
var G__11860 = i4680;
var G__11861 = j4681;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861) : f.call(null,G__11852,G__11853,G__11854,G__11855,G__11856,G__11857,G__11858,G__11859,G__11860,G__11861));
}
} else {
var k4682 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682);
} else {
var G__11862 = a4672;
var G__11863 = b4673;
var G__11864 = c4674;
var G__11865 = d4675;
var G__11866 = e4676;
var G__11867 = f4677;
var G__11868 = g4678;
var G__11869 = h4679;
var G__11870 = i4680;
var G__11871 = j4681;
var G__11872 = k4682;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872) : f.call(null,G__11862,G__11863,G__11864,G__11865,G__11866,G__11867,G__11868,G__11869,G__11870,G__11871,G__11872));
}
} else {
var l4683 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683);
} else {
var G__11873 = a4672;
var G__11874 = b4673;
var G__11875 = c4674;
var G__11876 = d4675;
var G__11877 = e4676;
var G__11878 = f4677;
var G__11879 = g4678;
var G__11880 = h4679;
var G__11881 = i4680;
var G__11882 = j4681;
var G__11883 = k4682;
var G__11884 = l4683;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884) : f.call(null,G__11873,G__11874,G__11875,G__11876,G__11877,G__11878,G__11879,G__11880,G__11881,G__11882,G__11883,G__11884));
}
} else {
var m4684 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684);
} else {
var G__11885 = a4672;
var G__11886 = b4673;
var G__11887 = c4674;
var G__11888 = d4675;
var G__11889 = e4676;
var G__11890 = f4677;
var G__11891 = g4678;
var G__11892 = h4679;
var G__11893 = i4680;
var G__11894 = j4681;
var G__11895 = k4682;
var G__11896 = l4683;
var G__11897 = m4684;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897) : f.call(null,G__11885,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897));
}
} else {
var n4685 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685);
} else {
var G__11898 = a4672;
var G__11899 = b4673;
var G__11900 = c4674;
var G__11901 = d4675;
var G__11902 = e4676;
var G__11903 = f4677;
var G__11904 = g4678;
var G__11905 = h4679;
var G__11906 = i4680;
var G__11907 = j4681;
var G__11908 = k4682;
var G__11909 = l4683;
var G__11910 = m4684;
var G__11911 = n4685;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911) : f.call(null,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907,G__11908,G__11909,G__11910,G__11911));
}
} else {
var o4686 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685,o4686);
} else {
var G__11912 = a4672;
var G__11913 = b4673;
var G__11914 = c4674;
var G__11915 = d4675;
var G__11916 = e4676;
var G__11917 = f4677;
var G__11918 = g4678;
var G__11919 = h4679;
var G__11920 = i4680;
var G__11921 = j4681;
var G__11922 = k4682;
var G__11923 = l4683;
var G__11924 = m4684;
var G__11925 = n4685;
var G__11926 = o4686;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926) : f.call(null,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926));
}
} else {
var p4687 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685,o4686,p4687);
} else {
var G__11927 = a4672;
var G__11928 = b4673;
var G__11929 = c4674;
var G__11930 = d4675;
var G__11931 = e4676;
var G__11932 = f4677;
var G__11933 = g4678;
var G__11934 = h4679;
var G__11935 = i4680;
var G__11936 = j4681;
var G__11937 = k4682;
var G__11938 = l4683;
var G__11939 = m4684;
var G__11940 = n4685;
var G__11941 = o4686;
var G__11942 = p4687;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942) : f.call(null,G__11927,G__11928,G__11929,G__11930,G__11931,G__11932,G__11933,G__11934,G__11935,G__11936,G__11937,G__11938,G__11939,G__11940,G__11941,G__11942));
}
} else {
var q4688 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685,o4686,p4687,q4688);
} else {
var G__11943 = a4672;
var G__11944 = b4673;
var G__11945 = c4674;
var G__11946 = d4675;
var G__11947 = e4676;
var G__11948 = f4677;
var G__11949 = g4678;
var G__11950 = h4679;
var G__11951 = i4680;
var G__11952 = j4681;
var G__11953 = k4682;
var G__11954 = l4683;
var G__11955 = m4684;
var G__11956 = n4685;
var G__11957 = o4686;
var G__11958 = p4687;
var G__11959 = q4688;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959) : f.call(null,G__11943,G__11944,G__11945,G__11946,G__11947,G__11948,G__11949,G__11950,G__11951,G__11952,G__11953,G__11954,G__11955,G__11956,G__11957,G__11958,G__11959));
}
} else {
var r4689 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685,o4686,p4687,q4688,r4689);
} else {
var G__11960 = a4672;
var G__11961 = b4673;
var G__11962 = c4674;
var G__11963 = d4675;
var G__11964 = e4676;
var G__11965 = f4677;
var G__11966 = g4678;
var G__11967 = h4679;
var G__11968 = i4680;
var G__11969 = j4681;
var G__11970 = k4682;
var G__11971 = l4683;
var G__11972 = m4684;
var G__11973 = n4685;
var G__11974 = o4686;
var G__11975 = p4687;
var G__11976 = q4688;
var G__11977 = r4689;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977) : f.call(null,G__11960,G__11961,G__11962,G__11963,G__11964,G__11965,G__11966,G__11967,G__11968,G__11969,G__11970,G__11971,G__11972,G__11973,G__11974,G__11975,G__11976,G__11977));
}
} else {
var s4690 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685,o4686,p4687,q4688,r4689,s4690);
} else {
var G__11978 = a4672;
var G__11979 = b4673;
var G__11980 = c4674;
var G__11981 = d4675;
var G__11982 = e4676;
var G__11983 = f4677;
var G__11984 = g4678;
var G__11985 = h4679;
var G__11986 = i4680;
var G__11987 = j4681;
var G__11988 = k4682;
var G__11989 = l4683;
var G__11990 = m4684;
var G__11991 = n4685;
var G__11992 = o4686;
var G__11993 = p4687;
var G__11994 = q4688;
var G__11995 = r4689;
var G__11996 = s4690;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996) : f.call(null,G__11978,G__11979,G__11980,G__11981,G__11982,G__11983,G__11984,G__11985,G__11986,G__11987,G__11988,G__11989,G__11990,G__11991,G__11992,G__11993,G__11994,G__11995,G__11996));
}
} else {
var t4691 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4672,b4673,c4674,d4675,e4676,f4677,g4678,h4679,i4680,j4681,k4682,l4683,m4684,n4685,o4686,p4687,q4688,r4689,s4690,t4691);
} else {
var G__11997 = a4672;
var G__11998 = b4673;
var G__11999 = c4674;
var G__12000 = d4675;
var G__12001 = e4676;
var G__12002 = f4677;
var G__12003 = g4678;
var G__12004 = h4679;
var G__12005 = i4680;
var G__12006 = j4681;
var G__12007 = k4682;
var G__12008 = l4683;
var G__12009 = m4684;
var G__12010 = n4685;
var G__12011 = o4686;
var G__12012 = p4687;
var G__12013 = q4688;
var G__12014 = r4689;
var G__12015 = s4690;
var G__12016 = t4691;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016) : f.call(null,G__11997,G__11998,G__11999,G__12000,G__12001,G__12002,G__12003,G__12004,G__12005,G__12006,G__12007,G__12008,G__12009,G__12010,G__12011,G__12012,G__12013,G__12014,G__12015,G__12016));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__12017__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__12017 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__12018__i = 0, G__12018__a = new Array(arguments.length -  5);
while (G__12018__i < G__12018__a.length) {G__12018__a[G__12018__i] = arguments[G__12018__i + 5]; ++G__12018__i;}
  args = new cljs.core.IndexedSeq(G__12018__a,0);
} 
return G__12017__delegate.call(this,f,a,b,c,d,args);};
G__12017.cljs$lang$maxFixedArity = 5;
G__12017.cljs$lang$applyTo = (function (arglist__12019){
var f = cljs.core.first(arglist__12019);
arglist__12019 = cljs.core.next(arglist__12019);
var a = cljs.core.first(arglist__12019);
arglist__12019 = cljs.core.next(arglist__12019);
var b = cljs.core.first(arglist__12019);
arglist__12019 = cljs.core.next(arglist__12019);
var c = cljs.core.first(arglist__12019);
arglist__12019 = cljs.core.next(arglist__12019);
var d = cljs.core.first(arglist__12019);
var args = cljs.core.rest(arglist__12019);
return G__12017__delegate(f,a,b,c,d,args);
});
G__12017.cljs$core$IFn$_invoke$arity$variadic = G__12017__delegate;
return G__12017;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__12020 = null;
if (arguments.length > 5) {
var G__12021__i = 0, G__12021__a = new Array(arguments.length -  5);
while (G__12021__i < G__12021__a.length) {G__12021__a[G__12021__i] = arguments[G__12021__i + 5]; ++G__12021__i;}
G__12020 = new cljs.core.IndexedSeq(G__12021__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__12020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__12037 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12037) : f.call(null,G__12037));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__12038 = cljs.core.meta(obj);
var G__12039 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12038,G__12039) : f.call(null,G__12038,G__12039));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__12040 = cljs.core.meta(obj);
var G__12041 = a;
var G__12042 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12040,G__12041,G__12042) : f.call(null,G__12040,G__12041,G__12042));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__12043 = cljs.core.meta(obj);
var G__12044 = a;
var G__12045 = b;
var G__12046 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12043,G__12044,G__12045,G__12046) : f.call(null,G__12043,G__12044,G__12045,G__12046));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__12047 = cljs.core.meta(obj);
var G__12048 = a;
var G__12049 = b;
var G__12050 = c;
var G__12051 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12047,G__12048,G__12049,G__12050,G__12051) : f.call(null,G__12047,G__12048,G__12049,G__12050,G__12051));
})());
});
var vary_meta__7 = (function() { 
var G__12052__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__12052 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__12053__i = 0, G__12053__a = new Array(arguments.length -  6);
while (G__12053__i < G__12053__a.length) {G__12053__a[G__12053__i] = arguments[G__12053__i + 6]; ++G__12053__i;}
  args = new cljs.core.IndexedSeq(G__12053__a,0);
} 
return G__12052__delegate.call(this,obj,f,a,b,c,d,args);};
G__12052.cljs$lang$maxFixedArity = 6;
G__12052.cljs$lang$applyTo = (function (arglist__12054){
var obj = cljs.core.first(arglist__12054);
arglist__12054 = cljs.core.next(arglist__12054);
var f = cljs.core.first(arglist__12054);
arglist__12054 = cljs.core.next(arglist__12054);
var a = cljs.core.first(arglist__12054);
arglist__12054 = cljs.core.next(arglist__12054);
var b = cljs.core.first(arglist__12054);
arglist__12054 = cljs.core.next(arglist__12054);
var c = cljs.core.first(arglist__12054);
arglist__12054 = cljs.core.next(arglist__12054);
var d = cljs.core.first(arglist__12054);
var args = cljs.core.rest(arglist__12054);
return G__12052__delegate(obj,f,a,b,c,d,args);
});
G__12052.cljs$core$IFn$_invoke$arity$variadic = G__12052__delegate;
return G__12052;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__12055 = null;
if (arguments.length > 6) {
var G__12056__i = 0, G__12056__a = new Array(arguments.length -  6);
while (G__12056__i < G__12056__a.length) {G__12056__a[G__12056__i] = arguments[G__12056__i + 6]; ++G__12056__i;}
G__12055 = new cljs.core.IndexedSeq(G__12056__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__12055);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__12057__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__12057 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12058__i = 0, G__12058__a = new Array(arguments.length -  2);
while (G__12058__i < G__12058__a.length) {G__12058__a[G__12058__i] = arguments[G__12058__i + 2]; ++G__12058__i;}
  more = new cljs.core.IndexedSeq(G__12058__a,0);
} 
return G__12057__delegate.call(this,x,y,more);};
G__12057.cljs$lang$maxFixedArity = 2;
G__12057.cljs$lang$applyTo = (function (arglist__12059){
var x = cljs.core.first(arglist__12059);
arglist__12059 = cljs.core.next(arglist__12059);
var y = cljs.core.first(arglist__12059);
var more = cljs.core.rest(arglist__12059);
return G__12057__delegate(x,y,more);
});
G__12057.cljs$core$IFn$_invoke$arity$variadic = G__12057__delegate;
return G__12057;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__12060 = null;
if (arguments.length > 2) {
var G__12061__i = 0, G__12061__a = new Array(arguments.length -  2);
while (G__12061__i < G__12061__a.length) {G__12061__a[G__12061__i] = arguments[G__12061__i + 2]; ++G__12061__i;}
G__12060 = new cljs.core.IndexedSeq(G__12061__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t12065 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t12065 = (function (nil_iter,meta12066){
this.nil_iter = nil_iter;
this.meta12066 = meta12066;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t12065.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t12065.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t12065.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t12065.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_12067){
var self__ = this;
var _12067__$1 = this;
return self__.meta12066;
});

cljs.core.t12065.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_12067,meta12066__$1){
var self__ = this;
var _12067__$1 = this;
return (new cljs.core.t12065(self__.nil_iter,meta12066__$1));
});

cljs.core.t12065.cljs$lang$type = true;

cljs.core.t12065.cljs$lang$ctorStr = "cljs.core/t12065";

cljs.core.t12065.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/t12065");
});

cljs.core.__GT_t12065 = (function __GT_t12065(nil_iter__$1,meta12066){
return (new cljs.core.t12065(nil_iter__$1,meta12066));
});

}

return (new cljs.core.t12065(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$8,54,cljs.core.constant$keyword$9,2998,cljs.core.constant$keyword$10,3,cljs.core.constant$keyword$11,2994,cljs.core.constant$keyword$12,"/Users/Shilling/Documents/Code/github/Minesweeper/clojurescript/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3729__auto__ = !((lt.stepper == null));
if(and__3729__auto__){
return self__.iter.hasNext();
} else {
return and__3729__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__12068 = lt;
var G__12069 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12068,G__12069) : self__.xform.call(null,G__12068,G__12069));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12070 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12070) : self__.xform.call(null,G__12070));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__12072 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12072) : xform.call(null,G__12072));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__12074 = cljs.core.next(iters__$1);
iters__$1 = G__12074;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4628__auto___12075 = self__.iters.length;
var i_12076 = (0);
while(true){
if((i_12076 < n__4628__auto___12075)){
(self__.nexts[i_12076] = (self__.iters[i_12076]).next());

var G__12077 = (i_12076 + (1));
i_12076 = G__12077;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3729__auto__ = !((lt.stepper == null));
if(and__3729__auto__){
return this$.hasNext();
} else {
return and__3729__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__12073 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12073) : self__.xform.call(null,G__12073));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__12082 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12082) : xform.call(null,G__12082));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__12083_12087 = cljs.core.seq(colls);
var chunk__12084_12088 = null;
var count__12085_12089 = (0);
var i__12086_12090 = (0);
while(true){
if((i__12086_12090 < count__12085_12089)){
var coll_12091 = chunk__12084_12088.cljs$core$IIndexed$_nth$arity$2(null,i__12086_12090);
iters.push(cljs.core.iter(coll_12091));

var G__12092 = seq__12083_12087;
var G__12093 = chunk__12084_12088;
var G__12094 = count__12085_12089;
var G__12095 = (i__12086_12090 + (1));
seq__12083_12087 = G__12092;
chunk__12084_12088 = G__12093;
count__12085_12089 = G__12094;
i__12086_12090 = G__12095;
continue;
} else {
var temp__4126__auto___12096 = cljs.core.seq(seq__12083_12087);
if(temp__4126__auto___12096){
var seq__12083_12097__$1 = temp__4126__auto___12096;
if(cljs.core.chunked_seq_QMARK_(seq__12083_12097__$1)){
var c__4528__auto___12098 = cljs.core.chunk_first(seq__12083_12097__$1);
var G__12099 = cljs.core.chunk_rest(seq__12083_12097__$1);
var G__12100 = c__4528__auto___12098;
var G__12101 = cljs.core.count(c__4528__auto___12098);
var G__12102 = (0);
seq__12083_12087 = G__12099;
chunk__12084_12088 = G__12100;
count__12085_12089 = G__12101;
i__12086_12090 = G__12102;
continue;
} else {
var coll_12103 = cljs.core.first(seq__12083_12097__$1);
iters.push(cljs.core.iter(coll_12103));

var G__12104 = cljs.core.next(seq__12083_12097__$1);
var G__12105 = null;
var G__12106 = (0);
var G__12107 = (0);
seq__12083_12087 = G__12104;
chunk__12084_12088 = G__12105;
count__12085_12089 = G__12106;
i__12086_12090 = G__12107;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3741__auto__ = cljs.core.seq(coll);
if(or__3741__auto__){
return or__3741__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__12108__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__12108 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__12109__i = 0, G__12109__a = new Array(arguments.length -  2);
while (G__12109__i < G__12109__a.length) {G__12109__a[G__12109__i] = arguments[G__12109__i + 2]; ++G__12109__i;}
  colls = new cljs.core.IndexedSeq(G__12109__a,0);
} 
return G__12108__delegate.call(this,xform,coll,colls);};
G__12108.cljs$lang$maxFixedArity = 2;
G__12108.cljs$lang$applyTo = (function (arglist__12110){
var xform = cljs.core.first(arglist__12110);
arglist__12110 = cljs.core.next(arglist__12110);
var coll = cljs.core.first(arglist__12110);
var colls = cljs.core.rest(arglist__12110);
return G__12108__delegate(xform,coll,colls);
});
G__12108.cljs$core$IFn$_invoke$arity$variadic = G__12108__delegate;
return G__12108;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__12111 = null;
if (arguments.length > 2) {
var G__12112__i = 0, G__12112__a = new Array(arguments.length -  2);
while (G__12112__i < G__12112__a.length) {G__12112__a[G__12112__i] = arguments[G__12112__i + 2]; ++G__12112__i;}
G__12111 = new cljs.core.IndexedSeq(G__12112__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__12111);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__12114 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12114) : pred.call(null,G__12114));
})())){
var G__12115 = pred;
var G__12116 = cljs.core.next(coll);
pred = G__12115;
coll = G__12116;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3741__auto__ = (function (){var G__12120 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12120) : pred.call(null,G__12120));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var G__12121 = pred;
var G__12122 = cljs.core.next(coll);
pred = G__12121;
coll = G__12122;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__12129 = null;
var G__12129__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__12129__1 = (function (x){
return cljs.core.not((function (){var G__12126 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12126) : f.call(null,G__12126));
})());
});
var G__12129__2 = (function (x,y){
return cljs.core.not((function (){var G__12127 = x;
var G__12128 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12127,G__12128) : f.call(null,G__12127,G__12128));
})());
});
var G__12129__3 = (function() { 
var G__12130__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__12130 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__12131__i = 0, G__12131__a = new Array(arguments.length -  2);
while (G__12131__i < G__12131__a.length) {G__12131__a[G__12131__i] = arguments[G__12131__i + 2]; ++G__12131__i;}
  zs = new cljs.core.IndexedSeq(G__12131__a,0);
} 
return G__12130__delegate.call(this,x,y,zs);};
G__12130.cljs$lang$maxFixedArity = 2;
G__12130.cljs$lang$applyTo = (function (arglist__12132){
var x = cljs.core.first(arglist__12132);
arglist__12132 = cljs.core.next(arglist__12132);
var y = cljs.core.first(arglist__12132);
var zs = cljs.core.rest(arglist__12132);
return G__12130__delegate(x,y,zs);
});
G__12130.cljs$core$IFn$_invoke$arity$variadic = G__12130__delegate;
return G__12130;
})()
;
G__12129 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__12129__0.call(this);
case 1:
return G__12129__1.call(this,x);
case 2:
return G__12129__2.call(this,x,y);
default:
var G__12133 = null;
if (arguments.length > 2) {
var G__12134__i = 0, G__12134__a = new Array(arguments.length -  2);
while (G__12134__i < G__12134__a.length) {G__12134__a[G__12134__i] = arguments[G__12134__i + 2]; ++G__12134__i;}
G__12133 = new cljs.core.IndexedSeq(G__12134__a,0);
}
return G__12129__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12129.cljs$lang$maxFixedArity = 2;
G__12129.cljs$lang$applyTo = G__12129__3.cljs$lang$applyTo;
G__12129.cljs$core$IFn$_invoke$arity$0 = G__12129__0;
G__12129.cljs$core$IFn$_invoke$arity$1 = G__12129__1;
G__12129.cljs$core$IFn$_invoke$arity$2 = G__12129__2;
G__12129.cljs$core$IFn$_invoke$arity$variadic = G__12129__3.cljs$core$IFn$_invoke$arity$variadic;
return G__12129;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__12135__delegate = function (args){
return x;
};
var G__12135 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12136__i = 0, G__12136__a = new Array(arguments.length -  0);
while (G__12136__i < G__12136__a.length) {G__12136__a[G__12136__i] = arguments[G__12136__i + 0]; ++G__12136__i;}
  args = new cljs.core.IndexedSeq(G__12136__a,0);
} 
return G__12135__delegate.call(this,args);};
G__12135.cljs$lang$maxFixedArity = 0;
G__12135.cljs$lang$applyTo = (function (arglist__12137){
var args = cljs.core.seq(arglist__12137);
return G__12135__delegate(args);
});
G__12135.cljs$core$IFn$_invoke$arity$variadic = G__12135__delegate;
return G__12135;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__12192 = null;
var G__12192__0 = (function (){
var G__12165 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12165) : f.call(null,G__12165));
});
var G__12192__1 = (function (x){
var G__12166 = (function (){var G__12167 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12167) : g.call(null,G__12167));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12166) : f.call(null,G__12166));
});
var G__12192__2 = (function (x,y){
var G__12168 = (function (){var G__12169 = x;
var G__12170 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12169,G__12170) : g.call(null,G__12169,G__12170));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12168) : f.call(null,G__12168));
});
var G__12192__3 = (function (x,y,z){
var G__12171 = (function (){var G__12172 = x;
var G__12173 = y;
var G__12174 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12172,G__12173,G__12174) : g.call(null,G__12172,G__12173,G__12174));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12171) : f.call(null,G__12171));
});
var G__12192__4 = (function() { 
var G__12193__delegate = function (x,y,z,args){
var G__12175 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12175) : f.call(null,G__12175));
};
var G__12193 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12194__i = 0, G__12194__a = new Array(arguments.length -  3);
while (G__12194__i < G__12194__a.length) {G__12194__a[G__12194__i] = arguments[G__12194__i + 3]; ++G__12194__i;}
  args = new cljs.core.IndexedSeq(G__12194__a,0);
} 
return G__12193__delegate.call(this,x,y,z,args);};
G__12193.cljs$lang$maxFixedArity = 3;
G__12193.cljs$lang$applyTo = (function (arglist__12195){
var x = cljs.core.first(arglist__12195);
arglist__12195 = cljs.core.next(arglist__12195);
var y = cljs.core.first(arglist__12195);
arglist__12195 = cljs.core.next(arglist__12195);
var z = cljs.core.first(arglist__12195);
var args = cljs.core.rest(arglist__12195);
return G__12193__delegate(x,y,z,args);
});
G__12193.cljs$core$IFn$_invoke$arity$variadic = G__12193__delegate;
return G__12193;
})()
;
G__12192 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12192__0.call(this);
case 1:
return G__12192__1.call(this,x);
case 2:
return G__12192__2.call(this,x,y);
case 3:
return G__12192__3.call(this,x,y,z);
default:
var G__12196 = null;
if (arguments.length > 3) {
var G__12197__i = 0, G__12197__a = new Array(arguments.length -  3);
while (G__12197__i < G__12197__a.length) {G__12197__a[G__12197__i] = arguments[G__12197__i + 3]; ++G__12197__i;}
G__12196 = new cljs.core.IndexedSeq(G__12197__a,0);
}
return G__12192__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12196);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12192.cljs$lang$maxFixedArity = 3;
G__12192.cljs$lang$applyTo = G__12192__4.cljs$lang$applyTo;
G__12192.cljs$core$IFn$_invoke$arity$0 = G__12192__0;
G__12192.cljs$core$IFn$_invoke$arity$1 = G__12192__1;
G__12192.cljs$core$IFn$_invoke$arity$2 = G__12192__2;
G__12192.cljs$core$IFn$_invoke$arity$3 = G__12192__3;
G__12192.cljs$core$IFn$_invoke$arity$variadic = G__12192__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12192;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__12198 = null;
var G__12198__0 = (function (){
var G__12176 = (function (){var G__12177 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12177) : g.call(null,G__12177));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12176) : f.call(null,G__12176));
});
var G__12198__1 = (function (x){
var G__12178 = (function (){var G__12179 = (function (){var G__12180 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12180) : h.call(null,G__12180));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12179) : g.call(null,G__12179));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12178) : f.call(null,G__12178));
});
var G__12198__2 = (function (x,y){
var G__12181 = (function (){var G__12182 = (function (){var G__12183 = x;
var G__12184 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12183,G__12184) : h.call(null,G__12183,G__12184));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12182) : g.call(null,G__12182));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12181) : f.call(null,G__12181));
});
var G__12198__3 = (function (x,y,z){
var G__12185 = (function (){var G__12186 = (function (){var G__12187 = x;
var G__12188 = y;
var G__12189 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12187,G__12188,G__12189) : h.call(null,G__12187,G__12188,G__12189));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12186) : g.call(null,G__12186));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12185) : f.call(null,G__12185));
});
var G__12198__4 = (function() { 
var G__12199__delegate = function (x,y,z,args){
var G__12190 = (function (){var G__12191 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12191) : g.call(null,G__12191));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12190) : f.call(null,G__12190));
};
var G__12199 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12200__i = 0, G__12200__a = new Array(arguments.length -  3);
while (G__12200__i < G__12200__a.length) {G__12200__a[G__12200__i] = arguments[G__12200__i + 3]; ++G__12200__i;}
  args = new cljs.core.IndexedSeq(G__12200__a,0);
} 
return G__12199__delegate.call(this,x,y,z,args);};
G__12199.cljs$lang$maxFixedArity = 3;
G__12199.cljs$lang$applyTo = (function (arglist__12201){
var x = cljs.core.first(arglist__12201);
arglist__12201 = cljs.core.next(arglist__12201);
var y = cljs.core.first(arglist__12201);
arglist__12201 = cljs.core.next(arglist__12201);
var z = cljs.core.first(arglist__12201);
var args = cljs.core.rest(arglist__12201);
return G__12199__delegate(x,y,z,args);
});
G__12199.cljs$core$IFn$_invoke$arity$variadic = G__12199__delegate;
return G__12199;
})()
;
G__12198 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12198__0.call(this);
case 1:
return G__12198__1.call(this,x);
case 2:
return G__12198__2.call(this,x,y);
case 3:
return G__12198__3.call(this,x,y,z);
default:
var G__12202 = null;
if (arguments.length > 3) {
var G__12203__i = 0, G__12203__a = new Array(arguments.length -  3);
while (G__12203__i < G__12203__a.length) {G__12203__a[G__12203__i] = arguments[G__12203__i + 3]; ++G__12203__i;}
G__12202 = new cljs.core.IndexedSeq(G__12203__a,0);
}
return G__12198__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12202);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12198.cljs$lang$maxFixedArity = 3;
G__12198.cljs$lang$applyTo = G__12198__4.cljs$lang$applyTo;
G__12198.cljs$core$IFn$_invoke$arity$0 = G__12198__0;
G__12198.cljs$core$IFn$_invoke$arity$1 = G__12198__1;
G__12198.cljs$core$IFn$_invoke$arity$2 = G__12198__2;
G__12198.cljs$core$IFn$_invoke$arity$3 = G__12198__3;
G__12198.cljs$core$IFn$_invoke$arity$variadic = G__12198__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12198;
})()
});
var comp__4 = (function() { 
var G__12204__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__12205__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__12206 = cljs.core.first(fs__$2).call(null,ret);
var G__12207 = cljs.core.next(fs__$2);
ret = G__12206;
fs__$2 = G__12207;
continue;
} else {
return ret;
}
break;
}
};
var G__12205 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12208__i = 0, G__12208__a = new Array(arguments.length -  0);
while (G__12208__i < G__12208__a.length) {G__12208__a[G__12208__i] = arguments[G__12208__i + 0]; ++G__12208__i;}
  args = new cljs.core.IndexedSeq(G__12208__a,0);
} 
return G__12205__delegate.call(this,args);};
G__12205.cljs$lang$maxFixedArity = 0;
G__12205.cljs$lang$applyTo = (function (arglist__12209){
var args = cljs.core.seq(arglist__12209);
return G__12205__delegate(args);
});
G__12205.cljs$core$IFn$_invoke$arity$variadic = G__12205__delegate;
return G__12205;
})()
;
;})(fs__$1))
};
var G__12204 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__12210__i = 0, G__12210__a = new Array(arguments.length -  3);
while (G__12210__i < G__12210__a.length) {G__12210__a[G__12210__i] = arguments[G__12210__i + 3]; ++G__12210__i;}
  fs = new cljs.core.IndexedSeq(G__12210__a,0);
} 
return G__12204__delegate.call(this,f1,f2,f3,fs);};
G__12204.cljs$lang$maxFixedArity = 3;
G__12204.cljs$lang$applyTo = (function (arglist__12211){
var f1 = cljs.core.first(arglist__12211);
arglist__12211 = cljs.core.next(arglist__12211);
var f2 = cljs.core.first(arglist__12211);
arglist__12211 = cljs.core.next(arglist__12211);
var f3 = cljs.core.first(arglist__12211);
var fs = cljs.core.rest(arglist__12211);
return G__12204__delegate(f1,f2,f3,fs);
});
G__12204.cljs$core$IFn$_invoke$arity$variadic = G__12204__delegate;
return G__12204;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__12212 = null;
if (arguments.length > 3) {
var G__12213__i = 0, G__12213__a = new Array(arguments.length -  3);
while (G__12213__i < G__12213__a.length) {G__12213__a[G__12213__i] = arguments[G__12213__i + 3]; ++G__12213__i;}
G__12212 = new cljs.core.IndexedSeq(G__12213__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__12212);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__12298 = null;
var G__12298__0 = (function (){
var G__12256 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12256) : f.call(null,G__12256));
});
var G__12298__1 = (function (x){
var G__12257 = arg1;
var G__12258 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12257,G__12258) : f.call(null,G__12257,G__12258));
});
var G__12298__2 = (function (x,y){
var G__12259 = arg1;
var G__12260 = x;
var G__12261 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12259,G__12260,G__12261) : f.call(null,G__12259,G__12260,G__12261));
});
var G__12298__3 = (function (x,y,z){
var G__12262 = arg1;
var G__12263 = x;
var G__12264 = y;
var G__12265 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12262,G__12263,G__12264,G__12265) : f.call(null,G__12262,G__12263,G__12264,G__12265));
});
var G__12298__4 = (function() { 
var G__12299__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__12299 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12300__i = 0, G__12300__a = new Array(arguments.length -  3);
while (G__12300__i < G__12300__a.length) {G__12300__a[G__12300__i] = arguments[G__12300__i + 3]; ++G__12300__i;}
  args = new cljs.core.IndexedSeq(G__12300__a,0);
} 
return G__12299__delegate.call(this,x,y,z,args);};
G__12299.cljs$lang$maxFixedArity = 3;
G__12299.cljs$lang$applyTo = (function (arglist__12301){
var x = cljs.core.first(arglist__12301);
arglist__12301 = cljs.core.next(arglist__12301);
var y = cljs.core.first(arglist__12301);
arglist__12301 = cljs.core.next(arglist__12301);
var z = cljs.core.first(arglist__12301);
var args = cljs.core.rest(arglist__12301);
return G__12299__delegate(x,y,z,args);
});
G__12299.cljs$core$IFn$_invoke$arity$variadic = G__12299__delegate;
return G__12299;
})()
;
G__12298 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12298__0.call(this);
case 1:
return G__12298__1.call(this,x);
case 2:
return G__12298__2.call(this,x,y);
case 3:
return G__12298__3.call(this,x,y,z);
default:
var G__12302 = null;
if (arguments.length > 3) {
var G__12303__i = 0, G__12303__a = new Array(arguments.length -  3);
while (G__12303__i < G__12303__a.length) {G__12303__a[G__12303__i] = arguments[G__12303__i + 3]; ++G__12303__i;}
G__12302 = new cljs.core.IndexedSeq(G__12303__a,0);
}
return G__12298__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12298.cljs$lang$maxFixedArity = 3;
G__12298.cljs$lang$applyTo = G__12298__4.cljs$lang$applyTo;
G__12298.cljs$core$IFn$_invoke$arity$0 = G__12298__0;
G__12298.cljs$core$IFn$_invoke$arity$1 = G__12298__1;
G__12298.cljs$core$IFn$_invoke$arity$2 = G__12298__2;
G__12298.cljs$core$IFn$_invoke$arity$3 = G__12298__3;
G__12298.cljs$core$IFn$_invoke$arity$variadic = G__12298__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12298;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__12304 = null;
var G__12304__0 = (function (){
var G__12266 = arg1;
var G__12267 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12266,G__12267) : f.call(null,G__12266,G__12267));
});
var G__12304__1 = (function (x){
var G__12268 = arg1;
var G__12269 = arg2;
var G__12270 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12268,G__12269,G__12270) : f.call(null,G__12268,G__12269,G__12270));
});
var G__12304__2 = (function (x,y){
var G__12271 = arg1;
var G__12272 = arg2;
var G__12273 = x;
var G__12274 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12271,G__12272,G__12273,G__12274) : f.call(null,G__12271,G__12272,G__12273,G__12274));
});
var G__12304__3 = (function (x,y,z){
var G__12275 = arg1;
var G__12276 = arg2;
var G__12277 = x;
var G__12278 = y;
var G__12279 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12275,G__12276,G__12277,G__12278,G__12279) : f.call(null,G__12275,G__12276,G__12277,G__12278,G__12279));
});
var G__12304__4 = (function() { 
var G__12305__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__12305 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12306__i = 0, G__12306__a = new Array(arguments.length -  3);
while (G__12306__i < G__12306__a.length) {G__12306__a[G__12306__i] = arguments[G__12306__i + 3]; ++G__12306__i;}
  args = new cljs.core.IndexedSeq(G__12306__a,0);
} 
return G__12305__delegate.call(this,x,y,z,args);};
G__12305.cljs$lang$maxFixedArity = 3;
G__12305.cljs$lang$applyTo = (function (arglist__12307){
var x = cljs.core.first(arglist__12307);
arglist__12307 = cljs.core.next(arglist__12307);
var y = cljs.core.first(arglist__12307);
arglist__12307 = cljs.core.next(arglist__12307);
var z = cljs.core.first(arglist__12307);
var args = cljs.core.rest(arglist__12307);
return G__12305__delegate(x,y,z,args);
});
G__12305.cljs$core$IFn$_invoke$arity$variadic = G__12305__delegate;
return G__12305;
})()
;
G__12304 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12304__0.call(this);
case 1:
return G__12304__1.call(this,x);
case 2:
return G__12304__2.call(this,x,y);
case 3:
return G__12304__3.call(this,x,y,z);
default:
var G__12308 = null;
if (arguments.length > 3) {
var G__12309__i = 0, G__12309__a = new Array(arguments.length -  3);
while (G__12309__i < G__12309__a.length) {G__12309__a[G__12309__i] = arguments[G__12309__i + 3]; ++G__12309__i;}
G__12308 = new cljs.core.IndexedSeq(G__12309__a,0);
}
return G__12304__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12304.cljs$lang$maxFixedArity = 3;
G__12304.cljs$lang$applyTo = G__12304__4.cljs$lang$applyTo;
G__12304.cljs$core$IFn$_invoke$arity$0 = G__12304__0;
G__12304.cljs$core$IFn$_invoke$arity$1 = G__12304__1;
G__12304.cljs$core$IFn$_invoke$arity$2 = G__12304__2;
G__12304.cljs$core$IFn$_invoke$arity$3 = G__12304__3;
G__12304.cljs$core$IFn$_invoke$arity$variadic = G__12304__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12304;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__12310 = null;
var G__12310__0 = (function (){
var G__12280 = arg1;
var G__12281 = arg2;
var G__12282 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12280,G__12281,G__12282) : f.call(null,G__12280,G__12281,G__12282));
});
var G__12310__1 = (function (x){
var G__12283 = arg1;
var G__12284 = arg2;
var G__12285 = arg3;
var G__12286 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12283,G__12284,G__12285,G__12286) : f.call(null,G__12283,G__12284,G__12285,G__12286));
});
var G__12310__2 = (function (x,y){
var G__12287 = arg1;
var G__12288 = arg2;
var G__12289 = arg3;
var G__12290 = x;
var G__12291 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12287,G__12288,G__12289,G__12290,G__12291) : f.call(null,G__12287,G__12288,G__12289,G__12290,G__12291));
});
var G__12310__3 = (function (x,y,z){
var G__12292 = arg1;
var G__12293 = arg2;
var G__12294 = arg3;
var G__12295 = x;
var G__12296 = y;
var G__12297 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12292,G__12293,G__12294,G__12295,G__12296,G__12297) : f.call(null,G__12292,G__12293,G__12294,G__12295,G__12296,G__12297));
});
var G__12310__4 = (function() { 
var G__12311__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__12311 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12312__i = 0, G__12312__a = new Array(arguments.length -  3);
while (G__12312__i < G__12312__a.length) {G__12312__a[G__12312__i] = arguments[G__12312__i + 3]; ++G__12312__i;}
  args = new cljs.core.IndexedSeq(G__12312__a,0);
} 
return G__12311__delegate.call(this,x,y,z,args);};
G__12311.cljs$lang$maxFixedArity = 3;
G__12311.cljs$lang$applyTo = (function (arglist__12313){
var x = cljs.core.first(arglist__12313);
arglist__12313 = cljs.core.next(arglist__12313);
var y = cljs.core.first(arglist__12313);
arglist__12313 = cljs.core.next(arglist__12313);
var z = cljs.core.first(arglist__12313);
var args = cljs.core.rest(arglist__12313);
return G__12311__delegate(x,y,z,args);
});
G__12311.cljs$core$IFn$_invoke$arity$variadic = G__12311__delegate;
return G__12311;
})()
;
G__12310 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__12310__0.call(this);
case 1:
return G__12310__1.call(this,x);
case 2:
return G__12310__2.call(this,x,y);
case 3:
return G__12310__3.call(this,x,y,z);
default:
var G__12314 = null;
if (arguments.length > 3) {
var G__12315__i = 0, G__12315__a = new Array(arguments.length -  3);
while (G__12315__i < G__12315__a.length) {G__12315__a[G__12315__i] = arguments[G__12315__i + 3]; ++G__12315__i;}
G__12314 = new cljs.core.IndexedSeq(G__12315__a,0);
}
return G__12310__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12310.cljs$lang$maxFixedArity = 3;
G__12310.cljs$lang$applyTo = G__12310__4.cljs$lang$applyTo;
G__12310.cljs$core$IFn$_invoke$arity$0 = G__12310__0;
G__12310.cljs$core$IFn$_invoke$arity$1 = G__12310__1;
G__12310.cljs$core$IFn$_invoke$arity$2 = G__12310__2;
G__12310.cljs$core$IFn$_invoke$arity$3 = G__12310__3;
G__12310.cljs$core$IFn$_invoke$arity$variadic = G__12310__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12310;
})()
});
var partial__5 = (function() { 
var G__12316__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__12317__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__12317 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12318__i = 0, G__12318__a = new Array(arguments.length -  0);
while (G__12318__i < G__12318__a.length) {G__12318__a[G__12318__i] = arguments[G__12318__i + 0]; ++G__12318__i;}
  args = new cljs.core.IndexedSeq(G__12318__a,0);
} 
return G__12317__delegate.call(this,args);};
G__12317.cljs$lang$maxFixedArity = 0;
G__12317.cljs$lang$applyTo = (function (arglist__12319){
var args = cljs.core.seq(arglist__12319);
return G__12317__delegate(args);
});
G__12317.cljs$core$IFn$_invoke$arity$variadic = G__12317__delegate;
return G__12317;
})()
;
};
var G__12316 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__12320__i = 0, G__12320__a = new Array(arguments.length -  4);
while (G__12320__i < G__12320__a.length) {G__12320__a[G__12320__i] = arguments[G__12320__i + 4]; ++G__12320__i;}
  more = new cljs.core.IndexedSeq(G__12320__a,0);
} 
return G__12316__delegate.call(this,f,arg1,arg2,arg3,more);};
G__12316.cljs$lang$maxFixedArity = 4;
G__12316.cljs$lang$applyTo = (function (arglist__12321){
var f = cljs.core.first(arglist__12321);
arglist__12321 = cljs.core.next(arglist__12321);
var arg1 = cljs.core.first(arglist__12321);
arglist__12321 = cljs.core.next(arglist__12321);
var arg2 = cljs.core.first(arglist__12321);
arglist__12321 = cljs.core.next(arglist__12321);
var arg3 = cljs.core.first(arglist__12321);
var more = cljs.core.rest(arglist__12321);
return G__12316__delegate(f,arg1,arg2,arg3,more);
});
G__12316.cljs$core$IFn$_invoke$arity$variadic = G__12316__delegate;
return G__12316;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__12322 = null;
if (arguments.length > 4) {
var G__12323__i = 0, G__12323__a = new Array(arguments.length -  4);
while (G__12323__i < G__12323__a.length) {G__12323__a[G__12323__i] = arguments[G__12323__i + 4]; ++G__12323__i;}
G__12322 = new cljs.core.IndexedSeq(G__12323__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__12322);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__12356 = null;
var G__12356__1 = (function (a){
var G__12340 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12340) : f.call(null,G__12340));
});
var G__12356__2 = (function (a,b){
var G__12341 = (((a == null))?x:a);
var G__12342 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12341,G__12342) : f.call(null,G__12341,G__12342));
});
var G__12356__3 = (function (a,b,c){
var G__12343 = (((a == null))?x:a);
var G__12344 = b;
var G__12345 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12343,G__12344,G__12345) : f.call(null,G__12343,G__12344,G__12345));
});
var G__12356__4 = (function() { 
var G__12357__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__12357 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12358__i = 0, G__12358__a = new Array(arguments.length -  3);
while (G__12358__i < G__12358__a.length) {G__12358__a[G__12358__i] = arguments[G__12358__i + 3]; ++G__12358__i;}
  ds = new cljs.core.IndexedSeq(G__12358__a,0);
} 
return G__12357__delegate.call(this,a,b,c,ds);};
G__12357.cljs$lang$maxFixedArity = 3;
G__12357.cljs$lang$applyTo = (function (arglist__12359){
var a = cljs.core.first(arglist__12359);
arglist__12359 = cljs.core.next(arglist__12359);
var b = cljs.core.first(arglist__12359);
arglist__12359 = cljs.core.next(arglist__12359);
var c = cljs.core.first(arglist__12359);
var ds = cljs.core.rest(arglist__12359);
return G__12357__delegate(a,b,c,ds);
});
G__12357.cljs$core$IFn$_invoke$arity$variadic = G__12357__delegate;
return G__12357;
})()
;
G__12356 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__12356__1.call(this,a);
case 2:
return G__12356__2.call(this,a,b);
case 3:
return G__12356__3.call(this,a,b,c);
default:
var G__12360 = null;
if (arguments.length > 3) {
var G__12361__i = 0, G__12361__a = new Array(arguments.length -  3);
while (G__12361__i < G__12361__a.length) {G__12361__a[G__12361__i] = arguments[G__12361__i + 3]; ++G__12361__i;}
G__12360 = new cljs.core.IndexedSeq(G__12361__a,0);
}
return G__12356__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12360);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12356.cljs$lang$maxFixedArity = 3;
G__12356.cljs$lang$applyTo = G__12356__4.cljs$lang$applyTo;
G__12356.cljs$core$IFn$_invoke$arity$1 = G__12356__1;
G__12356.cljs$core$IFn$_invoke$arity$2 = G__12356__2;
G__12356.cljs$core$IFn$_invoke$arity$3 = G__12356__3;
G__12356.cljs$core$IFn$_invoke$arity$variadic = G__12356__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12356;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__12362 = null;
var G__12362__2 = (function (a,b){
var G__12346 = (((a == null))?x:a);
var G__12347 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12346,G__12347) : f.call(null,G__12346,G__12347));
});
var G__12362__3 = (function (a,b,c){
var G__12348 = (((a == null))?x:a);
var G__12349 = (((b == null))?y:b);
var G__12350 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12348,G__12349,G__12350) : f.call(null,G__12348,G__12349,G__12350));
});
var G__12362__4 = (function() { 
var G__12363__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__12363 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12364__i = 0, G__12364__a = new Array(arguments.length -  3);
while (G__12364__i < G__12364__a.length) {G__12364__a[G__12364__i] = arguments[G__12364__i + 3]; ++G__12364__i;}
  ds = new cljs.core.IndexedSeq(G__12364__a,0);
} 
return G__12363__delegate.call(this,a,b,c,ds);};
G__12363.cljs$lang$maxFixedArity = 3;
G__12363.cljs$lang$applyTo = (function (arglist__12365){
var a = cljs.core.first(arglist__12365);
arglist__12365 = cljs.core.next(arglist__12365);
var b = cljs.core.first(arglist__12365);
arglist__12365 = cljs.core.next(arglist__12365);
var c = cljs.core.first(arglist__12365);
var ds = cljs.core.rest(arglist__12365);
return G__12363__delegate(a,b,c,ds);
});
G__12363.cljs$core$IFn$_invoke$arity$variadic = G__12363__delegate;
return G__12363;
})()
;
G__12362 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12362__2.call(this,a,b);
case 3:
return G__12362__3.call(this,a,b,c);
default:
var G__12366 = null;
if (arguments.length > 3) {
var G__12367__i = 0, G__12367__a = new Array(arguments.length -  3);
while (G__12367__i < G__12367__a.length) {G__12367__a[G__12367__i] = arguments[G__12367__i + 3]; ++G__12367__i;}
G__12366 = new cljs.core.IndexedSeq(G__12367__a,0);
}
return G__12362__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12366);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12362.cljs$lang$maxFixedArity = 3;
G__12362.cljs$lang$applyTo = G__12362__4.cljs$lang$applyTo;
G__12362.cljs$core$IFn$_invoke$arity$2 = G__12362__2;
G__12362.cljs$core$IFn$_invoke$arity$3 = G__12362__3;
G__12362.cljs$core$IFn$_invoke$arity$variadic = G__12362__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12362;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__12368 = null;
var G__12368__2 = (function (a,b){
var G__12351 = (((a == null))?x:a);
var G__12352 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12351,G__12352) : f.call(null,G__12351,G__12352));
});
var G__12368__3 = (function (a,b,c){
var G__12353 = (((a == null))?x:a);
var G__12354 = (((b == null))?y:b);
var G__12355 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12353,G__12354,G__12355) : f.call(null,G__12353,G__12354,G__12355));
});
var G__12368__4 = (function() { 
var G__12369__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__12369 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__12370__i = 0, G__12370__a = new Array(arguments.length -  3);
while (G__12370__i < G__12370__a.length) {G__12370__a[G__12370__i] = arguments[G__12370__i + 3]; ++G__12370__i;}
  ds = new cljs.core.IndexedSeq(G__12370__a,0);
} 
return G__12369__delegate.call(this,a,b,c,ds);};
G__12369.cljs$lang$maxFixedArity = 3;
G__12369.cljs$lang$applyTo = (function (arglist__12371){
var a = cljs.core.first(arglist__12371);
arglist__12371 = cljs.core.next(arglist__12371);
var b = cljs.core.first(arglist__12371);
arglist__12371 = cljs.core.next(arglist__12371);
var c = cljs.core.first(arglist__12371);
var ds = cljs.core.rest(arglist__12371);
return G__12369__delegate(a,b,c,ds);
});
G__12369.cljs$core$IFn$_invoke$arity$variadic = G__12369__delegate;
return G__12369;
})()
;
G__12368 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__12368__2.call(this,a,b);
case 3:
return G__12368__3.call(this,a,b,c);
default:
var G__12372 = null;
if (arguments.length > 3) {
var G__12373__i = 0, G__12373__a = new Array(arguments.length -  3);
while (G__12373__i < G__12373__a.length) {G__12373__a[G__12373__i] = arguments[G__12373__i + 3]; ++G__12373__i;}
G__12372 = new cljs.core.IndexedSeq(G__12373__a,0);
}
return G__12368__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__12372);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12368.cljs$lang$maxFixedArity = 3;
G__12368.cljs$lang$applyTo = G__12368__4.cljs$lang$applyTo;
G__12368.cljs$core$IFn$_invoke$arity$2 = G__12368__2;
G__12368.cljs$core$IFn$_invoke$arity$3 = G__12368__3;
G__12368.cljs$core$IFn$_invoke$arity$variadic = G__12368__4.cljs$core$IFn$_invoke$arity$variadic;
return G__12368;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function map_indexed(f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4628__auto___12422 = size;
var i_12423 = (0);
while(true){
if((i_12423 < n__4628__auto___12422)){
cljs.core.chunk_append(b,(function (){var G__12418 = (idx + i_12423);
var G__12419 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12423);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12418,G__12419) : f.call(null,G__12418,G__12419));
})());

var G__12424 = (i_12423 + (1));
i_12423 = G__12424;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__12420 = idx;
var G__12421 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12420,G__12421) : f.call(null,G__12420,G__12421));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__12443 = null;
var G__12443__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12443__1 = (function (result){
var G__12437 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12437) : rf.call(null,G__12437));
});
var G__12443__2 = (function (result,input){
var v = (function (){var G__12438 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12438) : f.call(null,G__12438));
})();
if((v == null)){
return result;
} else {
var G__12439 = result;
var G__12440 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12439,G__12440) : rf.call(null,G__12439,G__12440));
}
});
G__12443 = function(result,input){
switch(arguments.length){
case 0:
return G__12443__0.call(this);
case 1:
return G__12443__1.call(this,result);
case 2:
return G__12443__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12443.cljs$core$IFn$_invoke$arity$0 = G__12443__0;
G__12443.cljs$core$IFn$_invoke$arity$1 = G__12443__1;
G__12443.cljs$core$IFn$_invoke$arity$2 = G__12443__2;
return G__12443;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4628__auto___12444 = size;
var i_12445 = (0);
while(true){
if((i_12445 < n__4628__auto___12444)){
var x_12446 = (function (){var G__12441 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12445);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12441) : f.call(null,G__12441));
})();
if((x_12446 == null)){
} else {
cljs.core.chunk_append(b,x_12446);
}

var G__12447 = (i_12445 + (1));
i_12445 = G__12447;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12442 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12442) : f.call(null,G__12442));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__12448 = this$__$1;
return goog.getUid(G__12448);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__12449 = cljs.core.seq(self__.watches);
var chunk__12450 = null;
var count__12451 = (0);
var i__12452 = (0);
while(true){
if((i__12452 < count__12451)){
var vec__12453 = chunk__12450.cljs$core$IIndexed$_nth$arity$2(null,i__12452);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12453,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12453,(1),null);
var G__12454_12463 = key;
var G__12455_12464 = this$__$1;
var G__12456_12465 = oldval;
var G__12457_12466 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12454_12463,G__12455_12464,G__12456_12465,G__12457_12466) : f.call(null,G__12454_12463,G__12455_12464,G__12456_12465,G__12457_12466));

var G__12467 = seq__12449;
var G__12468 = chunk__12450;
var G__12469 = count__12451;
var G__12470 = (i__12452 + (1));
seq__12449 = G__12467;
chunk__12450 = G__12468;
count__12451 = G__12469;
i__12452 = G__12470;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__12449);
if(temp__4126__auto__){
var seq__12449__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__12449__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__12449__$1);
var G__12471 = cljs.core.chunk_rest(seq__12449__$1);
var G__12472 = c__4528__auto__;
var G__12473 = cljs.core.count(c__4528__auto__);
var G__12474 = (0);
seq__12449 = G__12471;
chunk__12450 = G__12472;
count__12451 = G__12473;
i__12452 = G__12474;
continue;
} else {
var vec__12458 = cljs.core.first(seq__12449__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12458,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12458,(1),null);
var G__12459_12475 = key;
var G__12460_12476 = this$__$1;
var G__12461_12477 = oldval;
var G__12462_12478 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12459_12475,G__12460_12476,G__12461_12477,G__12462_12478) : f.call(null,G__12459_12475,G__12460_12476,G__12461_12477,G__12462_12478));

var G__12479 = cljs.core.next(seq__12449__$1);
var G__12480 = null;
var G__12481 = (0);
var G__12482 = (0);
seq__12449 = G__12479;
chunk__12450 = G__12480;
count__12451 = G__12481;
i__12452 = G__12482;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__12486__delegate = function (x,p__12483){
var map__12485 = p__12483;
var map__12485__$1 = ((cljs.core.seq_QMARK_(map__12485))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__12485):map__12485);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1,cljs.core.constant$keyword$13);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12485__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__12486 = function (x,var_args){
var p__12483 = null;
if (arguments.length > 1) {
var G__12487__i = 0, G__12487__a = new Array(arguments.length -  1);
while (G__12487__i < G__12487__a.length) {G__12487__a[G__12487__i] = arguments[G__12487__i + 1]; ++G__12487__i;}
  p__12483 = new cljs.core.IndexedSeq(G__12487__a,0);
} 
return G__12486__delegate.call(this,x,p__12483);};
G__12486.cljs$lang$maxFixedArity = 1;
G__12486.cljs$lang$applyTo = (function (arglist__12488){
var x = cljs.core.first(arglist__12488);
var p__12483 = cljs.core.rest(arglist__12488);
return G__12486__delegate(x,p__12483);
});
G__12486.cljs$core$IFn$_invoke$arity$variadic = G__12486__delegate;
return G__12486;
})()
;
atom = function(x,var_args){
var p__12483 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__12489 = null;
if (arguments.length > 1) {
var G__12490__i = 0, G__12490__a = new Array(arguments.length -  1);
while (G__12490__i < G__12490__a.length) {G__12490__a[G__12490__i] = arguments[G__12490__i + 1]; ++G__12490__i;}
G__12489 = new cljs.core.IndexedSeq(G__12490__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__12493 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12493) : validate.call(null,G__12493));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__12494 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12494) : cljs.core.pr_str.call(null,G__12494));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12501 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12501) : f.call(null,G__12501));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12502 = a.state;
var G__12503 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12502,G__12503) : f.call(null,G__12502,G__12503));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__12504 = a.state;
var G__12505 = x;
var G__12506 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12504,G__12505,G__12506) : f.call(null,G__12504,G__12505,G__12506));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__12507__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__12507 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__12508__i = 0, G__12508__a = new Array(arguments.length -  4);
while (G__12508__i < G__12508__a.length) {G__12508__a[G__12508__i] = arguments[G__12508__i + 4]; ++G__12508__i;}
  more = new cljs.core.IndexedSeq(G__12508__a,0);
} 
return G__12507__delegate.call(this,a,f,x,y,more);};
G__12507.cljs$lang$maxFixedArity = 4;
G__12507.cljs$lang$applyTo = (function (arglist__12509){
var a = cljs.core.first(arglist__12509);
arglist__12509 = cljs.core.next(arglist__12509);
var f = cljs.core.first(arglist__12509);
arglist__12509 = cljs.core.next(arglist__12509);
var x = cljs.core.first(arglist__12509);
arglist__12509 = cljs.core.next(arglist__12509);
var y = cljs.core.first(arglist__12509);
var more = cljs.core.rest(arglist__12509);
return G__12507__delegate(a,f,x,y,more);
});
G__12507.cljs$core$IFn$_invoke$arity$variadic = G__12507__delegate;
return G__12507;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__12510 = null;
if (arguments.length > 4) {
var G__12511__i = 0, G__12511__a = new Array(arguments.length -  4);
while (G__12511__i < G__12511__a.length) {G__12511__a[G__12511__i] = arguments[G__12511__i + 4]; ++G__12511__i;}
G__12510 = new cljs.core.IndexedSeq(G__12511__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__12510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__12578 = null;
var G__12578__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__12578__1 = (function (result){
var G__12545 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12545) : rf.call(null,G__12545));
});
var G__12578__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__12546 = i;
var G__12547 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12546,G__12547) : f.call(null,G__12546,G__12547));
})();
if((v == null)){
return result;
} else {
var G__12548 = result;
var G__12549 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12548,G__12549) : rf.call(null,G__12548,G__12549));
}
});
G__12578 = function(result,input){
switch(arguments.length){
case 0:
return G__12578__0.call(this);
case 1:
return G__12578__1.call(this,result);
case 2:
return G__12578__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12578.cljs$core$IFn$_invoke$arity$0 = G__12578__0;
G__12578.cljs$core$IFn$_invoke$arity$1 = G__12578__1;
G__12578.cljs$core$IFn$_invoke$arity$2 = G__12578__2;
return G__12578;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4628__auto___12579 = size;
var i_12580 = (0);
while(true){
if((i_12580 < n__4628__auto___12579)){
var x_12581 = (function (){var G__12574 = (idx + i_12580);
var G__12575 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_12580);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12574,G__12575) : f.call(null,G__12574,G__12575));
})();
if((x_12581 == null)){
} else {
cljs.core.chunk_append(b,x_12581);
}

var G__12582 = (i_12580 + (1));
i_12580 = G__12582;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__12576 = idx;
var G__12577 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12576,G__12577) : f.call(null,G__12576,G__12577));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__12796 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12796) : p.call(null,G__12796));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12798 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12798) : p.call(null,G__12798));
})();
if(cljs.core.truth_(and__3729__auto__)){
var G__12799 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12799) : p.call(null,G__12799));
} else {
return and__3729__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12801 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12801) : p.call(null,G__12801));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12803 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12803) : p.call(null,G__12803));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var G__12804 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12804) : p.call(null,G__12804));
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__12973__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__12973 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12974__i = 0, G__12974__a = new Array(arguments.length -  3);
while (G__12974__i < G__12974__a.length) {G__12974__a[G__12974__i] = arguments[G__12974__i + 3]; ++G__12974__i;}
  args = new cljs.core.IndexedSeq(G__12974__a,0);
} 
return G__12973__delegate.call(this,x,y,z,args);};
G__12973.cljs$lang$maxFixedArity = 3;
G__12973.cljs$lang$applyTo = (function (arglist__12975){
var x = cljs.core.first(arglist__12975);
arglist__12975 = cljs.core.next(arglist__12975);
var y = cljs.core.first(arglist__12975);
arglist__12975 = cljs.core.next(arglist__12975);
var z = cljs.core.first(arglist__12975);
var args = cljs.core.rest(arglist__12975);
return G__12973__delegate(x,y,z,args);
});
G__12973.cljs$core$IFn$_invoke$arity$variadic = G__12973__delegate;
return G__12973;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__12976 = null;
if (arguments.length > 3) {
var G__12977__i = 0, G__12977__a = new Array(arguments.length -  3);
while (G__12977__i < G__12977__a.length) {G__12977__a[G__12977__i] = arguments[G__12977__i + 3]; ++G__12977__i;}
G__12976 = new cljs.core.IndexedSeq(G__12977__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12976);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12836 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12836) : p1.call(null,G__12836));
})();
if(cljs.core.truth_(and__3729__auto__)){
var G__12837 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12837) : p2.call(null,G__12837));
} else {
return and__3729__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12839 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12839) : p1.call(null,G__12839));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12841 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12841) : p1.call(null,G__12841));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var and__3729__auto____$2 = (function (){var G__12843 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12843) : p2.call(null,G__12843));
})();
if(cljs.core.truth_(and__3729__auto____$2)){
var G__12844 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12844) : p2.call(null,G__12844));
} else {
return and__3729__auto____$2;
}
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12846 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12846) : p1.call(null,G__12846));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12848 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12848) : p1.call(null,G__12848));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var and__3729__auto____$2 = (function (){var G__12850 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12850) : p1.call(null,G__12850));
})();
if(cljs.core.truth_(and__3729__auto____$2)){
var and__3729__auto____$3 = (function (){var G__12852 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12852) : p2.call(null,G__12852));
})();
if(cljs.core.truth_(and__3729__auto____$3)){
var and__3729__auto____$4 = (function (){var G__12854 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12854) : p2.call(null,G__12854));
})();
if(cljs.core.truth_(and__3729__auto____$4)){
var G__12855 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12855) : p2.call(null,G__12855));
} else {
return and__3729__auto____$4;
}
} else {
return and__3729__auto____$3;
}
} else {
return and__3729__auto____$2;
}
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__12978__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12583_SHARP_){
var and__3729__auto__ = (function (){var G__12860 = p1__12583_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12860) : p1.call(null,G__12860));
})();
if(cljs.core.truth_(and__3729__auto__)){
var G__12861 = p1__12583_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12861) : p2.call(null,G__12861));
} else {
return and__3729__auto__;
}
}),args)));
};
var G__12978 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12979__i = 0, G__12979__a = new Array(arguments.length -  3);
while (G__12979__i < G__12979__a.length) {G__12979__a[G__12979__i] = arguments[G__12979__i + 3]; ++G__12979__i;}
  args = new cljs.core.IndexedSeq(G__12979__a,0);
} 
return G__12978__delegate.call(this,x,y,z,args);};
G__12978.cljs$lang$maxFixedArity = 3;
G__12978.cljs$lang$applyTo = (function (arglist__12980){
var x = cljs.core.first(arglist__12980);
arglist__12980 = cljs.core.next(arglist__12980);
var y = cljs.core.first(arglist__12980);
arglist__12980 = cljs.core.next(arglist__12980);
var z = cljs.core.first(arglist__12980);
var args = cljs.core.rest(arglist__12980);
return G__12978__delegate(x,y,z,args);
});
G__12978.cljs$core$IFn$_invoke$arity$variadic = G__12978__delegate;
return G__12978;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__12981 = null;
if (arguments.length > 3) {
var G__12982__i = 0, G__12982__a = new Array(arguments.length -  3);
while (G__12982__i < G__12982__a.length) {G__12982__a[G__12982__i] = arguments[G__12982__i + 3]; ++G__12982__i;}
G__12981 = new cljs.core.IndexedSeq(G__12982__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12907 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12907) : p1.call(null,G__12907));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12909 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12909) : p2.call(null,G__12909));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var G__12910 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12910) : p3.call(null,G__12910));
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12912 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12912) : p1.call(null,G__12912));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12914 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12914) : p2.call(null,G__12914));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var and__3729__auto____$2 = (function (){var G__12916 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12916) : p3.call(null,G__12916));
})();
if(cljs.core.truth_(and__3729__auto____$2)){
var and__3729__auto____$3 = (function (){var G__12918 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12918) : p1.call(null,G__12918));
})();
if(cljs.core.truth_(and__3729__auto____$3)){
var and__3729__auto____$4 = (function (){var G__12920 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12920) : p2.call(null,G__12920));
})();
if(cljs.core.truth_(and__3729__auto____$4)){
var G__12921 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12921) : p3.call(null,G__12921));
} else {
return and__3729__auto____$4;
}
} else {
return and__3729__auto____$3;
}
} else {
return and__3729__auto____$2;
}
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3729__auto__ = (function (){var G__12923 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12923) : p1.call(null,G__12923));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12925 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12925) : p2.call(null,G__12925));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var and__3729__auto____$2 = (function (){var G__12927 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12927) : p3.call(null,G__12927));
})();
if(cljs.core.truth_(and__3729__auto____$2)){
var and__3729__auto____$3 = (function (){var G__12929 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12929) : p1.call(null,G__12929));
})();
if(cljs.core.truth_(and__3729__auto____$3)){
var and__3729__auto____$4 = (function (){var G__12931 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12931) : p2.call(null,G__12931));
})();
if(cljs.core.truth_(and__3729__auto____$4)){
var and__3729__auto____$5 = (function (){var G__12933 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12933) : p3.call(null,G__12933));
})();
if(cljs.core.truth_(and__3729__auto____$5)){
var and__3729__auto____$6 = (function (){var G__12935 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12935) : p1.call(null,G__12935));
})();
if(cljs.core.truth_(and__3729__auto____$6)){
var and__3729__auto____$7 = (function (){var G__12937 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12937) : p2.call(null,G__12937));
})();
if(cljs.core.truth_(and__3729__auto____$7)){
var G__12938 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12938) : p3.call(null,G__12938));
} else {
return and__3729__auto____$7;
}
} else {
return and__3729__auto____$6;
}
} else {
return and__3729__auto____$5;
}
} else {
return and__3729__auto____$4;
}
} else {
return and__3729__auto____$3;
}
} else {
return and__3729__auto____$2;
}
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__12983__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__12584_SHARP_){
var and__3729__auto__ = (function (){var G__12945 = p1__12584_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12945) : p1.call(null,G__12945));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12947 = p1__12584_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12947) : p2.call(null,G__12947));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var G__12948 = p1__12584_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12948) : p3.call(null,G__12948));
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
}),args)));
};
var G__12983 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12984__i = 0, G__12984__a = new Array(arguments.length -  3);
while (G__12984__i < G__12984__a.length) {G__12984__a[G__12984__i] = arguments[G__12984__i + 3]; ++G__12984__i;}
  args = new cljs.core.IndexedSeq(G__12984__a,0);
} 
return G__12983__delegate.call(this,x,y,z,args);};
G__12983.cljs$lang$maxFixedArity = 3;
G__12983.cljs$lang$applyTo = (function (arglist__12985){
var x = cljs.core.first(arglist__12985);
arglist__12985 = cljs.core.next(arglist__12985);
var y = cljs.core.first(arglist__12985);
arglist__12985 = cljs.core.next(arglist__12985);
var z = cljs.core.first(arglist__12985);
var args = cljs.core.rest(arglist__12985);
return G__12983__delegate(x,y,z,args);
});
G__12983.cljs$core$IFn$_invoke$arity$variadic = G__12983__delegate;
return G__12983;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__12986 = null;
if (arguments.length > 3) {
var G__12987__i = 0, G__12987__a = new Array(arguments.length -  3);
while (G__12987__i < G__12987__a.length) {G__12987__a[G__12987__i] = arguments[G__12987__i + 3]; ++G__12987__i;}
G__12986 = new cljs.core.IndexedSeq(G__12987__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12986);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__12988__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12585_SHARP_){
var G__12964 = x;
return (p1__12585_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12585_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12964) : p1__12585_SHARP_.call(null,G__12964));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12586_SHARP_){
var and__3729__auto__ = (function (){var G__12966 = x;
return (p1__12586_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12586_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12966) : p1__12586_SHARP_.call(null,G__12966));
})();
if(cljs.core.truth_(and__3729__auto__)){
var G__12967 = y;
return (p1__12586_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12586_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12967) : p1__12586_SHARP_.call(null,G__12967));
} else {
return and__3729__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12587_SHARP_){
var and__3729__auto__ = (function (){var G__12969 = x;
return (p1__12587_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12587_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12969) : p1__12587_SHARP_.call(null,G__12969));
})();
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__12971 = y;
return (p1__12587_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12587_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12971) : p1__12587_SHARP_.call(null,G__12971));
})();
if(cljs.core.truth_(and__3729__auto____$1)){
var G__12972 = z;
return (p1__12587_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12587_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12972) : p1__12587_SHARP_.call(null,G__12972));
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__12989__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__12588_SHARP_){
return cljs.core.every_QMARK_(p1__12588_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__12989 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__12990__i = 0, G__12990__a = new Array(arguments.length -  3);
while (G__12990__i < G__12990__a.length) {G__12990__a[G__12990__i] = arguments[G__12990__i + 3]; ++G__12990__i;}
  args = new cljs.core.IndexedSeq(G__12990__a,0);
} 
return G__12989__delegate.call(this,x,y,z,args);};
G__12989.cljs$lang$maxFixedArity = 3;
G__12989.cljs$lang$applyTo = (function (arglist__12991){
var x = cljs.core.first(arglist__12991);
arglist__12991 = cljs.core.next(arglist__12991);
var y = cljs.core.first(arglist__12991);
arglist__12991 = cljs.core.next(arglist__12991);
var z = cljs.core.first(arglist__12991);
var args = cljs.core.rest(arglist__12991);
return G__12989__delegate(x,y,z,args);
});
G__12989.cljs$core$IFn$_invoke$arity$variadic = G__12989__delegate;
return G__12989;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__12992 = null;
if (arguments.length > 3) {
var G__12993__i = 0, G__12993__a = new Array(arguments.length -  3);
while (G__12993__i < G__12993__a.length) {G__12993__a[G__12993__i] = arguments[G__12993__i + 3]; ++G__12993__i;}
G__12992 = new cljs.core.IndexedSeq(G__12993__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__12992);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__12988 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__12994__i = 0, G__12994__a = new Array(arguments.length -  3);
while (G__12994__i < G__12994__a.length) {G__12994__a[G__12994__i] = arguments[G__12994__i + 3]; ++G__12994__i;}
  ps = new cljs.core.IndexedSeq(G__12994__a,0);
} 
return G__12988__delegate.call(this,p1,p2,p3,ps);};
G__12988.cljs$lang$maxFixedArity = 3;
G__12988.cljs$lang$applyTo = (function (arglist__12995){
var p1 = cljs.core.first(arglist__12995);
arglist__12995 = cljs.core.next(arglist__12995);
var p2 = cljs.core.first(arglist__12995);
arglist__12995 = cljs.core.next(arglist__12995);
var p3 = cljs.core.first(arglist__12995);
var ps = cljs.core.rest(arglist__12995);
return G__12988__delegate(p1,p2,p3,ps);
});
G__12988.cljs$core$IFn$_invoke$arity$variadic = G__12988__delegate;
return G__12988;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__12996 = null;
if (arguments.length > 3) {
var G__12997__i = 0, G__12997__a = new Array(arguments.length -  3);
while (G__12997__i < G__12997__a.length) {G__12997__a[G__12997__i] = arguments[G__12997__i + 3]; ++G__12997__i;}
G__12996 = new cljs.core.IndexedSeq(G__12997__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__12996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__13203 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13203) : p.call(null,G__13203));
});
var sp1__2 = (function (x,y){
var or__3741__auto__ = (function (){var G__13205 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13205) : p.call(null,G__13205));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var G__13206 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13206) : p.call(null,G__13206));
}
});
var sp1__3 = (function (x,y,z){
var or__3741__auto__ = (function (){var G__13208 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13208) : p.call(null,G__13208));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13210 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13210) : p.call(null,G__13210));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var G__13211 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13211) : p.call(null,G__13211));
}
}
});
var sp1__4 = (function() { 
var G__13372__delegate = function (x,y,z,args){
var or__3741__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__13372 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13373__i = 0, G__13373__a = new Array(arguments.length -  3);
while (G__13373__i < G__13373__a.length) {G__13373__a[G__13373__i] = arguments[G__13373__i + 3]; ++G__13373__i;}
  args = new cljs.core.IndexedSeq(G__13373__a,0);
} 
return G__13372__delegate.call(this,x,y,z,args);};
G__13372.cljs$lang$maxFixedArity = 3;
G__13372.cljs$lang$applyTo = (function (arglist__13374){
var x = cljs.core.first(arglist__13374);
arglist__13374 = cljs.core.next(arglist__13374);
var y = cljs.core.first(arglist__13374);
arglist__13374 = cljs.core.next(arglist__13374);
var z = cljs.core.first(arglist__13374);
var args = cljs.core.rest(arglist__13374);
return G__13372__delegate(x,y,z,args);
});
G__13372.cljs$core$IFn$_invoke$arity$variadic = G__13372__delegate;
return G__13372;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__13375 = null;
if (arguments.length > 3) {
var G__13376__i = 0, G__13376__a = new Array(arguments.length -  3);
while (G__13376__i < G__13376__a.length) {G__13376__a[G__13376__i] = arguments[G__13376__i + 3]; ++G__13376__i;}
G__13375 = new cljs.core.IndexedSeq(G__13376__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13375);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3741__auto__ = (function (){var G__13243 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13243) : p1.call(null,G__13243));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var G__13244 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13244) : p2.call(null,G__13244));
}
});
var sp2__2 = (function (x,y){
var or__3741__auto__ = (function (){var G__13246 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13246) : p1.call(null,G__13246));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13248 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13248) : p1.call(null,G__13248));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var or__3741__auto____$2 = (function (){var G__13250 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13250) : p2.call(null,G__13250));
})();
if(cljs.core.truth_(or__3741__auto____$2)){
return or__3741__auto____$2;
} else {
var G__13251 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13251) : p2.call(null,G__13251));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3741__auto__ = (function (){var G__13253 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13253) : p1.call(null,G__13253));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13255 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13255) : p1.call(null,G__13255));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var or__3741__auto____$2 = (function (){var G__13257 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13257) : p1.call(null,G__13257));
})();
if(cljs.core.truth_(or__3741__auto____$2)){
return or__3741__auto____$2;
} else {
var or__3741__auto____$3 = (function (){var G__13259 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13259) : p2.call(null,G__13259));
})();
if(cljs.core.truth_(or__3741__auto____$3)){
return or__3741__auto____$3;
} else {
var or__3741__auto____$4 = (function (){var G__13261 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13261) : p2.call(null,G__13261));
})();
if(cljs.core.truth_(or__3741__auto____$4)){
return or__3741__auto____$4;
} else {
var G__13262 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13262) : p2.call(null,G__13262));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__13377__delegate = function (x,y,z,args){
var or__3741__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.some(((function (or__3741__auto__){
return (function (p1__12998_SHARP_){
var or__3741__auto____$1 = (function (){var G__13264 = p1__12998_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13264) : p1.call(null,G__13264));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var G__13265 = p1__12998_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13265) : p2.call(null,G__13265));
}
});})(or__3741__auto__))
,args);
}
};
var G__13377 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13378__i = 0, G__13378__a = new Array(arguments.length -  3);
while (G__13378__i < G__13378__a.length) {G__13378__a[G__13378__i] = arguments[G__13378__i + 3]; ++G__13378__i;}
  args = new cljs.core.IndexedSeq(G__13378__a,0);
} 
return G__13377__delegate.call(this,x,y,z,args);};
G__13377.cljs$lang$maxFixedArity = 3;
G__13377.cljs$lang$applyTo = (function (arglist__13379){
var x = cljs.core.first(arglist__13379);
arglist__13379 = cljs.core.next(arglist__13379);
var y = cljs.core.first(arglist__13379);
arglist__13379 = cljs.core.next(arglist__13379);
var z = cljs.core.first(arglist__13379);
var args = cljs.core.rest(arglist__13379);
return G__13377__delegate(x,y,z,args);
});
G__13377.cljs$core$IFn$_invoke$arity$variadic = G__13377__delegate;
return G__13377;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__13380 = null;
if (arguments.length > 3) {
var G__13381__i = 0, G__13381__a = new Array(arguments.length -  3);
while (G__13381__i < G__13381__a.length) {G__13381__a[G__13381__i] = arguments[G__13381__i + 3]; ++G__13381__i;}
G__13380 = new cljs.core.IndexedSeq(G__13381__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13380);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3741__auto__ = (function (){var G__13311 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13311) : p1.call(null,G__13311));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13313 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13313) : p2.call(null,G__13313));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var G__13314 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13314) : p3.call(null,G__13314));
}
}
});
var sp3__2 = (function (x,y){
var or__3741__auto__ = (function (){var G__13316 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13316) : p1.call(null,G__13316));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13318 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13318) : p2.call(null,G__13318));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var or__3741__auto____$2 = (function (){var G__13320 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13320) : p3.call(null,G__13320));
})();
if(cljs.core.truth_(or__3741__auto____$2)){
return or__3741__auto____$2;
} else {
var or__3741__auto____$3 = (function (){var G__13322 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13322) : p1.call(null,G__13322));
})();
if(cljs.core.truth_(or__3741__auto____$3)){
return or__3741__auto____$3;
} else {
var or__3741__auto____$4 = (function (){var G__13324 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13324) : p2.call(null,G__13324));
})();
if(cljs.core.truth_(or__3741__auto____$4)){
return or__3741__auto____$4;
} else {
var G__13325 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13325) : p3.call(null,G__13325));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3741__auto__ = (function (){var G__13327 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13327) : p1.call(null,G__13327));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13329 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13329) : p2.call(null,G__13329));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var or__3741__auto____$2 = (function (){var G__13331 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13331) : p3.call(null,G__13331));
})();
if(cljs.core.truth_(or__3741__auto____$2)){
return or__3741__auto____$2;
} else {
var or__3741__auto____$3 = (function (){var G__13333 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13333) : p1.call(null,G__13333));
})();
if(cljs.core.truth_(or__3741__auto____$3)){
return or__3741__auto____$3;
} else {
var or__3741__auto____$4 = (function (){var G__13335 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13335) : p2.call(null,G__13335));
})();
if(cljs.core.truth_(or__3741__auto____$4)){
return or__3741__auto____$4;
} else {
var or__3741__auto____$5 = (function (){var G__13337 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13337) : p3.call(null,G__13337));
})();
if(cljs.core.truth_(or__3741__auto____$5)){
return or__3741__auto____$5;
} else {
var or__3741__auto____$6 = (function (){var G__13339 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13339) : p1.call(null,G__13339));
})();
if(cljs.core.truth_(or__3741__auto____$6)){
return or__3741__auto____$6;
} else {
var or__3741__auto____$7 = (function (){var G__13341 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13341) : p2.call(null,G__13341));
})();
if(cljs.core.truth_(or__3741__auto____$7)){
return or__3741__auto____$7;
} else {
var G__13342 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13342) : p3.call(null,G__13342));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__13382__delegate = function (x,y,z,args){
var or__3741__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.some(((function (or__3741__auto__){
return (function (p1__12999_SHARP_){
var or__3741__auto____$1 = (function (){var G__13344 = p1__12999_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13344) : p1.call(null,G__13344));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var or__3741__auto____$2 = (function (){var G__13346 = p1__12999_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13346) : p2.call(null,G__13346));
})();
if(cljs.core.truth_(or__3741__auto____$2)){
return or__3741__auto____$2;
} else {
var G__13347 = p1__12999_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13347) : p3.call(null,G__13347));
}
}
});})(or__3741__auto__))
,args);
}
};
var G__13382 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13383__i = 0, G__13383__a = new Array(arguments.length -  3);
while (G__13383__i < G__13383__a.length) {G__13383__a[G__13383__i] = arguments[G__13383__i + 3]; ++G__13383__i;}
  args = new cljs.core.IndexedSeq(G__13383__a,0);
} 
return G__13382__delegate.call(this,x,y,z,args);};
G__13382.cljs$lang$maxFixedArity = 3;
G__13382.cljs$lang$applyTo = (function (arglist__13384){
var x = cljs.core.first(arglist__13384);
arglist__13384 = cljs.core.next(arglist__13384);
var y = cljs.core.first(arglist__13384);
arglist__13384 = cljs.core.next(arglist__13384);
var z = cljs.core.first(arglist__13384);
var args = cljs.core.rest(arglist__13384);
return G__13382__delegate(x,y,z,args);
});
G__13382.cljs$core$IFn$_invoke$arity$variadic = G__13382__delegate;
return G__13382;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__13385 = null;
if (arguments.length > 3) {
var G__13386__i = 0, G__13386__a = new Array(arguments.length -  3);
while (G__13386__i < G__13386__a.length) {G__13386__a[G__13386__i] = arguments[G__13386__i + 3]; ++G__13386__i;}
G__13385 = new cljs.core.IndexedSeq(G__13386__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__13387__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__13000_SHARP_){
var G__13363 = x;
return (p1__13000_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13000_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13363) : p1__13000_SHARP_.call(null,G__13363));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__13001_SHARP_){
var or__3741__auto__ = (function (){var G__13365 = x;
return (p1__13001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13365) : p1__13001_SHARP_.call(null,G__13365));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var G__13366 = y;
return (p1__13001_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13001_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13366) : p1__13001_SHARP_.call(null,G__13366));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__13002_SHARP_){
var or__3741__auto__ = (function (){var G__13368 = x;
return (p1__13002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13368) : p1__13002_SHARP_.call(null,G__13368));
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var G__13370 = y;
return (p1__13002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13370) : p1__13002_SHARP_.call(null,G__13370));
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var G__13371 = z;
return (p1__13002_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13002_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13371) : p1__13002_SHARP_.call(null,G__13371));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__13388__delegate = function (x,y,z,args){
var or__3741__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.some(((function (or__3741__auto__,ps__$1){
return (function (p1__13003_SHARP_){
return cljs.core.some(p1__13003_SHARP_,args);
});})(or__3741__auto__,ps__$1))
,ps__$1);
}
};
var G__13388 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13389__i = 0, G__13389__a = new Array(arguments.length -  3);
while (G__13389__i < G__13389__a.length) {G__13389__a[G__13389__i] = arguments[G__13389__i + 3]; ++G__13389__i;}
  args = new cljs.core.IndexedSeq(G__13389__a,0);
} 
return G__13388__delegate.call(this,x,y,z,args);};
G__13388.cljs$lang$maxFixedArity = 3;
G__13388.cljs$lang$applyTo = (function (arglist__13390){
var x = cljs.core.first(arglist__13390);
arglist__13390 = cljs.core.next(arglist__13390);
var y = cljs.core.first(arglist__13390);
arglist__13390 = cljs.core.next(arglist__13390);
var z = cljs.core.first(arglist__13390);
var args = cljs.core.rest(arglist__13390);
return G__13388__delegate(x,y,z,args);
});
G__13388.cljs$core$IFn$_invoke$arity$variadic = G__13388__delegate;
return G__13388;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__13391 = null;
if (arguments.length > 3) {
var G__13392__i = 0, G__13392__a = new Array(arguments.length -  3);
while (G__13392__i < G__13392__a.length) {G__13392__a[G__13392__i] = arguments[G__13392__i + 3]; ++G__13392__i;}
G__13391 = new cljs.core.IndexedSeq(G__13392__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__13387 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__13393__i = 0, G__13393__a = new Array(arguments.length -  3);
while (G__13393__i < G__13393__a.length) {G__13393__a[G__13393__i] = arguments[G__13393__i + 3]; ++G__13393__i;}
  ps = new cljs.core.IndexedSeq(G__13393__a,0);
} 
return G__13387__delegate.call(this,p1,p2,p3,ps);};
G__13387.cljs$lang$maxFixedArity = 3;
G__13387.cljs$lang$applyTo = (function (arglist__13394){
var p1 = cljs.core.first(arglist__13394);
arglist__13394 = cljs.core.next(arglist__13394);
var p2 = cljs.core.first(arglist__13394);
arglist__13394 = cljs.core.next(arglist__13394);
var p3 = cljs.core.first(arglist__13394);
var ps = cljs.core.rest(arglist__13394);
return G__13387__delegate(p1,p2,p3,ps);
});
G__13387.cljs$core$IFn$_invoke$arity$variadic = G__13387__delegate;
return G__13387;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__13395 = null;
if (arguments.length > 3) {
var G__13396__i = 0, G__13396__a = new Array(arguments.length -  3);
while (G__13396__i < G__13396__a.length) {G__13396__a[G__13396__i] = arguments[G__13396__i + 3]; ++G__13396__i;}
G__13395 = new cljs.core.IndexedSeq(G__13396__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__13395);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__13451 = null;
var G__13451__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13451__1 = (function (result){
var G__13437 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13437) : rf.call(null,G__13437));
});
var G__13451__2 = (function (result,input){
var G__13438 = result;
var G__13439 = (function (){var G__13440 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13440) : f.call(null,G__13440));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13438,G__13439) : rf.call(null,G__13438,G__13439));
});
var G__13451__3 = (function() { 
var G__13452__delegate = function (result,input,inputs){
var G__13441 = result;
var G__13442 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13441,G__13442) : rf.call(null,G__13441,G__13442));
};
var G__13452 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__13453__i = 0, G__13453__a = new Array(arguments.length -  2);
while (G__13453__i < G__13453__a.length) {G__13453__a[G__13453__i] = arguments[G__13453__i + 2]; ++G__13453__i;}
  inputs = new cljs.core.IndexedSeq(G__13453__a,0);
} 
return G__13452__delegate.call(this,result,input,inputs);};
G__13452.cljs$lang$maxFixedArity = 2;
G__13452.cljs$lang$applyTo = (function (arglist__13454){
var result = cljs.core.first(arglist__13454);
arglist__13454 = cljs.core.next(arglist__13454);
var input = cljs.core.first(arglist__13454);
var inputs = cljs.core.rest(arglist__13454);
return G__13452__delegate(result,input,inputs);
});
G__13452.cljs$core$IFn$_invoke$arity$variadic = G__13452__delegate;
return G__13452;
})()
;
G__13451 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__13451__0.call(this);
case 1:
return G__13451__1.call(this,result);
case 2:
return G__13451__2.call(this,result,input);
default:
var G__13455 = null;
if (arguments.length > 2) {
var G__13456__i = 0, G__13456__a = new Array(arguments.length -  2);
while (G__13456__i < G__13456__a.length) {G__13456__a[G__13456__i] = arguments[G__13456__i + 2]; ++G__13456__i;}
G__13455 = new cljs.core.IndexedSeq(G__13456__a,0);
}
return G__13451__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__13455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13451.cljs$lang$maxFixedArity = 2;
G__13451.cljs$lang$applyTo = G__13451__3.cljs$lang$applyTo;
G__13451.cljs$core$IFn$_invoke$arity$0 = G__13451__0;
G__13451.cljs$core$IFn$_invoke$arity$1 = G__13451__1;
G__13451.cljs$core$IFn$_invoke$arity$2 = G__13451__2;
G__13451.cljs$core$IFn$_invoke$arity$variadic = G__13451__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13451;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4628__auto___13457 = size;
var i_13458 = (0);
while(true){
if((i_13458 < n__4628__auto___13457)){
cljs.core.chunk_append(b,(function (){var G__13443 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13458);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13443) : f.call(null,G__13443));
})());

var G__13459 = (i_13458 + (1));
i_13458 = G__13459;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13444 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13444) : f.call(null,G__13444));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__13445 = cljs.core.first(s1);
var G__13446 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13445,G__13446) : f.call(null,G__13445,G__13446));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__13447 = cljs.core.first(s1);
var G__13448 = cljs.core.first(s2);
var G__13449 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13447,G__13448,G__13449) : f.call(null,G__13447,G__13448,G__13449));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__13460__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__13397_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__13397_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__13460 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13461__i = 0, G__13461__a = new Array(arguments.length -  4);
while (G__13461__i < G__13461__a.length) {G__13461__a[G__13461__i] = arguments[G__13461__i + 4]; ++G__13461__i;}
  colls = new cljs.core.IndexedSeq(G__13461__a,0);
} 
return G__13460__delegate.call(this,f,c1,c2,c3,colls);};
G__13460.cljs$lang$maxFixedArity = 4;
G__13460.cljs$lang$applyTo = (function (arglist__13462){
var f = cljs.core.first(arglist__13462);
arglist__13462 = cljs.core.next(arglist__13462);
var c1 = cljs.core.first(arglist__13462);
arglist__13462 = cljs.core.next(arglist__13462);
var c2 = cljs.core.first(arglist__13462);
arglist__13462 = cljs.core.next(arglist__13462);
var c3 = cljs.core.first(arglist__13462);
var colls = cljs.core.rest(arglist__13462);
return G__13460__delegate(f,c1,c2,c3,colls);
});
G__13460.cljs$core$IFn$_invoke$arity$variadic = G__13460__delegate;
return G__13460;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__13463 = null;
if (arguments.length > 4) {
var G__13464__i = 0, G__13464__a = new Array(arguments.length -  4);
while (G__13464__i < G__13464__a.length) {G__13464__a[G__13464__i] = arguments[G__13464__i + 4]; ++G__13464__i;}
G__13463 = new cljs.core.IndexedSeq(G__13464__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13473 = null;
var G__13473__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13473__1 = (function (result){
var G__13470 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13470) : rf.call(null,G__13470));
});
var G__13473__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__13471 = result;
var G__13472 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13471,G__13472) : rf.call(null,G__13471,G__13472));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__13473 = function(result,input){
switch(arguments.length){
case 0:
return G__13473__0.call(this);
case 1:
return G__13473__1.call(this,result);
case 2:
return G__13473__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13473.cljs$core$IFn$_invoke$arity$0 = G__13473__0;
G__13473.cljs$core$IFn$_invoke$arity$1 = G__13473__1;
G__13473.cljs$core$IFn$_invoke$arity$2 = G__13473__2;
return G__13473;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__13480 = null;
var G__13480__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13480__1 = (function (result){
var G__13477 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13477) : rf.call(null,G__13477));
});
var G__13480__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__13478 = result;
var G__13479 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13478,G__13479) : rf.call(null,G__13478,G__13479));
}
});
G__13480 = function(result,input){
switch(arguments.length){
case 0:
return G__13480__0.call(this);
case 1:
return G__13480__1.call(this,result);
case 2:
return G__13480__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13480.cljs$core$IFn$_invoke$arity$0 = G__13480__0;
G__13480.cljs$core$IFn$_invoke$arity$1 = G__13480__1;
G__13480.cljs$core$IFn$_invoke$arity$2 = G__13480__2;
return G__13480;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__13481 = (n__$1 - (1));
var G__13482 = cljs.core.rest(s);
n__$1 = G__13481;
coll__$1 = G__13482;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__13485 = cljs.core.next(s);
var G__13486 = cljs.core.next(lead);
s = G__13485;
lead = G__13486;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__13499 = null;
var G__13499__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13499__1 = (function (result){
var G__13493 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13493) : rf.call(null,G__13493));
});
var G__13499__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3729__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3729__auto__)){
var G__13494 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13494) : pred.call(null,G__13494));
} else {
return and__3729__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__13495 = result;
var G__13496 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13495,G__13496) : rf.call(null,G__13495,G__13496));
}
});
G__13499 = function(result,input){
switch(arguments.length){
case 0:
return G__13499__0.call(this);
case 1:
return G__13499__1.call(this,result);
case 2:
return G__13499__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13499.cljs$core$IFn$_invoke$arity$0 = G__13499__0;
G__13499.cljs$core$IFn$_invoke$arity$1 = G__13499__1;
G__13499.cljs$core$IFn$_invoke$arity$2 = G__13499__2;
return G__13499;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3729__auto__ = s;
if(and__3729__auto__){
var G__13498 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13498) : pred__$1.call(null,G__13498));
} else {
return and__3729__auto__;
}
})())){
var G__13500 = pred__$1;
var G__13501 = cljs.core.rest(s);
pred__$1 = G__13500;
coll__$1 = G__13501;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__13510 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13510) : f.call(null,G__13510));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__13513__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__13513 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13514__i = 0, G__13514__a = new Array(arguments.length -  2);
while (G__13514__i < G__13514__a.length) {G__13514__a[G__13514__i] = arguments[G__13514__i + 2]; ++G__13514__i;}
  colls = new cljs.core.IndexedSeq(G__13514__a,0);
} 
return G__13513__delegate.call(this,c1,c2,colls);};
G__13513.cljs$lang$maxFixedArity = 2;
G__13513.cljs$lang$applyTo = (function (arglist__13515){
var c1 = cljs.core.first(arglist__13515);
arglist__13515 = cljs.core.next(arglist__13515);
var c2 = cljs.core.first(arglist__13515);
var colls = cljs.core.rest(arglist__13515);
return G__13513__delegate(c1,c2,colls);
});
G__13513.cljs$core$IFn$_invoke$arity$variadic = G__13513__delegate;
return G__13513;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__13516 = null;
if (arguments.length > 2) {
var G__13517__i = 0, G__13517__a = new Array(arguments.length -  2);
while (G__13517__i < G__13517__a.length) {G__13517__a[G__13517__i] = arguments[G__13517__i + 2]; ++G__13517__i;}
G__13516 = new cljs.core.IndexedSeq(G__13517__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__13516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function interpose(sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__13526__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__13526 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__13527__i = 0, G__13527__a = new Array(arguments.length -  1);
while (G__13527__i < G__13527__a.length) {G__13527__a[G__13527__i] = arguments[G__13527__i + 1]; ++G__13527__i;}
  colls = new cljs.core.IndexedSeq(G__13527__a,0);
} 
return G__13526__delegate.call(this,f,colls);};
G__13526.cljs$lang$maxFixedArity = 1;
G__13526.cljs$lang$applyTo = (function (arglist__13528){
var f = cljs.core.first(arglist__13528);
var colls = cljs.core.rest(arglist__13528);
return G__13526__delegate(f,colls);
});
G__13526.cljs$core$IFn$_invoke$arity$variadic = G__13526__delegate;
return G__13526;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__13529 = null;
if (arguments.length > 1) {
var G__13530__i = 0, G__13530__a = new Array(arguments.length -  1);
while (G__13530__i < G__13530__a.length) {G__13530__a[G__13530__i] = arguments[G__13530__i + 1]; ++G__13530__i;}
G__13529 = new cljs.core.IndexedSeq(G__13530__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__13549 = null;
var G__13549__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13549__1 = (function (result){
var G__13543 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13543) : rf.call(null,G__13543));
});
var G__13549__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__13544 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13544) : pred.call(null,G__13544));
})())){
var G__13545 = result;
var G__13546 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13545,G__13546) : rf.call(null,G__13545,G__13546));
} else {
return result;
}
});
G__13549 = function(result,input){
switch(arguments.length){
case 0:
return G__13549__0.call(this);
case 1:
return G__13549__1.call(this,result);
case 2:
return G__13549__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13549.cljs$core$IFn$_invoke$arity$0 = G__13549__0;
G__13549.cljs$core$IFn$_invoke$arity$1 = G__13549__1;
G__13549.cljs$core$IFn$_invoke$arity$2 = G__13549__2;
return G__13549;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4628__auto___13550 = size;
var i_13551 = (0);
while(true){
if((i_13551 < n__4628__auto___13550)){
if(cljs.core.truth_((function (){var G__13547 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13551);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13547) : pred.call(null,G__13547));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13551));
} else {
}

var G__13552 = (i_13551 + (1));
i_13551 = G__13552;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__13548 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13548) : pred.call(null,G__13548));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__13559 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__13559) : branch_QMARK_.call(null,G__13559));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__13560 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__13560) : children.call(null,G__13560));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__13561_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__13561_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__13564 = to;
if(G__13564){
var bit__4415__auto__ = (G__13564.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4415__auto__) || (G__13564.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__13565 = to;
if(G__13565){
var bit__4415__auto__ = (G__13565.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4415__auto__) || (G__13565.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__13567 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13567) : f.call(null,G__13567));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__13568__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__13568 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__13569__i = 0, G__13569__a = new Array(arguments.length -  4);
while (G__13569__i < G__13569__a.length) {G__13569__a[G__13569__i] = arguments[G__13569__i + 4]; ++G__13569__i;}
  colls = new cljs.core.IndexedSeq(G__13569__a,0);
} 
return G__13568__delegate.call(this,f,c1,c2,c3,colls);};
G__13568.cljs$lang$maxFixedArity = 4;
G__13568.cljs$lang$applyTo = (function (arglist__13570){
var f = cljs.core.first(arglist__13570);
arglist__13570 = cljs.core.next(arglist__13570);
var c1 = cljs.core.first(arglist__13570);
arglist__13570 = cljs.core.next(arglist__13570);
var c2 = cljs.core.first(arglist__13570);
arglist__13570 = cljs.core.next(arglist__13570);
var c3 = cljs.core.first(arglist__13570);
var colls = cljs.core.rest(arglist__13570);
return G__13568__delegate(f,c1,c2,c3,colls);
});
G__13568.cljs$core$IFn$_invoke$arity$variadic = G__13568__delegate;
return G__13568;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__13571 = null;
if (arguments.length > 4) {
var G__13572__i = 0, G__13572__a = new Array(arguments.length -  4);
while (G__13572__i < G__13572__a.length) {G__13572__a[G__13572__i] = arguments[G__13572__i + 4]; ++G__13572__i;}
G__13571 = new cljs.core.IndexedSeq(G__13572__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__13571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__13574 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13574) : pred.call(null,G__13574));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__13589 = m__$1;
if(G__13589){
var bit__4422__auto__ = (G__13589.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4422__auto__) || (G__13589.cljs$core$ILookup$)){
return true;
} else {
if((!G__13589.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13589);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__13589);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__13590 = sentinel;
var G__13591 = m__$2;
var G__13592 = cljs.core.next(ks__$1);
sentinel = G__13590;
m__$1 = G__13591;
ks__$1 = G__13592;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__13593,v){
var vec__13598 = p__13593;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13598,(0),null);
var ks = cljs.core.nthnext(vec__13598,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__13599,f){
var vec__13637 = p__13599;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13637,(0),null);
var ks = cljs.core.nthnext(vec__13637,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13638 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13638) : f.call(null,G__13638));
})());
}
});
var update_in__4 = (function (m,p__13600,f,a){
var vec__13639 = p__13600;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13639,(0),null);
var ks = cljs.core.nthnext(vec__13639,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13640 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13641 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13640,G__13641) : f.call(null,G__13640,G__13641));
})());
}
});
var update_in__5 = (function (m,p__13601,f,a,b){
var vec__13642 = p__13601;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13642,(0),null);
var ks = cljs.core.nthnext(vec__13642,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13643 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13644 = a;
var G__13645 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13643,G__13644,G__13645) : f.call(null,G__13643,G__13644,G__13645));
})());
}
});
var update_in__6 = (function (m,p__13602,f,a,b,c){
var vec__13646 = p__13602;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13646,(0),null);
var ks = cljs.core.nthnext(vec__13646,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13647 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13648 = a;
var G__13649 = b;
var G__13650 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13647,G__13648,G__13649,G__13650) : f.call(null,G__13647,G__13648,G__13649,G__13650));
})());
}
});
var update_in__7 = (function() { 
var G__13652__delegate = function (m,p__13603,f,a,b,c,args){
var vec__13651 = p__13603;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13651,(0),null);
var ks = cljs.core.nthnext(vec__13651,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__13652 = function (m,p__13603,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__13653__i = 0, G__13653__a = new Array(arguments.length -  6);
while (G__13653__i < G__13653__a.length) {G__13653__a[G__13653__i] = arguments[G__13653__i + 6]; ++G__13653__i;}
  args = new cljs.core.IndexedSeq(G__13653__a,0);
} 
return G__13652__delegate.call(this,m,p__13603,f,a,b,c,args);};
G__13652.cljs$lang$maxFixedArity = 6;
G__13652.cljs$lang$applyTo = (function (arglist__13654){
var m = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var p__13603 = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var f = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var a = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var b = cljs.core.first(arglist__13654);
arglist__13654 = cljs.core.next(arglist__13654);
var c = cljs.core.first(arglist__13654);
var args = cljs.core.rest(arglist__13654);
return G__13652__delegate(m,p__13603,f,a,b,c,args);
});
G__13652.cljs$core$IFn$_invoke$arity$variadic = G__13652__delegate;
return G__13652;
})()
;
update_in = function(m,p__13603,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__13603,f);
case 4:
return update_in__4.call(this,m,p__13603,f,a);
case 5:
return update_in__5.call(this,m,p__13603,f,a,b);
case 6:
return update_in__6.call(this,m,p__13603,f,a,b,c);
default:
var G__13655 = null;
if (arguments.length > 6) {
var G__13656__i = 0, G__13656__a = new Array(arguments.length -  6);
while (G__13656__i < G__13656__a.length) {G__13656__a[G__13656__i] = arguments[G__13656__i + 6]; ++G__13656__i;}
G__13655 = new cljs.core.IndexedSeq(G__13656__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__13603,f,a,b,c, G__13655);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13667 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13667) : f.call(null,G__13667));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13668 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13669 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13668,G__13669) : f.call(null,G__13668,G__13669));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13670 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13671 = x;
var G__13672 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13670,G__13671,G__13672) : f.call(null,G__13670,G__13671,G__13672));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__13673 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__13674 = x;
var G__13675 = y;
var G__13676 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13673,G__13674,G__13675,G__13676) : f.call(null,G__13673,G__13674,G__13675,G__13676));
})());
});
var update__7 = (function() { 
var G__13677__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__13677 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__13678__i = 0, G__13678__a = new Array(arguments.length -  6);
while (G__13678__i < G__13678__a.length) {G__13678__a[G__13678__i] = arguments[G__13678__i + 6]; ++G__13678__i;}
  more = new cljs.core.IndexedSeq(G__13678__a,0);
} 
return G__13677__delegate.call(this,m,k,f,x,y,z,more);};
G__13677.cljs$lang$maxFixedArity = 6;
G__13677.cljs$lang$applyTo = (function (arglist__13679){
var m = cljs.core.first(arglist__13679);
arglist__13679 = cljs.core.next(arglist__13679);
var k = cljs.core.first(arglist__13679);
arglist__13679 = cljs.core.next(arglist__13679);
var f = cljs.core.first(arglist__13679);
arglist__13679 = cljs.core.next(arglist__13679);
var x = cljs.core.first(arglist__13679);
arglist__13679 = cljs.core.next(arglist__13679);
var y = cljs.core.first(arglist__13679);
arglist__13679 = cljs.core.next(arglist__13679);
var z = cljs.core.first(arglist__13679);
var more = cljs.core.rest(arglist__13679);
return G__13677__delegate(m,k,f,x,y,z,more);
});
G__13677.cljs$core$IFn$_invoke$arity$variadic = G__13677__delegate;
return G__13677;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__13680 = null;
if (arguments.length > 6) {
var G__13681__i = 0, G__13681__a = new Array(arguments.length -  6);
while (G__13681__i < G__13681__a.length) {G__13681__a[G__13681__i] = arguments[G__13681__i + 6]; ++G__13681__i;}
G__13680 = new cljs.core.IndexedSeq(G__13681__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__13680);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__13682 = (ll - (5));
var G__13683 = r;
ll = G__13682;
ret = G__13683;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13688 = cljs.core.pv_aget(node,(0));
var G__13689 = (level - (5));
node = G__13688;
level = G__13689;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__13690 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__13691 = (level - (5));
node = G__13690;
level = G__13691;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13701 = init__$2;
var G__13702 = (j + i);
var G__13703 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13701,G__13702,G__13703) : f.call(null,G__13701,G__13702,G__13703));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13714 = (j + (1));
var G__13715 = init__$3;
j = G__13714;
init__$2 = G__13715;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13704 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13704) : cljs.core.deref.call(null,G__13704));
} else {
var G__13716 = (i + len);
var G__13717 = init__$2;
i = G__13716;
init__$1 = G__13717;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__13705 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__13705) : cljs.core.tv_editable_root.call(null,G__13705));
})(),(function (){var G__13706 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__13706) : cljs.core.tv_editable_tail.call(null,G__13706));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__13707 = init__$2;
var G__13708 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13707,G__13708) : f.call(null,G__13707,G__13708));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__13718 = (j + (1));
var G__13719 = init__$3;
j = G__13718;
init__$2 = G__13719;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13709 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13709) : cljs.core.deref.call(null,G__13709));
} else {
var G__13720 = (i + len);
var G__13721 = init__$2;
i = G__13720;
init__$1 = G__13721;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__13710 = coll__$1;
var G__13711 = cljs.core.first_array_for_longvec(coll__$1);
var G__13712 = (0);
var G__13713 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13710,G__13711,G__13712,G__13713) : cljs.core.chunked_seq.call(null,G__13710,G__13711,G__13712,G__13713));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4628__auto___13722 = len;
var i_13723 = (0);
while(true){
if((i_13723 < n__4628__auto___13722)){
(new_tail[i_13723] = (self__.tail[i_13723]));

var G__13724 = (i_13723 + (1));
i_13723 = G__13724;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__13725 = null;
var G__13725__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13725__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13725 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13725__2.call(this,self__,k);
case 3:
return G__13725__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13725.cljs$core$IFn$_invoke$arity$2 = G__13725__2;
G__13725.cljs$core$IFn$_invoke$arity$3 = G__13725__3;
return G__13725;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args13700){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13700)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],(0)));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__13726 = (i + (1));
var G__13727 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__13726;
out = G__13727;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.vec = (function vec(coll){
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13728__i = 0, G__13728__a = new Array(arguments.length -  0);
while (G__13728__i < G__13728__a.length) {G__13728__a[G__13728__i] = arguments[G__13728__i + 0]; ++G__13728__i;}
  args = new cljs.core.IndexedSeq(G__13728__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__13729){
var args = cljs.core.seq(arglist__13729);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13730 = self__.vec;
var G__13731 = self__.node;
var G__13732 = self__.i;
var G__13733 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13730,G__13731,G__13732,G__13733) : cljs.core.chunked_seq.call(null,G__13730,G__13731,G__13732,G__13733));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__13734 = self__.vec;
var G__13735 = (self__.i + self__.off);
var G__13736 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13734,G__13735,G__13736) : cljs.core.subvec.call(null,G__13734,G__13735,G__13736));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__13737 = self__.vec;
var G__13738 = (self__.i + self__.off);
var G__13739 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13737,G__13738,G__13739) : cljs.core.subvec.call(null,G__13737,G__13738,G__13739));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__13740 = self__.vec;
var G__13741 = self__.node;
var G__13742 = self__.i;
var G__13743 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13740,G__13741,G__13742,G__13743) : cljs.core.chunked_seq.call(null,G__13740,G__13741,G__13742,G__13743));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13744 = self__.vec;
var G__13745 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13746 = end;
var G__13747 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13744,G__13745,G__13746,G__13747) : cljs.core.chunked_seq.call(null,G__13744,G__13745,G__13746,G__13747));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__13748 = self__.vec;
var G__13749 = self__.node;
var G__13750 = self__.i;
var G__13751 = self__.off;
var G__13752 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__13748,G__13749,G__13750,G__13751,G__13752) : cljs.core.chunked_seq.call(null,G__13748,G__13749,G__13750,G__13751,G__13752));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__13753 = self__.vec;
var G__13754 = cljs.core.unchecked_array_for(self__.vec,end);
var G__13755 = end;
var G__13756 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13753,G__13754,G__13755,G__13756) : cljs.core.chunked_seq.call(null,G__13753,G__13754,G__13755,G__13756));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__13758 = self__.meta;
var G__13759 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__13760 = self__.start;
var G__13761 = (function (){var x__4058__auto__ = self__.end;
var y__4059__auto__ = (v_pos + (1));
return ((x__4058__auto__ > y__4059__auto__) ? x__4058__auto__ : y__4059__auto__);
})();
var G__13762 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13758,G__13759,G__13760,G__13761,G__13762) : cljs.core.build_subvec.call(null,G__13758,G__13759,G__13760,G__13761,G__13762));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__13763 = self__.meta;
var G__13764 = self__.v;
var G__13765 = self__.start;
var G__13766 = (self__.end - (1));
var G__13767 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13763,G__13764,G__13765,G__13766,G__13767) : cljs.core.build_subvec.call(null,G__13763,G__13764,G__13765,G__13766,G__13767));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__13769 = meta__$1;
var G__13770 = self__.v;
var G__13771 = self__.start;
var G__13772 = self__.end;
var G__13773 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13769,G__13770,G__13771,G__13772,G__13773) : cljs.core.build_subvec.call(null,G__13769,G__13770,G__13771,G__13772,G__13773));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13774 = self__.meta;
var G__13775 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__13776 = self__.start;
var G__13777 = (self__.end + (1));
var G__13778 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13774,G__13775,G__13776,G__13777,G__13778) : cljs.core.build_subvec.call(null,G__13774,G__13775,G__13776,G__13777,G__13778));
});

cljs.core.Subvec.prototype.call = (function() {
var G__13779 = null;
var G__13779__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__13779__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__13779 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13779__2.call(this,self__,k);
case 3:
return G__13779__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13779.cljs$core$IFn$_invoke$arity$2 = G__13779__2;
G__13779.cljs$core$IFn$_invoke$arity$3 = G__13779__3;
return G__13779;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args13757){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13757)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__13780 = meta;
var G__13781 = v.v;
var G__13782 = (v.start + start);
var G__13783 = (v.start + end);
var G__13784 = __hash;
meta = G__13780;
v = G__13781;
start = G__13782;
end = G__13783;
__hash = G__13784;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj13791 = {};
return obj13791;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__13799 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__13800 = (level - (5));
node = G__13799;
level = G__13800;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__13804 = null;
var G__13804__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13804__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13804 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13804__2.call(this,self__,k);
case 3:
return G__13804__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13804.cljs$core$IFn$_invoke$arity$2 = G__13804__2;
G__13804.cljs$core$IFn$_invoke$arity$3 = G__13804__3;
return G__13804;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args13801){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13801)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3741__auto__ = self__.front;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3741__auto__ = self__.rear;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,(0)));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__13805 = (i + incr);
i = G__13805;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__13806 = (i + (1));
var G__13807 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__13806;
out = G__13807;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj13811 = {};
return obj13811;
})();
var l = ks.length;
var i_13812 = (0);
while(true){
if((i_13812 < l)){
var k_13813 = (ks[i_13812]);
(new_obj[k_13813] = (obj[k_13813]));

var G__13814 = (i_13812 + (1));
i_13812 = G__13814;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3729__auto__ = (function (){var G__13818 = k;
return goog.isString(G__13818);
})();
if(cljs.core.truth_(and__3729__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3729__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__13819 = init__$1;
var G__13820 = k;
var G__13821 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13819,G__13820,G__13821) : f.call(null,G__13819,G__13820,G__13821));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13822 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13822) : cljs.core.deref.call(null,G__13822));
} else {
var G__13828 = cljs.core.rest(keys__$1);
var G__13829 = init__$2;
keys__$1 = G__13828;
init__$1 = G__13829;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3729__auto__ = (function (){var G__13824 = k;
return goog.isString(G__13824);
})();
if(cljs.core.truth_(and__3729__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3729__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__13825 = k;
return goog.isString(G__13825);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3729__auto__ = (function (){var G__13827 = k;
return goog.isString(G__13827);
})();
if(cljs.core.truth_(and__3729__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3729__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__13815_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__13815_SHARP_,(self__.strobj[p1__13815_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__13830 = null;
var G__13830__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13830__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13830 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13830__2.call(this,self__,k);
case 3:
return G__13830__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13830.cljs$core$IFn$_invoke$arity$2 = G__13830__2;
G__13830.cljs$core$IFn$_invoke$arity$3 = G__13830__3;
return G__13830;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args13816){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13816)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj13832 = {};
return obj13832;
})(),(0),(0)));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__13833 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13833,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13833,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__13834 = (i + (2));
i = G__13834;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__13835 = (i + (2));
i = G__13835;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__13836 = (i + (2));
i = G__13836;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__13837 = (i + (2));
i = G__13837;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__13838 = (i + (2));
i = G__13838;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3741__auto__ = (function (){var G__13842 = k;
return goog.isString(G__13842);
})();
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_13843 = (0);
while(true){
if((i_13843 < l)){
(narr[i_13843] = (arr[i_13843]));

var G__13844 = (i_13843 + (1));
i_13843 = G__13844;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13846 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13846) : cljs.core.keys.call(null,G__13846));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13847 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13847) : cljs.core.vals.call(null,G__13847));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13848 = cljs.core.seq(coll);
var chunk__13849 = null;
var count__13850 = (0);
var i__13851 = (0);
while(true){
if((i__13851 < count__13850)){
var vec__13852 = chunk__13849.cljs$core$IIndexed$_nth$arity$2(null,i__13851);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13852,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13852,(1),null);
var G__13853_13866 = v;
var G__13854_13867 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13853_13866,G__13854_13867) : f.call(null,G__13853_13866,G__13854_13867));

var G__13868 = seq__13848;
var G__13869 = chunk__13849;
var G__13870 = count__13850;
var G__13871 = (i__13851 + (1));
seq__13848 = G__13868;
chunk__13849 = G__13869;
count__13850 = G__13870;
i__13851 = G__13871;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13848);
if(temp__4126__auto__){
var seq__13848__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13848__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__13848__$1);
var G__13872 = cljs.core.chunk_rest(seq__13848__$1);
var G__13873 = c__4528__auto__;
var G__13874 = cljs.core.count(c__4528__auto__);
var G__13875 = (0);
seq__13848 = G__13872;
chunk__13849 = G__13873;
count__13850 = G__13874;
i__13851 = G__13875;
continue;
} else {
var vec__13855 = cljs.core.first(seq__13848__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13855,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13855,(1),null);
var G__13856_13876 = v;
var G__13857_13877 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13856_13876,G__13857_13877) : f.call(null,G__13856_13876,G__13857_13877));

var G__13878 = cljs.core.next(seq__13848__$1);
var G__13879 = null;
var G__13880 = (0);
var G__13881 = (0);
seq__13848 = G__13878;
chunk__13849 = G__13879;
count__13850 = G__13880;
i__13851 = G__13881;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__13858 = init__$1;
var G__13859 = (self__.arr[i]);
var G__13860 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13858,G__13859,G__13860) : f.call(null,G__13858,G__13859,G__13860));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13861 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13861) : cljs.core.deref.call(null,G__13861));
} else {
var G__13882 = (i + (2));
var G__13883 = init__$2;
i = G__13882;
init__$1 = G__13883;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__13862 = other;
if(G__13862){
var bit__4415__auto__ = (G__13862.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4415__auto__) || (G__13862.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__13884 = (i + (2));
i = G__13884;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj13864 = {};
return obj13864;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__13885 = (s + (2));
var G__13886 = d;
s = G__13885;
d = G__13886;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__13887 = (s + (2));
var G__13888 = (d + (2));
s = G__13887;
d = G__13888;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__13865 = cljs.core.aclone(self__.arr);
(G__13865[(idx + (1))] = v);

return G__13865;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__13889 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__13890 = cljs.core.next(es);
ret = G__13889;
es = G__13890;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__13891 = null;
var G__13891__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__13891__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__13891 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__13891__2.call(this,self__,k);
case 3:
return G__13891__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13891.cljs$core$IFn$_invoke$arity$2 = G__13891__2;
G__13891.cljs$core$IFn$_invoke$arity$3 = G__13891__3;
return G__13891;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args13845){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13845)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],null));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__13892 = (i + (2));
var G__13893 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__13892;
ret = G__13893;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__13894_13902 = self__.arr;
G__13894_13902.pop();

G__13894_13902.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__13895 = self__.len;
var G__13896 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__13895,G__13896) : cljs.core.array__GT_transient_hash_map.call(null,G__13895,G__13896));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__13897 = o;
if(G__13897){
var bit__4422__auto__ = (G__13897.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4422__auto__) || (G__13897.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__13897.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13897);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__13897);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__13898 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13898) : cljs.core.key.call(null,G__13898));
})(),(function (){var G__13899 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13899) : cljs.core.val.call(null,G__13899));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__13903 = cljs.core.next(es);
var G__13904 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__13900 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13900) : cljs.core.key.call(null,G__13900));
})(),(function (){var G__13901 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13901) : cljs.core.val.call(null,G__13901));
})());
es = G__13903;
tcoll__$2 = G__13904;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__13905 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__13906 = (i + (2));
out = G__13905;
i = G__13906;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__13909 = cljs.core.aclone(arr);
(G__13909[i] = a);

return G__13909;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__13910 = cljs.core.aclone(arr);
(G__13910[i] = a);

(G__13910[j] = b);

return G__13910;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__13915 = init__$1;
var G__13916 = k;
var G__13917 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13915,G__13916,G__13917) : f.call(null,G__13915,G__13916,G__13917));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13918 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13918) : cljs.core.deref.call(null,G__13918));
} else {
var G__13919 = (i + (2));
var G__13920 = init__$2;
i = G__13919;
init__$1 = G__13920;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13921 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13921) : cljs.core.create_inode_seq.call(null,G__13921));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_13935 = (0);
var j_13936 = (0);
while(true){
if((i_13935 < (32))){
if((((self__.bitmap >>> i_13935) & (1)) === (0))){
var G__13937 = (i_13935 + (1));
var G__13938 = j_13936;
i_13935 = G__13937;
j_13936 = G__13938;
continue;
} else {
(nodes[i_13935] = ((!(((self__.arr[j_13936]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_13936])),(self__.arr[j_13936]),(self__.arr[(j_13936 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13936 + (1))])));

var G__13939 = (i_13935 + (1));
var G__13940 = (j_13936 + (2));
i_13935 = G__13939;
j_13936 = G__13940;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13922 = edit__$1;
var G__13923 = (shift + (5));
var G__13924 = key_or_nil;
var G__13925 = val_or_node;
var G__13926 = hash;
var G__13927 = key;
var G__13928 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928) : cljs.core.create_node.call(null,G__13922,G__13923,G__13924,G__13925,G__13926,G__13927,G__13928));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_13941 = (0);
var j_13942 = (0);
while(true){
if((i_13941 < (32))){
if((((self__.bitmap >>> i_13941) & (1)) === (0))){
var G__13943 = (i_13941 + (1));
var G__13944 = j_13942;
i_13941 = G__13943;
j_13942 = G__13944;
continue;
} else {
(nodes[i_13941] = ((!(((self__.arr[j_13942]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_13942])),(self__.arr[j_13942]),(self__.arr[(j_13942 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13942 + (1))])));

var G__13945 = (i_13941 + (1));
var G__13946 = (j_13942 + (2));
i_13941 = G__13945;
j_13942 = G__13946;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__13929 = (shift + (5));
var G__13930 = key_or_nil;
var G__13931 = val_or_node;
var G__13932 = hash;
var G__13933 = key;
var G__13934 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__13929,G__13930,G__13931,G__13932,G__13933,G__13934) : cljs.core.create_node.call(null,G__13929,G__13930,G__13931,G__13932,G__13933,G__13934));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__13947 = (i + (1));
var G__13948 = (j + (2));
var G__13949 = (bitmap | ((1) << i));
i = G__13947;
j = G__13948;
bitmap = G__13949;
continue;
} else {
var G__13950 = (i + (1));
var G__13951 = j;
var G__13952 = bitmap;
i = G__13950;
j = G__13951;
bitmap = G__13952;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13953 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__13953) : cljs.core.create_array_node_seq.call(null,G__13953));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__13954 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13954) : cljs.core.deref.call(null,G__13954));
} else {
var G__13955 = (i + (1));
var G__13956 = init__$2;
i = G__13955;
init__$1 = G__13956;
continue;
}
} else {
var G__13957 = (i + (1));
var G__13958 = init__$1;
i = G__13957;
init__$1 = G__13958;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__13959 = (i + (2));
i = G__13959;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__13960 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13960) : cljs.core.create_inode_seq.call(null,G__13960));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__13961 = self__.nodes;
var G__13962 = (self__.i + (2));
var G__13963 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13961,G__13962,G__13963) : cljs.core.create_inode_seq.call(null,G__13961,G__13962,G__13963));
} else {
var G__13964 = self__.nodes;
var G__13965 = self__.i;
var G__13966 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13964,G__13965,G__13966) : cljs.core.create_inode_seq.call(null,G__13964,G__13965,G__13966));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__13970 = (j + (2));
j = G__13970;
continue;
}
} else {
var G__13971 = (j + (2));
j = G__13971;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13972 = null;
var G__13973 = self__.nodes;
var G__13974 = self__.i;
var G__13975 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__13972,G__13973,G__13974,G__13975) : cljs.core.create_array_node_seq.call(null,G__13972,G__13973,G__13974,G__13975));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__13980 = (j + (1));
j = G__13980;
continue;
}
} else {
var G__13981 = (j + (1));
j = G__13981;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13983 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13983) : cljs.core.keys.call(null,G__13983));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__13984 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13984) : cljs.core.vals.call(null,G__13984));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__13985 = cljs.core.seq(coll);
var chunk__13986 = null;
var count__13987 = (0);
var i__13988 = (0);
while(true){
if((i__13988 < count__13987)){
var vec__13989 = chunk__13986.cljs$core$IIndexed$_nth$arity$2(null,i__13988);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13989,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13989,(1),null);
var G__13990_14001 = v;
var G__13991_14002 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13990_14001,G__13991_14002) : f.call(null,G__13990_14001,G__13991_14002));

var G__14003 = seq__13985;
var G__14004 = chunk__13986;
var G__14005 = count__13987;
var G__14006 = (i__13988 + (1));
seq__13985 = G__14003;
chunk__13986 = G__14004;
count__13987 = G__14005;
i__13988 = G__14006;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13985);
if(temp__4126__auto__){
var seq__13985__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13985__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__13985__$1);
var G__14007 = cljs.core.chunk_rest(seq__13985__$1);
var G__14008 = c__4528__auto__;
var G__14009 = cljs.core.count(c__4528__auto__);
var G__14010 = (0);
seq__13985 = G__14007;
chunk__13986 = G__14008;
count__13987 = G__14009;
i__13988 = G__14010;
continue;
} else {
var vec__13992 = cljs.core.first(seq__13985__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13992,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13992,(1),null);
var G__13993_14011 = v;
var G__13994_14012 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13993_14011,G__13994_14012) : f.call(null,G__13993_14011,G__13994_14012));

var G__14013 = cljs.core.next(seq__13985__$1);
var G__14014 = null;
var G__14015 = (0);
var G__14016 = (0);
seq__13985 = G__14013;
chunk__13986 = G__14014;
count__13987 = G__14015;
i__13988 = G__14016;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__13995 = init;
var G__13996 = null;
var G__13997 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13995,G__13996,G__13997) : f.call(null,G__13995,G__13996,G__13997));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__13998 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13998) : cljs.core.deref.call(null,G__13998));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj14000 = {};
return obj14000;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14017 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14018 = cljs.core.next(es);
ret = G__14017;
es = G__14018;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__14019 = null;
var G__14019__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14019__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14019 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14019__2.call(this,self__,k);
case 3:
return G__14019__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14019.cljs$core$IFn$_invoke$arity$2 = G__14019__2;
G__14019.cljs$core$IFn$_invoke$arity$3 = G__14019__3;
return G__14019;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args13982){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13982)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,(0)));
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__14020 = (i + (1));
var G__14021 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__14020;
out = G__14021;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__14022 = o;
if(G__14022){
var bit__4422__auto__ = (G__14022.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4422__auto__) || (G__14022.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__14022.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14022);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__14022);
}
})()){
return tcoll.assoc_BANG_((function (){var G__14023 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14023) : cljs.core.key.call(null,G__14023));
})(),(function (){var G__14024 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14024) : cljs.core.val.call(null,G__14024));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__14027 = cljs.core.next(es);
var G__14028 = tcoll__$1.assoc_BANG_((function (){var G__14025 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14025) : cljs.core.key.call(null,G__14025));
})(),(function (){var G__14026 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14026) : cljs.core.val.call(null,G__14026));
})());
es = G__14027;
tcoll__$1 = G__14028;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__14029 = ((ascending_QMARK_)?t.left:t.right);
var G__14030 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__14029;
stack__$1 = G__14030;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__14043 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14043) : cljs.core.deref.call(null,G__14043));
} else {
var init__$2 = (function (){var G__14044 = init__$1;
var G__14045 = node.key;
var G__14046 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14044,G__14045,G__14046) : f.call(null,G__14044,G__14045,G__14046));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__14047 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14047) : cljs.core.deref.call(null,G__14047));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__14048 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14048) : cljs.core.deref.call(null,G__14048));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__14050 = null;
var G__14050__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14050__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14050 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14050__2.call(this,self__,k);
case 3:
return G__14050__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14050.cljs$core$IFn$_invoke$arity$2 = G__14050__2;
G__14050.cljs$core$IFn$_invoke$arity$3 = G__14050__3;
return G__14050;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args14049){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14049)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__14052 = null;
var G__14052__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14052__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14052 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14052__2.call(this,self__,k);
case 3:
return G__14052__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14052.cljs$core$IFn$_invoke$arity$2 = G__14052__2;
G__14052.cljs$core$IFn$_invoke$arity$3 = G__14052__3;
return G__14052;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args14051){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14051)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__14065 = k;
var G__14066 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14065,G__14066) : comp.call(null,G__14065,G__14066));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__14085 = k;
var G__14086 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14085,G__14086) : comp.call(null,G__14085,G__14086));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__14097 = k;
var G__14098 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14097,G__14098) : comp.call(null,G__14097,G__14098));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14100 = cljs.core.seq(coll);
var chunk__14101 = null;
var count__14102 = (0);
var i__14103 = (0);
while(true){
if((i__14103 < count__14102)){
var vec__14104 = chunk__14101.cljs$core$IIndexed$_nth$arity$2(null,i__14103);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104,(1),null);
var G__14105_14117 = v;
var G__14106_14118 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14105_14117,G__14106_14118) : f.call(null,G__14105_14117,G__14106_14118));

var G__14119 = seq__14100;
var G__14120 = chunk__14101;
var G__14121 = count__14102;
var G__14122 = (i__14103 + (1));
seq__14100 = G__14119;
chunk__14101 = G__14120;
count__14102 = G__14121;
i__14103 = G__14122;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14100);
if(temp__4126__auto__){
var seq__14100__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14100__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__14100__$1);
var G__14123 = cljs.core.chunk_rest(seq__14100__$1);
var G__14124 = c__4528__auto__;
var G__14125 = cljs.core.count(c__4528__auto__);
var G__14126 = (0);
seq__14100 = G__14123;
chunk__14101 = G__14124;
count__14102 = G__14125;
i__14103 = G__14126;
continue;
} else {
var vec__14107 = cljs.core.first(seq__14100__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14107,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14107,(1),null);
var G__14108_14127 = v;
var G__14109_14128 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14108_14127,G__14109_14128) : f.call(null,G__14108_14127,G__14109_14128));

var G__14129 = cljs.core.next(seq__14100__$1);
var G__14130 = null;
var G__14131 = (0);
var G__14132 = (0);
seq__14100 = G__14129;
chunk__14101 = G__14130;
count__14102 = G__14131;
i__14103 = G__14132;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14110 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14110) : cljs.core.keys.call(null,G__14110));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__14111 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14111) : cljs.core.vals.call(null,G__14111));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14112 = k;
var G__14113 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14112,G__14113) : self__.comp.call(null,G__14112,G__14113));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__14133 = t.left;
t = G__14133;
continue;
} else {
var G__14134 = t.right;
t = G__14134;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__14135 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__14136 = cljs.core.next(es);
ret = G__14135;
es = G__14136;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__14137 = null;
var G__14137__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14137__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14137 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14137__2.call(this,self__,k);
case 3:
return G__14137__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14137.cljs$core$IFn$_invoke$arity$2 = G__14137__2;
G__14137.cljs$core$IFn$_invoke$arity$3 = G__14137__3;
return G__14137;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args14099){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14099)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__14114 = k;
var G__14115 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14114,G__14115) : self__.comp.call(null,G__14114,G__14115));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__14138 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14139 = t.left;
stack = G__14138;
t = G__14139;
continue;
} else {
var G__14140 = stack;
var G__14141 = t.right;
stack = G__14140;
t = G__14141;
continue;
}
} else {
if((c > (0))){
var G__14142 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__14143 = t.right;
stack = G__14142;
t = G__14143;
continue;
} else {
var G__14144 = stack;
var G__14145 = t.left;
stack = G__14144;
t = G__14145;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__14116 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14116) : cljs.core.key.call(null,G__14116));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,(0)));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__14146 = cljs.core.nnext(in$);
var G__14147 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14146;
out = G__14147;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14148__i = 0, G__14148__a = new Array(arguments.length -  0);
while (G__14148__i < G__14148__a.length) {G__14148__a[G__14148__i] = arguments[G__14148__i + 0]; ++G__14148__i;}
  keyvals = new cljs.core.IndexedSeq(G__14148__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__14149){
var keyvals = cljs.core.seq(arglist__14149);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14150__i = 0, G__14150__a = new Array(arguments.length -  0);
while (G__14150__i < G__14150__a.length) {G__14150__a[G__14150__i] = arguments[G__14150__i + 0]; ++G__14150__i;}
  keyvals = new cljs.core.IndexedSeq(G__14150__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__14151){
var keyvals = cljs.core.seq(arglist__14151);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj14155 = {};
return obj14155;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__14156 = cljs.core.nnext(kvs);
kvs = G__14156;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14157__i = 0, G__14157__a = new Array(arguments.length -  0);
while (G__14157__i < G__14157__a.length) {G__14157__a[G__14157__i] = arguments[G__14157__i + 0]; ++G__14157__i;}
  keyvals = new cljs.core.IndexedSeq(G__14157__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__14158){
var keyvals = cljs.core.seq(arglist__14158);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__14159 = cljs.core.nnext(in$);
var G__14160 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14159;
out = G__14160;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__14161__i = 0, G__14161__a = new Array(arguments.length -  0);
while (G__14161__i < G__14161__a.length) {G__14161__a[G__14161__i] = arguments[G__14161__i + 0]; ++G__14161__i;}
  keyvals = new cljs.core.IndexedSeq(G__14161__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__14162){
var keyvals = cljs.core.seq(arglist__14162);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__14163 = cljs.core.nnext(in$);
var G__14164 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__14163;
out = G__14164;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__14165__i = 0, G__14165__a = new Array(arguments.length -  1);
while (G__14165__i < G__14165__a.length) {G__14165__a[G__14165__i] = arguments[G__14165__i + 1]; ++G__14165__i;}
  keyvals = new cljs.core.IndexedSeq(G__14165__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__14166){
var comparator = cljs.core.first(arglist__14166);
var keyvals = cljs.core.rest(arglist__14166);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14167 = self__.mseq;
if(G__14167){
var bit__4422__auto__ = (G__14167.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4422__auto__) || (G__14167.cljs$core$INext$)){
return true;
} else {
if((!G__14167.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14167);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14167);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14168 = self__.mseq;
if(G__14168){
var bit__4422__auto__ = (G__14168.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4422__auto__) || (G__14168.cljs$core$INext$)){
return true;
} else {
if((!G__14168.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14168);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14168);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14169 = self__.mseq;
if(G__14169){
var bit__4422__auto__ = (G__14169.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4422__auto__) || (G__14169.cljs$core$INext$)){
return true;
} else {
if((!G__14169.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14169);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14169);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__14170 = self__.mseq;
if(G__14170){
var bit__4422__auto__ = (G__14170.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4422__auto__) || (G__14170.cljs$core$INext$)){
return true;
} else {
if((!G__14170.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14170);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__14170);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__14171_SHARP_,p2__14172_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3741__auto__ = p1__14171_SHARP_;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__14172_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__14173__i = 0, G__14173__a = new Array(arguments.length -  0);
while (G__14173__i < G__14173__a.length) {G__14173__a[G__14173__i] = arguments[G__14173__i + 0]; ++G__14173__i;}
  maps = new cljs.core.IndexedSeq(G__14173__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__14174){
var maps = cljs.core.seq(arglist__14174);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__14177 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__14178 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14177,G__14178) : f.call(null,G__14177,G__14178));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3741__auto__ = m1;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__14179__i = 0, G__14179__a = new Array(arguments.length -  1);
while (G__14179__i < G__14179__a.length) {G__14179__a[G__14179__i] = arguments[G__14179__i + 1]; ++G__14179__i;}
  maps = new cljs.core.IndexedSeq(G__14179__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__14180){
var f = cljs.core.first(arglist__14180);
var maps = cljs.core.rest(arglist__14180);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$14);
var G__14181 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$14))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__14182 = cljs.core.next(keys);
ret = G__14181;
keys = G__14182;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14185 = cljs.core.seq(coll);
var chunk__14186 = null;
var count__14187 = (0);
var i__14188 = (0);
while(true){
if((i__14188 < count__14187)){
var vec__14189 = chunk__14186.cljs$core$IIndexed$_nth$arity$2(null,i__14188);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14189,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14189,(1),null);
var G__14190_14195 = v;
var G__14191_14196 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14190_14195,G__14191_14196) : f.call(null,G__14190_14195,G__14191_14196));

var G__14197 = seq__14185;
var G__14198 = chunk__14186;
var G__14199 = count__14187;
var G__14200 = (i__14188 + (1));
seq__14185 = G__14197;
chunk__14186 = G__14198;
count__14187 = G__14199;
i__14188 = G__14200;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14185);
if(temp__4126__auto__){
var seq__14185__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14185__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__14185__$1);
var G__14201 = cljs.core.chunk_rest(seq__14185__$1);
var G__14202 = c__4528__auto__;
var G__14203 = cljs.core.count(c__4528__auto__);
var G__14204 = (0);
seq__14185 = G__14201;
chunk__14186 = G__14202;
count__14187 = G__14203;
i__14188 = G__14204;
continue;
} else {
var vec__14192 = cljs.core.first(seq__14185__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14192,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14192,(1),null);
var G__14193_14205 = v;
var G__14194_14206 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14193_14205,G__14194_14206) : f.call(null,G__14193_14205,G__14194_14206));

var G__14207 = cljs.core.next(seq__14185__$1);
var G__14208 = null;
var G__14209 = (0);
var G__14210 = (0);
seq__14185 = G__14207;
chunk__14186 = G__14208;
count__14187 = G__14209;
i__14188 = G__14210;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14183_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14183_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__14211 = null;
var G__14211__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14211__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14211 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14211__2.call(this,self__,k);
case 3:
return G__14211__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14211.cljs$core$IFn$_invoke$arity$2 = G__14211__2;
G__14211.cljs$core$IFn$_invoke$arity$3 = G__14211__3;
return G__14211;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args14184){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14184)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,(0)));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__14212 = (i + (1));
var G__14213 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__14212;
out = G__14213;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__14214 = (i + (1));
var G__14215 = cljs.core._conj_BANG_(out,(items[i]));
i = G__14214;
out = G__14215;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__14217 = null;
var G__14217__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__14217__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__14217 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14217__2.call(this,self__,k);
case 3:
return G__14217__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14217.cljs$core$IFn$_invoke$arity$2 = G__14217__2;
G__14217.cljs$core$IFn$_invoke$arity$3 = G__14217__3;
return G__14217;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args14216){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14216)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__14220 = cljs.core.seq(coll);
var chunk__14221 = null;
var count__14222 = (0);
var i__14223 = (0);
while(true){
if((i__14223 < count__14222)){
var vec__14224 = chunk__14221.cljs$core$IIndexed$_nth$arity$2(null,i__14223);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14224,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14224,(1),null);
var G__14225_14230 = v;
var G__14226_14231 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14225_14230,G__14226_14231) : f.call(null,G__14225_14230,G__14226_14231));

var G__14232 = seq__14220;
var G__14233 = chunk__14221;
var G__14234 = count__14222;
var G__14235 = (i__14223 + (1));
seq__14220 = G__14232;
chunk__14221 = G__14233;
count__14222 = G__14234;
i__14223 = G__14235;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14220);
if(temp__4126__auto__){
var seq__14220__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14220__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__14220__$1);
var G__14236 = cljs.core.chunk_rest(seq__14220__$1);
var G__14237 = c__4528__auto__;
var G__14238 = cljs.core.count(c__4528__auto__);
var G__14239 = (0);
seq__14220 = G__14236;
chunk__14221 = G__14237;
count__14222 = G__14238;
i__14223 = G__14239;
continue;
} else {
var vec__14227 = cljs.core.first(seq__14220__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14227,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14227,(1),null);
var G__14228_14240 = v;
var G__14229_14241 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14228_14240,G__14229_14241) : f.call(null,G__14228_14240,G__14229_14241));

var G__14242 = cljs.core.next(seq__14220__$1);
var G__14243 = null;
var G__14244 = (0);
var G__14245 = (0);
seq__14220 = G__14242;
chunk__14221 = G__14243;
count__14222 = G__14244;
i__14223 = G__14245;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__14218_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__14218_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__14246 = null;
var G__14246__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__14246__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__14246 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__14246__2.call(this,self__,k);
case 3:
return G__14246__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14246.cljs$core$IFn$_invoke$arity$2 = G__14246__2;
G__14246.cljs$core$IFn$_invoke$arity$3 = G__14246__3;
return G__14246;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args14219){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14219)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,(0)));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4622__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4622__auto__.length)){
var G__14247 = (i + (1));
var G__14248 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__14247;
res = G__14248;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__14249 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__14250 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__14249;
out = G__14250;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__14251__delegate = function (keys){
return cljs.core.set(keys);
};
var G__14251 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__14252__i = 0, G__14252__a = new Array(arguments.length -  0);
while (G__14252__i < G__14252__a.length) {G__14252__a[G__14252__i] = arguments[G__14252__i + 0]; ++G__14252__i;}
  keys = new cljs.core.IndexedSeq(G__14252__a,0);
} 
return G__14251__delegate.call(this,keys);};
G__14251.cljs$lang$maxFixedArity = 0;
G__14251.cljs$lang$applyTo = (function (arglist__14253){
var keys = cljs.core.seq(arglist__14253);
return G__14251__delegate(keys);
});
G__14251.cljs$core$IFn$_invoke$arity$variadic = G__14251__delegate;
return G__14251;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__14254 = null;
if (arguments.length > 0) {
var G__14255__i = 0, G__14255__a = new Array(arguments.length -  0);
while (G__14255__i < G__14255__a.length) {G__14255__a[G__14255__i] = arguments[G__14255__i + 0]; ++G__14255__i;}
G__14254 = new cljs.core.IndexedSeq(G__14255__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__14254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__14256__i = 0, G__14256__a = new Array(arguments.length -  0);
while (G__14256__i < G__14256__a.length) {G__14256__a[G__14256__i] = arguments[G__14256__i + 0]; ++G__14256__i;}
  keys = new cljs.core.IndexedSeq(G__14256__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__14257){
var keys = cljs.core.seq(arglist__14257);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__14258__i = 0, G__14258__a = new Array(arguments.length -  1);
while (G__14258__i < G__14258__a.length) {G__14258__a[G__14258__i] = arguments[G__14258__i + 1]; ++G__14258__i;}
  keys = new cljs.core.IndexedSeq(G__14258__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__14259){
var comparator = cljs.core.first(arglist__14259);
var keys = cljs.core.rest(arglist__14259);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__14260_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__14260_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__14260_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14261_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__14261_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__14261_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function distinct(coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__14272,seen__$1){
while(true){
var vec__14273 = p__14272;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14273,(0),null);
var xs__$1 = vec__14273;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__14274 = cljs.core.rest(s);
var G__14275 = seen__$1;
p__14272 = G__14274;
seen__$1 = G__14275;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__14276 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__14277 = cljs.core.next(s__$1);
ret = G__14276;
s__$1 = G__14277;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__14279 = x;
if(G__14279){
var bit__4415__auto__ = (G__14279.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4415__auto__) || (G__14279.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__14280 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__14281 = cljs.core.next(ks);
var G__14282 = cljs.core.next(vs);
map = G__14280;
ks = G__14281;
vs = G__14282;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__14293 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14293) : k.call(null,G__14293));
})() > (function (){var G__14294 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14294) : k.call(null,G__14294));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__14295__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14283_SHARP_,p2__14284_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__14283_SHARP_,p2__14284_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14295 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14296__i = 0, G__14296__a = new Array(arguments.length -  3);
while (G__14296__i < G__14296__a.length) {G__14296__a[G__14296__i] = arguments[G__14296__i + 3]; ++G__14296__i;}
  more = new cljs.core.IndexedSeq(G__14296__a,0);
} 
return G__14295__delegate.call(this,k,x,y,more);};
G__14295.cljs$lang$maxFixedArity = 3;
G__14295.cljs$lang$applyTo = (function (arglist__14297){
var k = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var x = cljs.core.first(arglist__14297);
arglist__14297 = cljs.core.next(arglist__14297);
var y = cljs.core.first(arglist__14297);
var more = cljs.core.rest(arglist__14297);
return G__14295__delegate(k,x,y,more);
});
G__14295.cljs$core$IFn$_invoke$arity$variadic = G__14295__delegate;
return G__14295;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__14298 = null;
if (arguments.length > 3) {
var G__14299__i = 0, G__14299__a = new Array(arguments.length -  3);
while (G__14299__i < G__14299__a.length) {G__14299__a[G__14299__i] = arguments[G__14299__i + 3]; ++G__14299__i;}
G__14298 = new cljs.core.IndexedSeq(G__14299__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14298);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__14310 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14310) : k.call(null,G__14310));
})() < (function (){var G__14311 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14311) : k.call(null,G__14311));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__14312__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14300_SHARP_,p2__14301_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__14300_SHARP_,p2__14301_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__14312 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__14313__i = 0, G__14313__a = new Array(arguments.length -  3);
while (G__14313__i < G__14313__a.length) {G__14313__a[G__14313__i] = arguments[G__14313__i + 3]; ++G__14313__i;}
  more = new cljs.core.IndexedSeq(G__14313__a,0);
} 
return G__14312__delegate.call(this,k,x,y,more);};
G__14312.cljs$lang$maxFixedArity = 3;
G__14312.cljs$lang$applyTo = (function (arglist__14314){
var k = cljs.core.first(arglist__14314);
arglist__14314 = cljs.core.next(arglist__14314);
var x = cljs.core.first(arglist__14314);
arglist__14314 = cljs.core.next(arglist__14314);
var y = cljs.core.first(arglist__14314);
var more = cljs.core.rest(arglist__14314);
return G__14312__delegate(k,x,y,more);
});
G__14312.cljs$core$IFn$_invoke$arity$variadic = G__14312__delegate;
return G__14312;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__14315 = null;
if (arguments.length > 3) {
var G__14316__i = 0, G__14316__a = new Array(arguments.length -  3);
while (G__14316__i < G__14316__a.length) {G__14316__a[G__14316__i] = arguments[G__14316__i + 3]; ++G__14316__i;}
G__14315 = new cljs.core.IndexedSeq(G__14316__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__14315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__14333 = null;
var G__14333__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14333__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14328 = result;
var G__14329 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14328,G__14329) : rf.call(null,G__14328,G__14329));
})());
})());
var G__14330 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14330) : rf.call(null,G__14330));
});
var G__14333__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__14331 = result;
var G__14332 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14331,G__14332) : rf.call(null,G__14331,G__14332));
} else {
return result;
}
});
G__14333 = function(result,input){
switch(arguments.length){
case 0:
return G__14333__0.call(this);
case 1:
return G__14333__1.call(this,result);
case 2:
return G__14333__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14333.cljs$core$IFn$_invoke$arity$0 = G__14333__0;
G__14333.cljs$core$IFn$_invoke$arity$1 = G__14333__1;
G__14333.cljs$core$IFn$_invoke$arity$2 = G__14333__2;
return G__14333;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__14346 = null;
var G__14346__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14346__1 = (function (result){
var G__14341 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14341) : rf.call(null,G__14341));
});
var G__14346__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__14342 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14342) : pred.call(null,G__14342));
})())){
var G__14343 = result;
var G__14344 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14343,G__14344) : rf.call(null,G__14343,G__14344));
} else {
return cljs.core.reduced(result);
}
});
G__14346 = function(result,input){
switch(arguments.length){
case 0:
return G__14346__0.call(this);
case 1:
return G__14346__1.call(this,result);
case 2:
return G__14346__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14346.cljs$core$IFn$_invoke$arity$0 = G__14346__0;
G__14346.cljs$core$IFn$_invoke$arity$1 = G__14346__1;
G__14346.cljs$core$IFn$_invoke$arity$2 = G__14346__2;
return G__14346;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__14345 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14345) : pred.call(null,G__14345));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__14351 = (function (){var G__14353 = cljs.core._entry_key(sc,e);
var G__14354 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14353,G__14354) : comp.call(null,G__14353,G__14354));
})();
var G__14352 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14351,G__14352) : test.call(null,G__14351,G__14352));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14358 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14358,(0),null);
var s = vec__14358;
if(cljs.core.truth_((function (){var G__14359 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14359) : include.call(null,G__14359));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14360 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14360,(0),null);
var s = vec__14360;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14364 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14364,(0),null);
var s = vec__14364;
if(cljs.core.truth_((function (){var G__14365 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14365) : include.call(null,G__14365));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__14366 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14366,(0),null);
var s = vec__14366;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__14367 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14367) : Math.ceil.call(null,G__14367));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4162__auto__ = self__.__hash;
if(!((h__4162__auto__ == null))){
return h__4162__auto__;
} else {
var h__4162__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4162__auto____$1;

return h__4162__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__14368 = ret;
var G__14369 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14368,G__14369) : f.call(null,G__14368,G__14369));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__14370 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14370) : cljs.core.deref.call(null,G__14370));
} else {
var G__14371 = (i + self__.step);
var G__14372 = ret__$1;
i = G__14371;
ret = G__14372;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14390 = null;
var G__14390__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14390__1 = (function (result){
var G__14387 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14387) : rf.call(null,G__14387));
});
var G__14390__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__14388 = result;
var G__14389 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14388,G__14389) : rf.call(null,G__14388,G__14389));
} else {
return result;
}
});
G__14390 = function(result,input){
switch(arguments.length){
case 0:
return G__14390__0.call(this);
case 1:
return G__14390__1.call(this,result);
case 2:
return G__14390__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14390.cljs$core$IFn$_invoke$arity$0 = G__14390__0;
G__14390.cljs$core$IFn$_invoke$arity$1 = G__14390__1;
G__14390.cljs$core$IFn$_invoke$arity$2 = G__14390__2;
return G__14390;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (a,pa){
return (function() {
var G__14412 = null;
var G__14412__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14412__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__14403 = result;
var G__14404 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14403,G__14404) : rf.call(null,G__14403,G__14404));
})());
})());
var G__14405 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14405) : rf.call(null,G__14405));
});
var G__14412__2 = (function (result,input){
var pval = (function (){var G__14406 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14406) : cljs.core.deref.call(null,G__14406));
})();
var val = (function (){var G__14407 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14407) : f.call(null,G__14407));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$15)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__14408 = result;
var G__14409 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14408,G__14409) : rf.call(null,G__14408,G__14409));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__14412 = function(result,input){
switch(arguments.length){
case 0:
return G__14412__0.call(this);
case 1:
return G__14412__1.call(this,result);
case 2:
return G__14412__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14412.cljs$core$IFn$_invoke$arity$0 = G__14412__0;
G__14412.cljs$core$IFn$_invoke$arity$1 = G__14412__1;
G__14412.cljs$core$IFn$_invoke$arity$2 = G__14412__2;
return G__14412;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__14410 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14410) : f.call(null,G__14410));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__14391_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__14411 = p1__14391_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14411) : f.call(null,G__14411));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__14421 = init;
var G__14422 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14421,G__14422) : f.call(null,G__14421,G__14422));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__14517 = null;
var G__14517__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__14517__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14475 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14475) : f.call(null,G__14475));
})()],null));
});
var G__14517__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14476 = x;
var G__14477 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14476,G__14477) : f.call(null,G__14476,G__14477));
})()],null));
});
var G__14517__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14478 = x;
var G__14479 = y;
var G__14480 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14478,G__14479,G__14480) : f.call(null,G__14478,G__14479,G__14480));
})()],null));
});
var G__14517__4 = (function() { 
var G__14518__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__14518 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14519__i = 0, G__14519__a = new Array(arguments.length -  3);
while (G__14519__i < G__14519__a.length) {G__14519__a[G__14519__i] = arguments[G__14519__i + 3]; ++G__14519__i;}
  args = new cljs.core.IndexedSeq(G__14519__a,0);
} 
return G__14518__delegate.call(this,x,y,z,args);};
G__14518.cljs$lang$maxFixedArity = 3;
G__14518.cljs$lang$applyTo = (function (arglist__14520){
var x = cljs.core.first(arglist__14520);
arglist__14520 = cljs.core.next(arglist__14520);
var y = cljs.core.first(arglist__14520);
arglist__14520 = cljs.core.next(arglist__14520);
var z = cljs.core.first(arglist__14520);
var args = cljs.core.rest(arglist__14520);
return G__14518__delegate(x,y,z,args);
});
G__14518.cljs$core$IFn$_invoke$arity$variadic = G__14518__delegate;
return G__14518;
})()
;
G__14517 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14517__0.call(this);
case 1:
return G__14517__1.call(this,x);
case 2:
return G__14517__2.call(this,x,y);
case 3:
return G__14517__3.call(this,x,y,z);
default:
var G__14521 = null;
if (arguments.length > 3) {
var G__14522__i = 0, G__14522__a = new Array(arguments.length -  3);
while (G__14522__i < G__14522__a.length) {G__14522__a[G__14522__i] = arguments[G__14522__i + 3]; ++G__14522__i;}
G__14521 = new cljs.core.IndexedSeq(G__14522__a,0);
}
return G__14517__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14521);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14517.cljs$lang$maxFixedArity = 3;
G__14517.cljs$lang$applyTo = G__14517__4.cljs$lang$applyTo;
G__14517.cljs$core$IFn$_invoke$arity$0 = G__14517__0;
G__14517.cljs$core$IFn$_invoke$arity$1 = G__14517__1;
G__14517.cljs$core$IFn$_invoke$arity$2 = G__14517__2;
G__14517.cljs$core$IFn$_invoke$arity$3 = G__14517__3;
G__14517.cljs$core$IFn$_invoke$arity$variadic = G__14517__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14517;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__14523 = null;
var G__14523__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__14523__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14481 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14481) : f.call(null,G__14481));
})(),(function (){var G__14482 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14482) : g.call(null,G__14482));
})()],null));
});
var G__14523__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14483 = x;
var G__14484 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14483,G__14484) : f.call(null,G__14483,G__14484));
})(),(function (){var G__14485 = x;
var G__14486 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14485,G__14486) : g.call(null,G__14485,G__14486));
})()],null));
});
var G__14523__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14487 = x;
var G__14488 = y;
var G__14489 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14487,G__14488,G__14489) : f.call(null,G__14487,G__14488,G__14489));
})(),(function (){var G__14490 = x;
var G__14491 = y;
var G__14492 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14490,G__14491,G__14492) : g.call(null,G__14490,G__14491,G__14492));
})()],null));
});
var G__14523__4 = (function() { 
var G__14524__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__14524 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14525__i = 0, G__14525__a = new Array(arguments.length -  3);
while (G__14525__i < G__14525__a.length) {G__14525__a[G__14525__i] = arguments[G__14525__i + 3]; ++G__14525__i;}
  args = new cljs.core.IndexedSeq(G__14525__a,0);
} 
return G__14524__delegate.call(this,x,y,z,args);};
G__14524.cljs$lang$maxFixedArity = 3;
G__14524.cljs$lang$applyTo = (function (arglist__14526){
var x = cljs.core.first(arglist__14526);
arglist__14526 = cljs.core.next(arglist__14526);
var y = cljs.core.first(arglist__14526);
arglist__14526 = cljs.core.next(arglist__14526);
var z = cljs.core.first(arglist__14526);
var args = cljs.core.rest(arglist__14526);
return G__14524__delegate(x,y,z,args);
});
G__14524.cljs$core$IFn$_invoke$arity$variadic = G__14524__delegate;
return G__14524;
})()
;
G__14523 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14523__0.call(this);
case 1:
return G__14523__1.call(this,x);
case 2:
return G__14523__2.call(this,x,y);
case 3:
return G__14523__3.call(this,x,y,z);
default:
var G__14527 = null;
if (arguments.length > 3) {
var G__14528__i = 0, G__14528__a = new Array(arguments.length -  3);
while (G__14528__i < G__14528__a.length) {G__14528__a[G__14528__i] = arguments[G__14528__i + 3]; ++G__14528__i;}
G__14527 = new cljs.core.IndexedSeq(G__14528__a,0);
}
return G__14523__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14527);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14523.cljs$lang$maxFixedArity = 3;
G__14523.cljs$lang$applyTo = G__14523__4.cljs$lang$applyTo;
G__14523.cljs$core$IFn$_invoke$arity$0 = G__14523__0;
G__14523.cljs$core$IFn$_invoke$arity$1 = G__14523__1;
G__14523.cljs$core$IFn$_invoke$arity$2 = G__14523__2;
G__14523.cljs$core$IFn$_invoke$arity$3 = G__14523__3;
G__14523.cljs$core$IFn$_invoke$arity$variadic = G__14523__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14523;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__14529 = null;
var G__14529__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__14529__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14493 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14493) : f.call(null,G__14493));
})(),(function (){var G__14494 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14494) : g.call(null,G__14494));
})(),(function (){var G__14495 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14495) : h.call(null,G__14495));
})()],null));
});
var G__14529__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14496 = x;
var G__14497 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14496,G__14497) : f.call(null,G__14496,G__14497));
})(),(function (){var G__14498 = x;
var G__14499 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14498,G__14499) : g.call(null,G__14498,G__14499));
})(),(function (){var G__14500 = x;
var G__14501 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14500,G__14501) : h.call(null,G__14500,G__14501));
})()],null));
});
var G__14529__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__14502 = x;
var G__14503 = y;
var G__14504 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14502,G__14503,G__14504) : f.call(null,G__14502,G__14503,G__14504));
})(),(function (){var G__14505 = x;
var G__14506 = y;
var G__14507 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14505,G__14506,G__14507) : g.call(null,G__14505,G__14506,G__14507));
})(),(function (){var G__14508 = x;
var G__14509 = y;
var G__14510 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14508,G__14509,G__14510) : h.call(null,G__14508,G__14509,G__14510));
})()],null));
});
var G__14529__4 = (function() { 
var G__14530__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__14530 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14531__i = 0, G__14531__a = new Array(arguments.length -  3);
while (G__14531__i < G__14531__a.length) {G__14531__a[G__14531__i] = arguments[G__14531__i + 3]; ++G__14531__i;}
  args = new cljs.core.IndexedSeq(G__14531__a,0);
} 
return G__14530__delegate.call(this,x,y,z,args);};
G__14530.cljs$lang$maxFixedArity = 3;
G__14530.cljs$lang$applyTo = (function (arglist__14532){
var x = cljs.core.first(arglist__14532);
arglist__14532 = cljs.core.next(arglist__14532);
var y = cljs.core.first(arglist__14532);
arglist__14532 = cljs.core.next(arglist__14532);
var z = cljs.core.first(arglist__14532);
var args = cljs.core.rest(arglist__14532);
return G__14530__delegate(x,y,z,args);
});
G__14530.cljs$core$IFn$_invoke$arity$variadic = G__14530__delegate;
return G__14530;
})()
;
G__14529 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14529__0.call(this);
case 1:
return G__14529__1.call(this,x);
case 2:
return G__14529__2.call(this,x,y);
case 3:
return G__14529__3.call(this,x,y,z);
default:
var G__14533 = null;
if (arguments.length > 3) {
var G__14534__i = 0, G__14534__a = new Array(arguments.length -  3);
while (G__14534__i < G__14534__a.length) {G__14534__a[G__14534__i] = arguments[G__14534__i + 3]; ++G__14534__i;}
G__14533 = new cljs.core.IndexedSeq(G__14534__a,0);
}
return G__14529__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14529.cljs$lang$maxFixedArity = 3;
G__14529.cljs$lang$applyTo = G__14529__4.cljs$lang$applyTo;
G__14529.cljs$core$IFn$_invoke$arity$0 = G__14529__0;
G__14529.cljs$core$IFn$_invoke$arity$1 = G__14529__1;
G__14529.cljs$core$IFn$_invoke$arity$2 = G__14529__2;
G__14529.cljs$core$IFn$_invoke$arity$3 = G__14529__3;
G__14529.cljs$core$IFn$_invoke$arity$variadic = G__14529__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14529;
})()
});
var juxt__4 = (function() { 
var G__14535__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__14536 = null;
var G__14536__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14423_SHARP_,p2__14424_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14423_SHARP_,(function (){return (p2__14424_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14424_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14424_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14536__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14425_SHARP_,p2__14426_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14425_SHARP_,(function (){var G__14511 = x;
return (p2__14426_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14426_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14511) : p2__14426_SHARP_.call(null,G__14511));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14536__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14427_SHARP_,p2__14428_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14427_SHARP_,(function (){var G__14512 = x;
var G__14513 = y;
return (p2__14428_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14428_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14512,G__14513) : p2__14428_SHARP_.call(null,G__14512,G__14513));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14536__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14429_SHARP_,p2__14430_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14429_SHARP_,(function (){var G__14514 = x;
var G__14515 = y;
var G__14516 = z;
return (p2__14430_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14430_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14514,G__14515,G__14516) : p2__14430_SHARP_.call(null,G__14514,G__14515,G__14516));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__14536__4 = (function() { 
var G__14537__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__14431_SHARP_,p2__14432_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14431_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14432_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__14537 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14538__i = 0, G__14538__a = new Array(arguments.length -  3);
while (G__14538__i < G__14538__a.length) {G__14538__a[G__14538__i] = arguments[G__14538__i + 3]; ++G__14538__i;}
  args = new cljs.core.IndexedSeq(G__14538__a,0);
} 
return G__14537__delegate.call(this,x,y,z,args);};
G__14537.cljs$lang$maxFixedArity = 3;
G__14537.cljs$lang$applyTo = (function (arglist__14539){
var x = cljs.core.first(arglist__14539);
arglist__14539 = cljs.core.next(arglist__14539);
var y = cljs.core.first(arglist__14539);
arglist__14539 = cljs.core.next(arglist__14539);
var z = cljs.core.first(arglist__14539);
var args = cljs.core.rest(arglist__14539);
return G__14537__delegate(x,y,z,args);
});
G__14537.cljs$core$IFn$_invoke$arity$variadic = G__14537__delegate;
return G__14537;
})()
;
G__14536 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14536__0.call(this);
case 1:
return G__14536__1.call(this,x);
case 2:
return G__14536__2.call(this,x,y);
case 3:
return G__14536__3.call(this,x,y,z);
default:
var G__14540 = null;
if (arguments.length > 3) {
var G__14541__i = 0, G__14541__a = new Array(arguments.length -  3);
while (G__14541__i < G__14541__a.length) {G__14541__a[G__14541__i] = arguments[G__14541__i + 3]; ++G__14541__i;}
G__14540 = new cljs.core.IndexedSeq(G__14541__a,0);
}
return G__14536__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14540);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14536.cljs$lang$maxFixedArity = 3;
G__14536.cljs$lang$applyTo = G__14536__4.cljs$lang$applyTo;
G__14536.cljs$core$IFn$_invoke$arity$0 = G__14536__0;
G__14536.cljs$core$IFn$_invoke$arity$1 = G__14536__1;
G__14536.cljs$core$IFn$_invoke$arity$2 = G__14536__2;
G__14536.cljs$core$IFn$_invoke$arity$3 = G__14536__3;
G__14536.cljs$core$IFn$_invoke$arity$variadic = G__14536__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14536;
})()
;})(fs__$1))
};
var G__14535 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14542__i = 0, G__14542__a = new Array(arguments.length -  3);
while (G__14542__i < G__14542__a.length) {G__14542__a[G__14542__i] = arguments[G__14542__i + 3]; ++G__14542__i;}
  fs = new cljs.core.IndexedSeq(G__14542__a,0);
} 
return G__14535__delegate.call(this,f,g,h,fs);};
G__14535.cljs$lang$maxFixedArity = 3;
G__14535.cljs$lang$applyTo = (function (arglist__14543){
var f = cljs.core.first(arglist__14543);
arglist__14543 = cljs.core.next(arglist__14543);
var g = cljs.core.first(arglist__14543);
arglist__14543 = cljs.core.next(arglist__14543);
var h = cljs.core.first(arglist__14543);
var fs = cljs.core.rest(arglist__14543);
return G__14535__delegate(f,g,h,fs);
});
G__14535.cljs$core$IFn$_invoke$arity$variadic = G__14535__delegate;
return G__14535;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__14544 = null;
if (arguments.length > 3) {
var G__14545__i = 0, G__14545__a = new Array(arguments.length -  3);
while (G__14545__i < G__14545__a.length) {G__14545__a[G__14545__i] = arguments[G__14545__i + 3]; ++G__14545__i;}
G__14544 = new cljs.core.IndexedSeq(G__14545__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__14544);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__14546 = cljs.core.next(coll);
coll = G__14546;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__14547 = (n - (1));
var G__14548 = cljs.core.next(coll);
n = G__14547;
coll = G__14548;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__14552 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14552,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14552,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14552,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_14560 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__14561_14567 = cljs.core.first(coll);
var G__14562_14568 = writer;
var G__14563_14569 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14561_14567,G__14562_14568,G__14563_14569) : print_one.call(null,G__14561_14567,G__14562_14568,G__14563_14569));
} else {
}

var coll_14570__$1 = cljs.core.next(coll);
var n_14571 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_14570__$1) && (((n_14571 == null)) || (!((n_14571 === (0)))))){
cljs.core._write(writer,sep);

var G__14564_14572 = cljs.core.first(coll_14570__$1);
var G__14565_14573 = writer;
var G__14566_14574 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14564_14572,G__14565_14573,G__14566_14574) : print_one.call(null,G__14564_14572,G__14565_14573,G__14566_14574));

var G__14575 = cljs.core.next(coll_14570__$1);
var G__14576 = (n_14571 - (1));
coll_14570__$1 = G__14575;
n_14571 = G__14576;
continue;
} else {
if((cljs.core.seq(coll_14570__$1)) && ((n_14571 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14560;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__14581 = cljs.core.seq(ss);
var chunk__14582 = null;
var count__14583 = (0);
var i__14584 = (0);
while(true){
if((i__14584 < count__14583)){
var s = chunk__14582.cljs$core$IIndexed$_nth$arity$2(null,i__14584);
cljs.core._write(writer,s);

var G__14585 = seq__14581;
var G__14586 = chunk__14582;
var G__14587 = count__14583;
var G__14588 = (i__14584 + (1));
seq__14581 = G__14585;
chunk__14582 = G__14586;
count__14583 = G__14587;
i__14584 = G__14588;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14581);
if(temp__4126__auto__){
var seq__14581__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14581__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__14581__$1);
var G__14589 = cljs.core.chunk_rest(seq__14581__$1);
var G__14590 = c__4528__auto__;
var G__14591 = cljs.core.count(c__4528__auto__);
var G__14592 = (0);
seq__14581 = G__14589;
chunk__14582 = G__14590;
count__14583 = G__14591;
i__14584 = G__14592;
continue;
} else {
var s = cljs.core.first(seq__14581__$1);
cljs.core._write(writer,s);

var G__14593 = cljs.core.next(seq__14581__$1);
var G__14594 = null;
var G__14595 = (0);
var G__14596 = (0);
seq__14581 = G__14593;
chunk__14582 = G__14594;
count__14583 = G__14595;
i__14584 = G__14596;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__14597__i = 0, G__14597__a = new Array(arguments.length -  1);
while (G__14597__i < G__14597__a.length) {G__14597__a[G__14597__i] = arguments[G__14597__i + 1]; ++G__14597__i;}
  ss = new cljs.core.IndexedSeq(G__14597__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__14598){
var writer = cljs.core.first(arglist__14598);
var ss = cljs.core.rest(arglist__14598);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj14600 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj14600;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__14603 = "[\\\\\"\b\f\n\r\t]";
var G__14604 = "g";
return RegExp(G__14603,G__14604);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3729__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__3729__auto__)){
var and__3729__auto____$1 = (function (){var G__14618 = obj;
if(G__14618){
var bit__4422__auto__ = (G__14618.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4422__auto__) || (G__14618.cljs$core$IMeta$)){
return true;
} else {
if((!G__14618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__14618);
}
})();
if(and__3729__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__14619 = obj;
if(G__14619){
var bit__4415__auto__ = (G__14619.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4415__auto__) || (G__14619.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__14620 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__14621 = pr_writer;
var G__14622 = writer;
var G__14623 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__14620,G__14621,G__14622,G__14623) : cljs.core.print_map.call(null,G__14620,G__14621,G__14622,G__14623));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__14624 = obj;
return goog.isString(G__14624);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__14626 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__14626;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__14625 = obj;
if(G__14625){
var bit__4422__auto__ = (G__14625.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4422__auto__) || (G__14625.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__14625.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14625);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__14625);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__14631 = cljs.core.seq(cljs.core.next(objs));
var chunk__14632 = null;
var count__14633 = (0);
var i__14634 = (0);
while(true){
if((i__14634 < count__14633)){
var obj = chunk__14632.cljs$core$IIndexed$_nth$arity$2(null,i__14634);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14635 = seq__14631;
var G__14636 = chunk__14632;
var G__14637 = count__14633;
var G__14638 = (i__14634 + (1));
seq__14631 = G__14635;
chunk__14632 = G__14636;
count__14633 = G__14637;
i__14634 = G__14638;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14631);
if(temp__4126__auto__){
var seq__14631__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14631__$1)){
var c__4528__auto__ = cljs.core.chunk_first(seq__14631__$1);
var G__14639 = cljs.core.chunk_rest(seq__14631__$1);
var G__14640 = c__4528__auto__;
var G__14641 = cljs.core.count(c__4528__auto__);
var G__14642 = (0);
seq__14631 = G__14639;
chunk__14632 = G__14640;
count__14633 = G__14641;
i__14634 = G__14642;
continue;
} else {
var obj = cljs.core.first(seq__14631__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__14643 = cljs.core.next(seq__14631__$1);
var G__14644 = null;
var G__14645 = (0);
var G__14646 = (0);
seq__14631 = G__14643;
chunk__14632 = G__14644;
count__14633 = G__14645;
i__14634 = G__14646;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14647__i = 0, G__14647__a = new Array(arguments.length -  0);
while (G__14647__i < G__14647__a.length) {G__14647__a[G__14647__i] = arguments[G__14647__i + 0]; ++G__14647__i;}
  objs = new cljs.core.IndexedSeq(G__14647__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__14648){
var objs = cljs.core.seq(arglist__14648);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14649__i = 0, G__14649__a = new Array(arguments.length -  0);
while (G__14649__i < G__14649__a.length) {G__14649__a[G__14649__i] = arguments[G__14649__i + 0]; ++G__14649__i;}
  objs = new cljs.core.IndexedSeq(G__14649__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__14650){
var objs = cljs.core.seq(arglist__14650);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14651__i = 0, G__14651__a = new Array(arguments.length -  0);
while (G__14651__i < G__14651__a.length) {G__14651__a[G__14651__i] = arguments[G__14651__i + 0]; ++G__14651__i;}
  objs = new cljs.core.IndexedSeq(G__14651__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__14652){
var objs = cljs.core.seq(arglist__14652);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14653__i = 0, G__14653__a = new Array(arguments.length -  0);
while (G__14653__i < G__14653__a.length) {G__14653__a[G__14653__i] = arguments[G__14653__i + 0]; ++G__14653__i;}
  objs = new cljs.core.IndexedSeq(G__14653__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__14654){
var objs = cljs.core.seq(arglist__14654);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14655__i = 0, G__14655__a = new Array(arguments.length -  0);
while (G__14655__i < G__14655__a.length) {G__14655__a[G__14655__i] = arguments[G__14655__i + 0]; ++G__14655__i;}
  objs = new cljs.core.IndexedSeq(G__14655__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__14656){
var objs = cljs.core.seq(arglist__14656);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14657__i = 0, G__14657__a = new Array(arguments.length -  0);
while (G__14657__i < G__14657__a.length) {G__14657__a[G__14657__i] = arguments[G__14657__i + 0]; ++G__14657__i;}
  objs = new cljs.core.IndexedSeq(G__14657__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__14658){
var objs = cljs.core.seq(arglist__14658);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14659__i = 0, G__14659__a = new Array(arguments.length -  0);
while (G__14659__i < G__14659__a.length) {G__14659__a[G__14659__i] = arguments[G__14659__i + 0]; ++G__14659__i;}
  objs = new cljs.core.IndexedSeq(G__14659__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__14660){
var objs = cljs.core.seq(arglist__14660);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__14661__i = 0, G__14661__a = new Array(arguments.length -  0);
while (G__14661__i < G__14661__a.length) {G__14661__a[G__14661__i] = arguments[G__14661__i + 0]; ++G__14661__i;}
  objs = new cljs.core.IndexedSeq(G__14661__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__14662){
var objs = cljs.core.seq(arglist__14662);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__14669_14675 = cljs.core.key(e);
var G__14670_14676 = w;
var G__14671_14677 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14669_14675,G__14670_14676,G__14671_14677) : print_one.call(null,G__14669_14675,G__14670_14676,G__14671_14677));

cljs.core._write(w," ");

var G__14672 = cljs.core.val(e);
var G__14673 = w;
var G__14674 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14672,G__14673,G__14674) : print_one.call(null,G__14672,G__14673,G__14674));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__14678__i = 0, G__14678__a = new Array(arguments.length -  2);
while (G__14678__i < G__14678__a.length) {G__14678__a[G__14678__i] = arguments[G__14678__i + 2]; ++G__14678__i;}
  args = new cljs.core.IndexedSeq(G__14678__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__14679){
var iref = cljs.core.first(arglist__14679);
arglist__14679 = cljs.core.next(arglist__14679);
var f = cljs.core.first(arglist__14679);
var args = cljs.core.rest(arglist__14679);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__14682 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14682) : cljs.core.atom.call(null,G__14682));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__14684 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14684) : cljs.core.deref.call(null,G__14684));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__14685_SHARP_,p2__14686_SHARP_){
var ret = (function (){var G__14689 = p1__14685_SHARP_;
var G__14690 = p2__14686_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14689,G__14690) : rf.call(null,G__14689,G__14690));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__14693 = null;
var G__14693__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14693__1 = (function (result){
var G__14692 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14692) : rf.call(null,G__14692));
});
var G__14693__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__14693 = function(result,input){
switch(arguments.length){
case 0:
return G__14693__0.call(this);
case 1:
return G__14693__1.call(this,result);
case 2:
return G__14693__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14693.cljs$core$IFn$_invoke$arity$0 = G__14693__0;
G__14693.cljs$core$IFn$_invoke$arity$1 = G__14693__1;
G__14693.cljs$core$IFn$_invoke$arity$2 = G__14693__2;
return G__14693;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$15);
return ((function (pa){
return (function() {
var G__14702 = null;
var G__14702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14702__1 = (function (result){
var G__14698 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14698) : rf.call(null,G__14698));
});
var G__14702__2 = (function (result,input){
var prior = (function (){var G__14699 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14699) : cljs.core.deref.call(null,G__14699));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__14700 = result;
var G__14701 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14700,G__14701) : rf.call(null,G__14700,G__14701));
}
});
G__14702 = function(result,input){
switch(arguments.length){
case 0:
return G__14702__0.call(this);
case 1:
return G__14702__1.call(this,result);
case 2:
return G__14702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14702.cljs$core$IFn$_invoke$arity$0 = G__14702__0;
G__14702.cljs$core$IFn$_invoke$arity$1 = G__14702__1;
G__14702.cljs$core$IFn$_invoke$arity$2 = G__14702__2;
return G__14702;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4719__auto__ = this;
return cljs.core.es6_iterator(this__4719__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__14704_SHARP_,p2__14703_SHARP_){
var G__14706 = p2__14703_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__14706) : proc.call(null,G__14706));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj14708 = {};
return obj14708;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3729__auto__ = x;
if(and__3729__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3729__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4385__auto__ = (((x == null))?null:x);
return (function (){var or__3741__auto__ = (cljs.core._clj__GT_js[(function (){var G__14712 = x__4385__auto__;
return goog.typeOf(G__14712);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3729__auto__ = x;
if(and__3729__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3729__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4385__auto__ = (((x == null))?null:x);
return (function (){var or__3741__auto__ = (cljs.core._key__GT_js[(function (){var G__14716 = x__4385__auto__;
return goog.typeOf(G__14716);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__14719 = k;
if(G__14719){
var bit__4422__auto__ = null;
if(cljs.core.truth_((function (){var or__3741__auto__ = bit__4422__auto__;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return G__14719.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14719.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14719);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14719);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__14720 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__14720) : cljs.core.clj__GT_js.call(null,G__14720));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__14736 = x;
if(G__14736){
var bit__4422__auto__ = null;
if(cljs.core.truth_((function (){var or__3741__auto__ = bit__4422__auto__;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return G__14736.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__14736.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__14736);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj14738 = {};
return obj14738;
})();
var seq__14739_14749 = cljs.core.seq(x);
var chunk__14740_14750 = null;
var count__14741_14751 = (0);
var i__14742_14752 = (0);
while(true){
if((i__14742_14752 < count__14741_14751)){
var vec__14743_14753 = chunk__14740_14750.cljs$core$IIndexed$_nth$arity$2(null,i__14742_14752);
var k_14754 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14743_14753,(0),null);
var v_14755 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14743_14753,(1),null);
(m[cljs.core.key__GT_js(k_14754)] = clj__GT_js(v_14755));

var G__14756 = seq__14739_14749;
var G__14757 = chunk__14740_14750;
var G__14758 = count__14741_14751;
var G__14759 = (i__14742_14752 + (1));
seq__14739_14749 = G__14756;
chunk__14740_14750 = G__14757;
count__14741_14751 = G__14758;
i__14742_14752 = G__14759;
continue;
} else {
var temp__4126__auto___14760 = cljs.core.seq(seq__14739_14749);
if(temp__4126__auto___14760){
var seq__14739_14761__$1 = temp__4126__auto___14760;
if(cljs.core.chunked_seq_QMARK_(seq__14739_14761__$1)){
var c__4528__auto___14762 = cljs.core.chunk_first(seq__14739_14761__$1);
var G__14763 = cljs.core.chunk_rest(seq__14739_14761__$1);
var G__14764 = c__4528__auto___14762;
var G__14765 = cljs.core.count(c__4528__auto___14762);
var G__14766 = (0);
seq__14739_14749 = G__14763;
chunk__14740_14750 = G__14764;
count__14741_14751 = G__14765;
i__14742_14752 = G__14766;
continue;
} else {
var vec__14744_14767 = cljs.core.first(seq__14739_14761__$1);
var k_14768 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14744_14767,(0),null);
var v_14769 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14744_14767,(1),null);
(m[cljs.core.key__GT_js(k_14768)] = clj__GT_js(v_14769));

var G__14770 = cljs.core.next(seq__14739_14761__$1);
var G__14771 = null;
var G__14772 = (0);
var G__14773 = (0);
seq__14739_14749 = G__14770;
chunk__14740_14750 = G__14771;
count__14741_14751 = G__14772;
i__14742_14752 = G__14773;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__14745_14774 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__14746_14775 = null;
var count__14747_14776 = (0);
var i__14748_14777 = (0);
while(true){
if((i__14748_14777 < count__14747_14776)){
var x_14778__$1 = chunk__14746_14775.cljs$core$IIndexed$_nth$arity$2(null,i__14748_14777);
arr.push(x_14778__$1);

var G__14779 = seq__14745_14774;
var G__14780 = chunk__14746_14775;
var G__14781 = count__14747_14776;
var G__14782 = (i__14748_14777 + (1));
seq__14745_14774 = G__14779;
chunk__14746_14775 = G__14780;
count__14747_14776 = G__14781;
i__14748_14777 = G__14782;
continue;
} else {
var temp__4126__auto___14783 = cljs.core.seq(seq__14745_14774);
if(temp__4126__auto___14783){
var seq__14745_14784__$1 = temp__4126__auto___14783;
if(cljs.core.chunked_seq_QMARK_(seq__14745_14784__$1)){
var c__4528__auto___14785 = cljs.core.chunk_first(seq__14745_14784__$1);
var G__14786 = cljs.core.chunk_rest(seq__14745_14784__$1);
var G__14787 = c__4528__auto___14785;
var G__14788 = cljs.core.count(c__4528__auto___14785);
var G__14789 = (0);
seq__14745_14774 = G__14786;
chunk__14746_14775 = G__14787;
count__14747_14776 = G__14788;
i__14748_14777 = G__14789;
continue;
} else {
var x_14790__$1 = cljs.core.first(seq__14745_14784__$1);
arr.push(x_14790__$1);

var G__14791 = cljs.core.next(seq__14745_14784__$1);
var G__14792 = null;
var G__14793 = (0);
var G__14794 = (0);
seq__14745_14774 = G__14791;
chunk__14746_14775 = G__14792;
count__14747_14776 = G__14793;
i__14748_14777 = G__14794;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj14796 = {};
return obj14796;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3729__auto__ = x;
if(and__3729__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3729__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4385__auto__ = (((x == null))?null:x);
return (function (){var or__3741__auto__ = (cljs.core._js__GT_clj[(function (){var G__14800 = x__4385__auto__;
return goog.typeOf(G__14800);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$16,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__14857__delegate = function (x,opts){
var map__14830 = opts;
var map__14830__$1 = ((cljs.core.seq_QMARK_(map__14830))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__14830):map__14830);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14830__$1,cljs.core.constant$keyword$16);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__14830,map__14830__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__14846 = x__$1;
if(G__14846){
var bit__4422__auto__ = null;
if(cljs.core.truth_((function (){var or__3741__auto__ = bit__4422__auto__;
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return G__14846.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__14846.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14846);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__14846);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4497__auto__ = ((function (map__14830,map__14830__$1,keywordize_keys,keyfn){
return (function iter__14847(s__14848){
return (new cljs.core.LazySeq(null,((function (map__14830,map__14830__$1,keywordize_keys,keyfn){
return (function (){
var s__14848__$1 = s__14848;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__14848__$1);
if(temp__4126__auto__){
var s__14848__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__14848__$2)){
var c__4495__auto__ = cljs.core.chunk_first(s__14848__$2);
var size__4496__auto__ = cljs.core.count(c__4495__auto__);
var b__14850 = cljs.core.chunk_buffer(size__4496__auto__);
if((function (){var i__14849 = (0);
while(true){
if((i__14849 < size__4496__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4495__auto__,i__14849);
cljs.core.chunk_append(b__14850,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14855 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14855) : keyfn.call(null,G__14855));
})(),thisfn((x__$1[k]))], null));

var G__14858 = (i__14849 + (1));
i__14849 = G__14858;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__14850),iter__14847(cljs.core.chunk_rest(s__14848__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__14850),null);
}
} else {
var k = cljs.core.first(s__14848__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14856 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14856) : keyfn.call(null,G__14856));
})(),thisfn((x__$1[k]))], null),iter__14847(cljs.core.rest(s__14848__$2)));
}
} else {
return null;
}
break;
}
});})(map__14830,map__14830__$1,keywordize_keys,keyfn))
,null,null));
});})(map__14830,map__14830__$1,keywordize_keys,keyfn))
;
return iter__4497__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__14830,map__14830__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__14857 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__14859__i = 0, G__14859__a = new Array(arguments.length -  1);
while (G__14859__i < G__14859__a.length) {G__14859__a[G__14859__i] = arguments[G__14859__i + 1]; ++G__14859__i;}
  opts = new cljs.core.IndexedSeq(G__14859__a,0);
} 
return G__14857__delegate.call(this,x,opts);};
G__14857.cljs$lang$maxFixedArity = 1;
G__14857.cljs$lang$applyTo = (function (arglist__14860){
var x = cljs.core.first(arglist__14860);
var opts = cljs.core.rest(arglist__14860);
return G__14857__delegate(x,opts);
});
G__14857.cljs$core$IFn$_invoke$arity$variadic = G__14857__delegate;
return G__14857;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__14861 = null;
if (arguments.length > 1) {
var G__14862__i = 0, G__14862__a = new Array(arguments.length -  1);
while (G__14862__i < G__14862__a.length) {G__14862__a[G__14862__i] = arguments[G__14862__i + 1]; ++G__14862__i;}
G__14861 = new cljs.core.IndexedSeq(G__14862__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__14865 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14865) : cljs.core.atom.call(null,G__14865));
})();
return ((function (mem){
return (function() { 
var G__14867__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__14866 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14866) : cljs.core.deref.call(null,G__14866));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__14867 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14868__i = 0, G__14868__a = new Array(arguments.length -  0);
while (G__14868__i < G__14868__a.length) {G__14868__a[G__14868__i] = arguments[G__14868__i + 0]; ++G__14868__i;}
  args = new cljs.core.IndexedSeq(G__14868__a,0);
} 
return G__14867__delegate.call(this,args);};
G__14867.cljs$lang$maxFixedArity = 0;
G__14867.cljs$lang$applyTo = (function (arglist__14869){
var args = cljs.core.seq(arglist__14869);
return G__14867__delegate(args);
});
G__14867.cljs$core$IFn$_invoke$arity$variadic = G__14867__delegate;
return G__14867;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__14871 = ret;
f = G__14871;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__14872__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__14872 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14873__i = 0, G__14873__a = new Array(arguments.length -  1);
while (G__14873__i < G__14873__a.length) {G__14873__a[G__14873__i] = arguments[G__14873__i + 1]; ++G__14873__i;}
  args = new cljs.core.IndexedSeq(G__14873__a,0);
} 
return G__14872__delegate.call(this,f,args);};
G__14872.cljs$lang$maxFixedArity = 1;
G__14872.cljs$lang$applyTo = (function (arglist__14874){
var f = cljs.core.first(arglist__14874);
var args = cljs.core.rest(arglist__14874);
return G__14872__delegate(f,args);
});
G__14872.cljs$core$IFn$_invoke$arity$variadic = G__14872__delegate;
return G__14872;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__14875 = null;
if (arguments.length > 1) {
var G__14876__i = 0, G__14876__a = new Array(arguments.length -  1);
while (G__14876__i < G__14876__a.length) {G__14876__a[G__14876__i] = arguments[G__14876__i + 1]; ++G__14876__i;}
G__14875 = new cljs.core.IndexedSeq(G__14876__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__14879 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14879) : Math.floor.call(null,G__14879));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__14881 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14881) : f.call(null,G__14881));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$18,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$19,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__14883 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14883) : cljs.core.atom.call(null,G__14883));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__14884__i = 0, G__14884__a = new Array(arguments.length -  1);
while (G__14884__i < G__14884__a.length) {G__14884__a[G__14884__i] = arguments[G__14884__i + 1]; ++G__14884__i;}
  args = new cljs.core.IndexedSeq(G__14884__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__14885){
var f = cljs.core.first(arglist__14885);
var args = cljs.core.rest(arglist__14885);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__14950 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14950) : cljs.core.deref.call(null,G__14950));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3741__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
var and__3729__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3729__auto__){
var and__3729__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3729__auto____$1){
var and__3729__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3729__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__14975 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__14973 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__14973) : child.call(null,G__14973));
})(),(function (){var G__14974 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__14974) : parent.call(null,G__14974));
})());
var G__14976 = (i + (1));
ret = G__14975;
i = G__14976;
continue;
}
break;
}
} else {
return and__3729__auto____$2;
}
} else {
return and__3729__auto____$1;
}
} else {
return and__3729__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__14980 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14980) : cljs.core.deref.call(null,G__14980));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__14984 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14984) : cljs.core.deref.call(null,G__14984));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__14988 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14988) : cljs.core.deref.call(null,G__14988));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__14997 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__14997) : targets.call(null,G__14997));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__14998 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__14998) : sources.call(null,G__14998));
})()));
});})(tp,td,ta))
;
var or__3741__auto__ = ((cljs.core.contains_QMARK_((function (){var G__15002 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__15002) : tp.call(null,G__15002));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__15003 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15003) : ta.call(null,G__15003));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__15004 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15004) : ta.call(null,G__15004));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$17,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$19,tf(cljs.core.constant$keyword$19.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$18,tf(cljs.core.constant$keyword$18.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__15011 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15011) : parentMap.call(null,G__15011));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__15012 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15012) : parentMap.call(null,G__15012));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__15005_SHARP_){
return cljs.core.cons(cljs.core.first(p1__15005_SHARP_),cljs.core.interpose(cljs.core.first(p1__15005_SHARP_),cljs.core.second(p1__15005_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__15013 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15013) : parentMap.call(null,G__15013));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__15006_SHARP_,p2__15007_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__15006_SHARP_,p2__15007_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__15016 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15016) : cljs.core.deref.call(null,G__15016));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__15017 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15017) : cljs.core.deref.call(null,G__15017));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__15033 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15033) : cljs.core.deref.call(null,G__15033));
})().call(null,x);
var or__3741__auto__ = (cljs.core.truth_((function (){var and__3729__auto__ = xprefs;
if(cljs.core.truth_(and__3729__auto__)){
var G__15035 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__15035) : xprefs.call(null,G__15035));
} else {
return and__3729__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__15036 = cljs.core.rest(ps);
ps = G__15036;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3741__auto____$1)){
return or__3741__auto____$1;
} else {
var or__3741__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__15037 = cljs.core.rest(ps);
ps = G__15037;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3741__auto____$2)){
return or__3741__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3741__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3741__auto__)){
return or__3741__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__15051){
var vec__15052 = p__15051;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15052,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15052,(1),null);
var e = vec__15052;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__15053 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15053) : cljs.core.deref.call(null,G__15053));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3741__auto__ = (be == null);
if(or__3741__auto__){
return or__3741__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__15054 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15054) : cljs.core.deref.call(null,G__15054));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15055 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15055) : cljs.core.deref.call(null,G__15055));
})(),(function (){var G__15056 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15056) : cljs.core.deref.call(null,G__15056));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj15058 = {};
return obj15058;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._reset[(function (){var G__15062 = x__4385__auto__;
return goog.typeOf(G__15062);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._reset["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._add_method[(function (){var G__15066 = x__4385__auto__;
return goog.typeOf(G__15066);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._add_method["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._remove_method[(function (){var G__15070 = x__4385__auto__;
return goog.typeOf(G__15070);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._prefer_method[(function (){var G__15074 = x__4385__auto__;
return goog.typeOf(G__15074);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._get_method[(function (){var G__15078 = x__4385__auto__;
return goog.typeOf(G__15078);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._get_method["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._methods[(function (){var G__15082 = x__4385__auto__;
return goog.typeOf(G__15082);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._methods["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3729__auto__ = mf;
if(and__3729__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3729__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4385__auto__ = (((mf == null))?null:mf);
return (function (){var or__3741__auto__ = (cljs.core._prefers[(function (){var G__15086 = x__4385__auto__;
return goog.typeOf(G__15086);
})()]);
if(or__3741__auto__){
return or__3741__auto__;
} else {
var or__3741__auto____$1 = (cljs.core._prefers["_"]);
if(or__3741__auto____$1){
return or__3741__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15088 = this$__$1;
return goog.getUid(G__15088);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__15089 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15089) : cljs.core.deref.call(null,G__15089));
})(),(function (){var G__15090 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15090) : cljs.core.deref.call(null,G__15090));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__15091 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15091) : cljs.core.deref.call(null,G__15091));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__15092 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15092) : cljs.core.deref.call(null,G__15092));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__15093 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15093) : cljs.core.deref.call(null,G__15093));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__15094 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15094) : cljs.core.deref.call(null,G__15094));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__15935 = null;
var G__15935__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__15935__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15095 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15095) : self__.dispatch_fn.call(null,G__15095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15096 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15096) : target_fn.call(null,G__15096));
});
var G__15935__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15097 = a;
var G__15098 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15097,G__15098) : self__.dispatch_fn.call(null,G__15097,G__15098));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15099 = a;
var G__15100 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15099,G__15100) : target_fn.call(null,G__15099,G__15100));
});
var G__15935__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15101 = a;
var G__15102 = b;
var G__15103 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15101,G__15102,G__15103) : self__.dispatch_fn.call(null,G__15101,G__15102,G__15103));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15104 = a;
var G__15105 = b;
var G__15106 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15104,G__15105,G__15106) : target_fn.call(null,G__15104,G__15105,G__15106));
});
var G__15935__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15107 = a;
var G__15108 = b;
var G__15109 = c;
var G__15110 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15107,G__15108,G__15109,G__15110) : self__.dispatch_fn.call(null,G__15107,G__15108,G__15109,G__15110));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15111 = a;
var G__15112 = b;
var G__15113 = c;
var G__15114 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15111,G__15112,G__15113,G__15114) : target_fn.call(null,G__15111,G__15112,G__15113,G__15114));
});
var G__15935__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15115 = a;
var G__15116 = b;
var G__15117 = c;
var G__15118 = d;
var G__15119 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15115,G__15116,G__15117,G__15118,G__15119) : self__.dispatch_fn.call(null,G__15115,G__15116,G__15117,G__15118,G__15119));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15120 = a;
var G__15121 = b;
var G__15122 = c;
var G__15123 = d;
var G__15124 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15120,G__15121,G__15122,G__15123,G__15124) : target_fn.call(null,G__15120,G__15121,G__15122,G__15123,G__15124));
});
var G__15935__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15125 = a;
var G__15126 = b;
var G__15127 = c;
var G__15128 = d;
var G__15129 = e;
var G__15130 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15125,G__15126,G__15127,G__15128,G__15129,G__15130) : self__.dispatch_fn.call(null,G__15125,G__15126,G__15127,G__15128,G__15129,G__15130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15131 = a;
var G__15132 = b;
var G__15133 = c;
var G__15134 = d;
var G__15135 = e;
var G__15136 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15131,G__15132,G__15133,G__15134,G__15135,G__15136) : target_fn.call(null,G__15131,G__15132,G__15133,G__15134,G__15135,G__15136));
});
var G__15935__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15137 = a;
var G__15138 = b;
var G__15139 = c;
var G__15140 = d;
var G__15141 = e;
var G__15142 = f;
var G__15143 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15137,G__15138,G__15139,G__15140,G__15141,G__15142,G__15143) : self__.dispatch_fn.call(null,G__15137,G__15138,G__15139,G__15140,G__15141,G__15142,G__15143));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15144 = a;
var G__15145 = b;
var G__15146 = c;
var G__15147 = d;
var G__15148 = e;
var G__15149 = f;
var G__15150 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15144,G__15145,G__15146,G__15147,G__15148,G__15149,G__15150) : target_fn.call(null,G__15144,G__15145,G__15146,G__15147,G__15148,G__15149,G__15150));
});
var G__15935__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15151 = a;
var G__15152 = b;
var G__15153 = c;
var G__15154 = d;
var G__15155 = e;
var G__15156 = f;
var G__15157 = g;
var G__15158 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158) : self__.dispatch_fn.call(null,G__15151,G__15152,G__15153,G__15154,G__15155,G__15156,G__15157,G__15158));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15159 = a;
var G__15160 = b;
var G__15161 = c;
var G__15162 = d;
var G__15163 = e;
var G__15164 = f;
var G__15165 = g;
var G__15166 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15159,G__15160,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166) : target_fn.call(null,G__15159,G__15160,G__15161,G__15162,G__15163,G__15164,G__15165,G__15166));
});
var G__15935__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15167 = a;
var G__15168 = b;
var G__15169 = c;
var G__15170 = d;
var G__15171 = e;
var G__15172 = f;
var G__15173 = g;
var G__15174 = h;
var G__15175 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175) : self__.dispatch_fn.call(null,G__15167,G__15168,G__15169,G__15170,G__15171,G__15172,G__15173,G__15174,G__15175));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15176 = a;
var G__15177 = b;
var G__15178 = c;
var G__15179 = d;
var G__15180 = e;
var G__15181 = f;
var G__15182 = g;
var G__15183 = h;
var G__15184 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15176,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183,G__15184) : target_fn.call(null,G__15176,G__15177,G__15178,G__15179,G__15180,G__15181,G__15182,G__15183,G__15184));
});
var G__15935__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15185 = a;
var G__15186 = b;
var G__15187 = c;
var G__15188 = d;
var G__15189 = e;
var G__15190 = f;
var G__15191 = g;
var G__15192 = h;
var G__15193 = i;
var G__15194 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194) : self__.dispatch_fn.call(null,G__15185,G__15186,G__15187,G__15188,G__15189,G__15190,G__15191,G__15192,G__15193,G__15194));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15195 = a;
var G__15196 = b;
var G__15197 = c;
var G__15198 = d;
var G__15199 = e;
var G__15200 = f;
var G__15201 = g;
var G__15202 = h;
var G__15203 = i;
var G__15204 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15195,G__15196,G__15197,G__15198,G__15199,G__15200,G__15201,G__15202,G__15203,G__15204) : target_fn.call(null,G__15195,G__15196,G__15197,G__15198,G__15199,G__15200,G__15201,G__15202,G__15203,G__15204));
});
var G__15935__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15205 = a;
var G__15206 = b;
var G__15207 = c;
var G__15208 = d;
var G__15209 = e;
var G__15210 = f;
var G__15211 = g;
var G__15212 = h;
var G__15213 = i;
var G__15214 = j;
var G__15215 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15205,G__15206,G__15207,G__15208,G__15209,G__15210,G__15211,G__15212,G__15213,G__15214,G__15215) : self__.dispatch_fn.call(null,G__15205,G__15206,G__15207,G__15208,G__15209,G__15210,G__15211,G__15212,G__15213,G__15214,G__15215));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15216 = a;
var G__15217 = b;
var G__15218 = c;
var G__15219 = d;
var G__15220 = e;
var G__15221 = f;
var G__15222 = g;
var G__15223 = h;
var G__15224 = i;
var G__15225 = j;
var G__15226 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15216,G__15217,G__15218,G__15219,G__15220,G__15221,G__15222,G__15223,G__15224,G__15225,G__15226) : target_fn.call(null,G__15216,G__15217,G__15218,G__15219,G__15220,G__15221,G__15222,G__15223,G__15224,G__15225,G__15226));
});
var G__15935__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15227 = a;
var G__15228 = b;
var G__15229 = c;
var G__15230 = d;
var G__15231 = e;
var G__15232 = f;
var G__15233 = g;
var G__15234 = h;
var G__15235 = i;
var G__15236 = j;
var G__15237 = k;
var G__15238 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15227,G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234,G__15235,G__15236,G__15237,G__15238) : self__.dispatch_fn.call(null,G__15227,G__15228,G__15229,G__15230,G__15231,G__15232,G__15233,G__15234,G__15235,G__15236,G__15237,G__15238));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15239 = a;
var G__15240 = b;
var G__15241 = c;
var G__15242 = d;
var G__15243 = e;
var G__15244 = f;
var G__15245 = g;
var G__15246 = h;
var G__15247 = i;
var G__15248 = j;
var G__15249 = k;
var G__15250 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15239,G__15240,G__15241,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248,G__15249,G__15250) : target_fn.call(null,G__15239,G__15240,G__15241,G__15242,G__15243,G__15244,G__15245,G__15246,G__15247,G__15248,G__15249,G__15250));
});
var G__15935__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15251 = a;
var G__15252 = b;
var G__15253 = c;
var G__15254 = d;
var G__15255 = e;
var G__15256 = f;
var G__15257 = g;
var G__15258 = h;
var G__15259 = i;
var G__15260 = j;
var G__15261 = k;
var G__15262 = l;
var G__15263 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15251,G__15252,G__15253,G__15254,G__15255,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261,G__15262,G__15263) : self__.dispatch_fn.call(null,G__15251,G__15252,G__15253,G__15254,G__15255,G__15256,G__15257,G__15258,G__15259,G__15260,G__15261,G__15262,G__15263));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15264 = a;
var G__15265 = b;
var G__15266 = c;
var G__15267 = d;
var G__15268 = e;
var G__15269 = f;
var G__15270 = g;
var G__15271 = h;
var G__15272 = i;
var G__15273 = j;
var G__15274 = k;
var G__15275 = l;
var G__15276 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15264,G__15265,G__15266,G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275,G__15276) : target_fn.call(null,G__15264,G__15265,G__15266,G__15267,G__15268,G__15269,G__15270,G__15271,G__15272,G__15273,G__15274,G__15275,G__15276));
});
var G__15935__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15277 = a;
var G__15278 = b;
var G__15279 = c;
var G__15280 = d;
var G__15281 = e;
var G__15282 = f;
var G__15283 = g;
var G__15284 = h;
var G__15285 = i;
var G__15286 = j;
var G__15287 = k;
var G__15288 = l;
var G__15289 = m;
var G__15290 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290) : self__.dispatch_fn.call(null,G__15277,G__15278,G__15279,G__15280,G__15281,G__15282,G__15283,G__15284,G__15285,G__15286,G__15287,G__15288,G__15289,G__15290));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15291 = a;
var G__15292 = b;
var G__15293 = c;
var G__15294 = d;
var G__15295 = e;
var G__15296 = f;
var G__15297 = g;
var G__15298 = h;
var G__15299 = i;
var G__15300 = j;
var G__15301 = k;
var G__15302 = l;
var G__15303 = m;
var G__15304 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15291,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304) : target_fn.call(null,G__15291,G__15292,G__15293,G__15294,G__15295,G__15296,G__15297,G__15298,G__15299,G__15300,G__15301,G__15302,G__15303,G__15304));
});
var G__15935__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15305 = a;
var G__15306 = b;
var G__15307 = c;
var G__15308 = d;
var G__15309 = e;
var G__15310 = f;
var G__15311 = g;
var G__15312 = h;
var G__15313 = i;
var G__15314 = j;
var G__15315 = k;
var G__15316 = l;
var G__15317 = m;
var G__15318 = n;
var G__15319 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15305,G__15306,G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317,G__15318,G__15319) : self__.dispatch_fn.call(null,G__15305,G__15306,G__15307,G__15308,G__15309,G__15310,G__15311,G__15312,G__15313,G__15314,G__15315,G__15316,G__15317,G__15318,G__15319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15320 = a;
var G__15321 = b;
var G__15322 = c;
var G__15323 = d;
var G__15324 = e;
var G__15325 = f;
var G__15326 = g;
var G__15327 = h;
var G__15328 = i;
var G__15329 = j;
var G__15330 = k;
var G__15331 = l;
var G__15332 = m;
var G__15333 = n;
var G__15334 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329,G__15330,G__15331,G__15332,G__15333,G__15334) : target_fn.call(null,G__15320,G__15321,G__15322,G__15323,G__15324,G__15325,G__15326,G__15327,G__15328,G__15329,G__15330,G__15331,G__15332,G__15333,G__15334));
});
var G__15935__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15335 = a;
var G__15336 = b;
var G__15337 = c;
var G__15338 = d;
var G__15339 = e;
var G__15340 = f;
var G__15341 = g;
var G__15342 = h;
var G__15343 = i;
var G__15344 = j;
var G__15345 = k;
var G__15346 = l;
var G__15347 = m;
var G__15348 = n;
var G__15349 = o;
var G__15350 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15335,G__15336,G__15337,G__15338,G__15339,G__15340,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350) : self__.dispatch_fn.call(null,G__15335,G__15336,G__15337,G__15338,G__15339,G__15340,G__15341,G__15342,G__15343,G__15344,G__15345,G__15346,G__15347,G__15348,G__15349,G__15350));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15351 = a;
var G__15352 = b;
var G__15353 = c;
var G__15354 = d;
var G__15355 = e;
var G__15356 = f;
var G__15357 = g;
var G__15358 = h;
var G__15359 = i;
var G__15360 = j;
var G__15361 = k;
var G__15362 = l;
var G__15363 = m;
var G__15364 = n;
var G__15365 = o;
var G__15366 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15351,G__15352,G__15353,G__15354,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366) : target_fn.call(null,G__15351,G__15352,G__15353,G__15354,G__15355,G__15356,G__15357,G__15358,G__15359,G__15360,G__15361,G__15362,G__15363,G__15364,G__15365,G__15366));
});
var G__15935__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15367 = a;
var G__15368 = b;
var G__15369 = c;
var G__15370 = d;
var G__15371 = e;
var G__15372 = f;
var G__15373 = g;
var G__15374 = h;
var G__15375 = i;
var G__15376 = j;
var G__15377 = k;
var G__15378 = l;
var G__15379 = m;
var G__15380 = n;
var G__15381 = o;
var G__15382 = p;
var G__15383 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15367,G__15368,G__15369,G__15370,G__15371,G__15372,G__15373,G__15374,G__15375,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383) : self__.dispatch_fn.call(null,G__15367,G__15368,G__15369,G__15370,G__15371,G__15372,G__15373,G__15374,G__15375,G__15376,G__15377,G__15378,G__15379,G__15380,G__15381,G__15382,G__15383));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15384 = a;
var G__15385 = b;
var G__15386 = c;
var G__15387 = d;
var G__15388 = e;
var G__15389 = f;
var G__15390 = g;
var G__15391 = h;
var G__15392 = i;
var G__15393 = j;
var G__15394 = k;
var G__15395 = l;
var G__15396 = m;
var G__15397 = n;
var G__15398 = o;
var G__15399 = p;
var G__15400 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15384,G__15385,G__15386,G__15387,G__15388,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400) : target_fn.call(null,G__15384,G__15385,G__15386,G__15387,G__15388,G__15389,G__15390,G__15391,G__15392,G__15393,G__15394,G__15395,G__15396,G__15397,G__15398,G__15399,G__15400));
});
var G__15935__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15401 = a;
var G__15402 = b;
var G__15403 = c;
var G__15404 = d;
var G__15405 = e;
var G__15406 = f;
var G__15407 = g;
var G__15408 = h;
var G__15409 = i;
var G__15410 = j;
var G__15411 = k;
var G__15412 = l;
var G__15413 = m;
var G__15414 = n;
var G__15415 = o;
var G__15416 = p;
var G__15417 = q;
var G__15418 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15401,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415,G__15416,G__15417,G__15418) : self__.dispatch_fn.call(null,G__15401,G__15402,G__15403,G__15404,G__15405,G__15406,G__15407,G__15408,G__15409,G__15410,G__15411,G__15412,G__15413,G__15414,G__15415,G__15416,G__15417,G__15418));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15419 = a;
var G__15420 = b;
var G__15421 = c;
var G__15422 = d;
var G__15423 = e;
var G__15424 = f;
var G__15425 = g;
var G__15426 = h;
var G__15427 = i;
var G__15428 = j;
var G__15429 = k;
var G__15430 = l;
var G__15431 = m;
var G__15432 = n;
var G__15433 = o;
var G__15434 = p;
var G__15435 = q;
var G__15436 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436) : target_fn.call(null,G__15419,G__15420,G__15421,G__15422,G__15423,G__15424,G__15425,G__15426,G__15427,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433,G__15434,G__15435,G__15436));
});
var G__15935__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15437 = a;
var G__15438 = b;
var G__15439 = c;
var G__15440 = d;
var G__15441 = e;
var G__15442 = f;
var G__15443 = g;
var G__15444 = h;
var G__15445 = i;
var G__15446 = j;
var G__15447 = k;
var G__15448 = l;
var G__15449 = m;
var G__15450 = n;
var G__15451 = o;
var G__15452 = p;
var G__15453 = q;
var G__15454 = r;
var G__15455 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15437,G__15438,G__15439,G__15440,G__15441,G__15442,G__15443,G__15444,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455) : self__.dispatch_fn.call(null,G__15437,G__15438,G__15439,G__15440,G__15441,G__15442,G__15443,G__15444,G__15445,G__15446,G__15447,G__15448,G__15449,G__15450,G__15451,G__15452,G__15453,G__15454,G__15455));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15456 = a;
var G__15457 = b;
var G__15458 = c;
var G__15459 = d;
var G__15460 = e;
var G__15461 = f;
var G__15462 = g;
var G__15463 = h;
var G__15464 = i;
var G__15465 = j;
var G__15466 = k;
var G__15467 = l;
var G__15468 = m;
var G__15469 = n;
var G__15470 = o;
var G__15471 = p;
var G__15472 = q;
var G__15473 = r;
var G__15474 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15456,G__15457,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474) : target_fn.call(null,G__15456,G__15457,G__15458,G__15459,G__15460,G__15461,G__15462,G__15463,G__15464,G__15465,G__15466,G__15467,G__15468,G__15469,G__15470,G__15471,G__15472,G__15473,G__15474));
});
var G__15935__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__15475 = a;
var G__15476 = b;
var G__15477 = c;
var G__15478 = d;
var G__15479 = e;
var G__15480 = f;
var G__15481 = g;
var G__15482 = h;
var G__15483 = i;
var G__15484 = j;
var G__15485 = k;
var G__15486 = l;
var G__15487 = m;
var G__15488 = n;
var G__15489 = o;
var G__15490 = p;
var G__15491 = q;
var G__15492 = r;
var G__15493 = s;
var G__15494 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491,G__15492,G__15493,G__15494) : self__.dispatch_fn.call(null,G__15475,G__15476,G__15477,G__15478,G__15479,G__15480,G__15481,G__15482,G__15483,G__15484,G__15485,G__15486,G__15487,G__15488,G__15489,G__15490,G__15491,G__15492,G__15493,G__15494));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15495 = a;
var G__15496 = b;
var G__15497 = c;
var G__15498 = d;
var G__15499 = e;
var G__15500 = f;
var G__15501 = g;
var G__15502 = h;
var G__15503 = i;
var G__15504 = j;
var G__15505 = k;
var G__15506 = l;
var G__15507 = m;
var G__15508 = n;
var G__15509 = o;
var G__15510 = p;
var G__15511 = q;
var G__15512 = r;
var G__15513 = s;
var G__15514 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508,G__15509,G__15510,G__15511,G__15512,G__15513,G__15514) : target_fn.call(null,G__15495,G__15496,G__15497,G__15498,G__15499,G__15500,G__15501,G__15502,G__15503,G__15504,G__15505,G__15506,G__15507,G__15508,G__15509,G__15510,G__15511,G__15512,G__15513,G__15514));
});
var G__15935__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__15935 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__15935__1.call(this,self__);
case 2:
return G__15935__2.call(this,self__,a);
case 3:
return G__15935__3.call(this,self__,a,b);
case 4:
return G__15935__4.call(this,self__,a,b,c);
case 5:
return G__15935__5.call(this,self__,a,b,c,d);
case 6:
return G__15935__6.call(this,self__,a,b,c,d,e);
case 7:
return G__15935__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__15935__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__15935__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__15935__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__15935__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__15935__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__15935__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__15935__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__15935__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__15935__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__15935__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__15935__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__15935__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__15935__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__15935__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__15935__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15935.cljs$core$IFn$_invoke$arity$1 = G__15935__1;
G__15935.cljs$core$IFn$_invoke$arity$2 = G__15935__2;
G__15935.cljs$core$IFn$_invoke$arity$3 = G__15935__3;
G__15935.cljs$core$IFn$_invoke$arity$4 = G__15935__4;
G__15935.cljs$core$IFn$_invoke$arity$5 = G__15935__5;
G__15935.cljs$core$IFn$_invoke$arity$6 = G__15935__6;
G__15935.cljs$core$IFn$_invoke$arity$7 = G__15935__7;
G__15935.cljs$core$IFn$_invoke$arity$8 = G__15935__8;
G__15935.cljs$core$IFn$_invoke$arity$9 = G__15935__9;
G__15935.cljs$core$IFn$_invoke$arity$10 = G__15935__10;
G__15935.cljs$core$IFn$_invoke$arity$11 = G__15935__11;
G__15935.cljs$core$IFn$_invoke$arity$12 = G__15935__12;
G__15935.cljs$core$IFn$_invoke$arity$13 = G__15935__13;
G__15935.cljs$core$IFn$_invoke$arity$14 = G__15935__14;
G__15935.cljs$core$IFn$_invoke$arity$15 = G__15935__15;
G__15935.cljs$core$IFn$_invoke$arity$16 = G__15935__16;
G__15935.cljs$core$IFn$_invoke$arity$17 = G__15935__17;
G__15935.cljs$core$IFn$_invoke$arity$18 = G__15935__18;
G__15935.cljs$core$IFn$_invoke$arity$19 = G__15935__19;
G__15935.cljs$core$IFn$_invoke$arity$20 = G__15935__20;
G__15935.cljs$core$IFn$_invoke$arity$21 = G__15935__21;
G__15935.cljs$core$IFn$_invoke$arity$22 = G__15935__22;
return G__15935;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args15087){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15087)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15515 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15515) : self__.dispatch_fn.call(null,G__15515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15516 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15516) : target_fn.call(null,G__15516));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15517 = a;
var G__15518 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15517,G__15518) : self__.dispatch_fn.call(null,G__15517,G__15518));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15519 = a;
var G__15520 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15519,G__15520) : target_fn.call(null,G__15519,G__15520));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15521 = a;
var G__15522 = b;
var G__15523 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15521,G__15522,G__15523) : self__.dispatch_fn.call(null,G__15521,G__15522,G__15523));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15524 = a;
var G__15525 = b;
var G__15526 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15524,G__15525,G__15526) : target_fn.call(null,G__15524,G__15525,G__15526));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15527 = a;
var G__15528 = b;
var G__15529 = c;
var G__15530 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15527,G__15528,G__15529,G__15530) : self__.dispatch_fn.call(null,G__15527,G__15528,G__15529,G__15530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15531 = a;
var G__15532 = b;
var G__15533 = c;
var G__15534 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15531,G__15532,G__15533,G__15534) : target_fn.call(null,G__15531,G__15532,G__15533,G__15534));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15535 = a;
var G__15536 = b;
var G__15537 = c;
var G__15538 = d;
var G__15539 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15535,G__15536,G__15537,G__15538,G__15539) : self__.dispatch_fn.call(null,G__15535,G__15536,G__15537,G__15538,G__15539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15540 = a;
var G__15541 = b;
var G__15542 = c;
var G__15543 = d;
var G__15544 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15540,G__15541,G__15542,G__15543,G__15544) : target_fn.call(null,G__15540,G__15541,G__15542,G__15543,G__15544));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15545 = a;
var G__15546 = b;
var G__15547 = c;
var G__15548 = d;
var G__15549 = e;
var G__15550 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15545,G__15546,G__15547,G__15548,G__15549,G__15550) : self__.dispatch_fn.call(null,G__15545,G__15546,G__15547,G__15548,G__15549,G__15550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15551 = a;
var G__15552 = b;
var G__15553 = c;
var G__15554 = d;
var G__15555 = e;
var G__15556 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15551,G__15552,G__15553,G__15554,G__15555,G__15556) : target_fn.call(null,G__15551,G__15552,G__15553,G__15554,G__15555,G__15556));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15557 = a;
var G__15558 = b;
var G__15559 = c;
var G__15560 = d;
var G__15561 = e;
var G__15562 = f;
var G__15563 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15557,G__15558,G__15559,G__15560,G__15561,G__15562,G__15563) : self__.dispatch_fn.call(null,G__15557,G__15558,G__15559,G__15560,G__15561,G__15562,G__15563));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15564 = a;
var G__15565 = b;
var G__15566 = c;
var G__15567 = d;
var G__15568 = e;
var G__15569 = f;
var G__15570 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15564,G__15565,G__15566,G__15567,G__15568,G__15569,G__15570) : target_fn.call(null,G__15564,G__15565,G__15566,G__15567,G__15568,G__15569,G__15570));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15571 = a;
var G__15572 = b;
var G__15573 = c;
var G__15574 = d;
var G__15575 = e;
var G__15576 = f;
var G__15577 = g;
var G__15578 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578) : self__.dispatch_fn.call(null,G__15571,G__15572,G__15573,G__15574,G__15575,G__15576,G__15577,G__15578));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15579 = a;
var G__15580 = b;
var G__15581 = c;
var G__15582 = d;
var G__15583 = e;
var G__15584 = f;
var G__15585 = g;
var G__15586 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15579,G__15580,G__15581,G__15582,G__15583,G__15584,G__15585,G__15586) : target_fn.call(null,G__15579,G__15580,G__15581,G__15582,G__15583,G__15584,G__15585,G__15586));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15587 = a;
var G__15588 = b;
var G__15589 = c;
var G__15590 = d;
var G__15591 = e;
var G__15592 = f;
var G__15593 = g;
var G__15594 = h;
var G__15595 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15587,G__15588,G__15589,G__15590,G__15591,G__15592,G__15593,G__15594,G__15595) : self__.dispatch_fn.call(null,G__15587,G__15588,G__15589,G__15590,G__15591,G__15592,G__15593,G__15594,G__15595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15596 = a;
var G__15597 = b;
var G__15598 = c;
var G__15599 = d;
var G__15600 = e;
var G__15601 = f;
var G__15602 = g;
var G__15603 = h;
var G__15604 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15596,G__15597,G__15598,G__15599,G__15600,G__15601,G__15602,G__15603,G__15604) : target_fn.call(null,G__15596,G__15597,G__15598,G__15599,G__15600,G__15601,G__15602,G__15603,G__15604));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15605 = a;
var G__15606 = b;
var G__15607 = c;
var G__15608 = d;
var G__15609 = e;
var G__15610 = f;
var G__15611 = g;
var G__15612 = h;
var G__15613 = i;
var G__15614 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15605,G__15606,G__15607,G__15608,G__15609,G__15610,G__15611,G__15612,G__15613,G__15614) : self__.dispatch_fn.call(null,G__15605,G__15606,G__15607,G__15608,G__15609,G__15610,G__15611,G__15612,G__15613,G__15614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15615 = a;
var G__15616 = b;
var G__15617 = c;
var G__15618 = d;
var G__15619 = e;
var G__15620 = f;
var G__15621 = g;
var G__15622 = h;
var G__15623 = i;
var G__15624 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15615,G__15616,G__15617,G__15618,G__15619,G__15620,G__15621,G__15622,G__15623,G__15624) : target_fn.call(null,G__15615,G__15616,G__15617,G__15618,G__15619,G__15620,G__15621,G__15622,G__15623,G__15624));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15625 = a;
var G__15626 = b;
var G__15627 = c;
var G__15628 = d;
var G__15629 = e;
var G__15630 = f;
var G__15631 = g;
var G__15632 = h;
var G__15633 = i;
var G__15634 = j;
var G__15635 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15625,G__15626,G__15627,G__15628,G__15629,G__15630,G__15631,G__15632,G__15633,G__15634,G__15635) : self__.dispatch_fn.call(null,G__15625,G__15626,G__15627,G__15628,G__15629,G__15630,G__15631,G__15632,G__15633,G__15634,G__15635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15636 = a;
var G__15637 = b;
var G__15638 = c;
var G__15639 = d;
var G__15640 = e;
var G__15641 = f;
var G__15642 = g;
var G__15643 = h;
var G__15644 = i;
var G__15645 = j;
var G__15646 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15636,G__15637,G__15638,G__15639,G__15640,G__15641,G__15642,G__15643,G__15644,G__15645,G__15646) : target_fn.call(null,G__15636,G__15637,G__15638,G__15639,G__15640,G__15641,G__15642,G__15643,G__15644,G__15645,G__15646));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15647 = a;
var G__15648 = b;
var G__15649 = c;
var G__15650 = d;
var G__15651 = e;
var G__15652 = f;
var G__15653 = g;
var G__15654 = h;
var G__15655 = i;
var G__15656 = j;
var G__15657 = k;
var G__15658 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15647,G__15648,G__15649,G__15650,G__15651,G__15652,G__15653,G__15654,G__15655,G__15656,G__15657,G__15658) : self__.dispatch_fn.call(null,G__15647,G__15648,G__15649,G__15650,G__15651,G__15652,G__15653,G__15654,G__15655,G__15656,G__15657,G__15658));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15659 = a;
var G__15660 = b;
var G__15661 = c;
var G__15662 = d;
var G__15663 = e;
var G__15664 = f;
var G__15665 = g;
var G__15666 = h;
var G__15667 = i;
var G__15668 = j;
var G__15669 = k;
var G__15670 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15659,G__15660,G__15661,G__15662,G__15663,G__15664,G__15665,G__15666,G__15667,G__15668,G__15669,G__15670) : target_fn.call(null,G__15659,G__15660,G__15661,G__15662,G__15663,G__15664,G__15665,G__15666,G__15667,G__15668,G__15669,G__15670));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15671 = a;
var G__15672 = b;
var G__15673 = c;
var G__15674 = d;
var G__15675 = e;
var G__15676 = f;
var G__15677 = g;
var G__15678 = h;
var G__15679 = i;
var G__15680 = j;
var G__15681 = k;
var G__15682 = l;
var G__15683 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15671,G__15672,G__15673,G__15674,G__15675,G__15676,G__15677,G__15678,G__15679,G__15680,G__15681,G__15682,G__15683) : self__.dispatch_fn.call(null,G__15671,G__15672,G__15673,G__15674,G__15675,G__15676,G__15677,G__15678,G__15679,G__15680,G__15681,G__15682,G__15683));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15684 = a;
var G__15685 = b;
var G__15686 = c;
var G__15687 = d;
var G__15688 = e;
var G__15689 = f;
var G__15690 = g;
var G__15691 = h;
var G__15692 = i;
var G__15693 = j;
var G__15694 = k;
var G__15695 = l;
var G__15696 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15684,G__15685,G__15686,G__15687,G__15688,G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,G__15695,G__15696) : target_fn.call(null,G__15684,G__15685,G__15686,G__15687,G__15688,G__15689,G__15690,G__15691,G__15692,G__15693,G__15694,G__15695,G__15696));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15697 = a;
var G__15698 = b;
var G__15699 = c;
var G__15700 = d;
var G__15701 = e;
var G__15702 = f;
var G__15703 = g;
var G__15704 = h;
var G__15705 = i;
var G__15706 = j;
var G__15707 = k;
var G__15708 = l;
var G__15709 = m;
var G__15710 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15697,G__15698,G__15699,G__15700,G__15701,G__15702,G__15703,G__15704,G__15705,G__15706,G__15707,G__15708,G__15709,G__15710) : self__.dispatch_fn.call(null,G__15697,G__15698,G__15699,G__15700,G__15701,G__15702,G__15703,G__15704,G__15705,G__15706,G__15707,G__15708,G__15709,G__15710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15711 = a;
var G__15712 = b;
var G__15713 = c;
var G__15714 = d;
var G__15715 = e;
var G__15716 = f;
var G__15717 = g;
var G__15718 = h;
var G__15719 = i;
var G__15720 = j;
var G__15721 = k;
var G__15722 = l;
var G__15723 = m;
var G__15724 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15711,G__15712,G__15713,G__15714,G__15715,G__15716,G__15717,G__15718,G__15719,G__15720,G__15721,G__15722,G__15723,G__15724) : target_fn.call(null,G__15711,G__15712,G__15713,G__15714,G__15715,G__15716,G__15717,G__15718,G__15719,G__15720,G__15721,G__15722,G__15723,G__15724));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15725 = a;
var G__15726 = b;
var G__15727 = c;
var G__15728 = d;
var G__15729 = e;
var G__15730 = f;
var G__15731 = g;
var G__15732 = h;
var G__15733 = i;
var G__15734 = j;
var G__15735 = k;
var G__15736 = l;
var G__15737 = m;
var G__15738 = n;
var G__15739 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15725,G__15726,G__15727,G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,G__15734,G__15735,G__15736,G__15737,G__15738,G__15739) : self__.dispatch_fn.call(null,G__15725,G__15726,G__15727,G__15728,G__15729,G__15730,G__15731,G__15732,G__15733,G__15734,G__15735,G__15736,G__15737,G__15738,G__15739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15740 = a;
var G__15741 = b;
var G__15742 = c;
var G__15743 = d;
var G__15744 = e;
var G__15745 = f;
var G__15746 = g;
var G__15747 = h;
var G__15748 = i;
var G__15749 = j;
var G__15750 = k;
var G__15751 = l;
var G__15752 = m;
var G__15753 = n;
var G__15754 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15740,G__15741,G__15742,G__15743,G__15744,G__15745,G__15746,G__15747,G__15748,G__15749,G__15750,G__15751,G__15752,G__15753,G__15754) : target_fn.call(null,G__15740,G__15741,G__15742,G__15743,G__15744,G__15745,G__15746,G__15747,G__15748,G__15749,G__15750,G__15751,G__15752,G__15753,G__15754));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15755 = a;
var G__15756 = b;
var G__15757 = c;
var G__15758 = d;
var G__15759 = e;
var G__15760 = f;
var G__15761 = g;
var G__15762 = h;
var G__15763 = i;
var G__15764 = j;
var G__15765 = k;
var G__15766 = l;
var G__15767 = m;
var G__15768 = n;
var G__15769 = o;
var G__15770 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761,G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770) : self__.dispatch_fn.call(null,G__15755,G__15756,G__15757,G__15758,G__15759,G__15760,G__15761,G__15762,G__15763,G__15764,G__15765,G__15766,G__15767,G__15768,G__15769,G__15770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15771 = a;
var G__15772 = b;
var G__15773 = c;
var G__15774 = d;
var G__15775 = e;
var G__15776 = f;
var G__15777 = g;
var G__15778 = h;
var G__15779 = i;
var G__15780 = j;
var G__15781 = k;
var G__15782 = l;
var G__15783 = m;
var G__15784 = n;
var G__15785 = o;
var G__15786 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15771,G__15772,G__15773,G__15774,G__15775,G__15776,G__15777,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786) : target_fn.call(null,G__15771,G__15772,G__15773,G__15774,G__15775,G__15776,G__15777,G__15778,G__15779,G__15780,G__15781,G__15782,G__15783,G__15784,G__15785,G__15786));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15787 = a;
var G__15788 = b;
var G__15789 = c;
var G__15790 = d;
var G__15791 = e;
var G__15792 = f;
var G__15793 = g;
var G__15794 = h;
var G__15795 = i;
var G__15796 = j;
var G__15797 = k;
var G__15798 = l;
var G__15799 = m;
var G__15800 = n;
var G__15801 = o;
var G__15802 = p;
var G__15803 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15787,G__15788,G__15789,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799,G__15800,G__15801,G__15802,G__15803) : self__.dispatch_fn.call(null,G__15787,G__15788,G__15789,G__15790,G__15791,G__15792,G__15793,G__15794,G__15795,G__15796,G__15797,G__15798,G__15799,G__15800,G__15801,G__15802,G__15803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15804 = a;
var G__15805 = b;
var G__15806 = c;
var G__15807 = d;
var G__15808 = e;
var G__15809 = f;
var G__15810 = g;
var G__15811 = h;
var G__15812 = i;
var G__15813 = j;
var G__15814 = k;
var G__15815 = l;
var G__15816 = m;
var G__15817 = n;
var G__15818 = o;
var G__15819 = p;
var G__15820 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813,G__15814,G__15815,G__15816,G__15817,G__15818,G__15819,G__15820) : target_fn.call(null,G__15804,G__15805,G__15806,G__15807,G__15808,G__15809,G__15810,G__15811,G__15812,G__15813,G__15814,G__15815,G__15816,G__15817,G__15818,G__15819,G__15820));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15821 = a;
var G__15822 = b;
var G__15823 = c;
var G__15824 = d;
var G__15825 = e;
var G__15826 = f;
var G__15827 = g;
var G__15828 = h;
var G__15829 = i;
var G__15830 = j;
var G__15831 = k;
var G__15832 = l;
var G__15833 = m;
var G__15834 = n;
var G__15835 = o;
var G__15836 = p;
var G__15837 = q;
var G__15838 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15821,G__15822,G__15823,G__15824,G__15825,G__15826,G__15827,G__15828,G__15829,G__15830,G__15831,G__15832,G__15833,G__15834,G__15835,G__15836,G__15837,G__15838) : self__.dispatch_fn.call(null,G__15821,G__15822,G__15823,G__15824,G__15825,G__15826,G__15827,G__15828,G__15829,G__15830,G__15831,G__15832,G__15833,G__15834,G__15835,G__15836,G__15837,G__15838));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15839 = a;
var G__15840 = b;
var G__15841 = c;
var G__15842 = d;
var G__15843 = e;
var G__15844 = f;
var G__15845 = g;
var G__15846 = h;
var G__15847 = i;
var G__15848 = j;
var G__15849 = k;
var G__15850 = l;
var G__15851 = m;
var G__15852 = n;
var G__15853 = o;
var G__15854 = p;
var G__15855 = q;
var G__15856 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15839,G__15840,G__15841,G__15842,G__15843,G__15844,G__15845,G__15846,G__15847,G__15848,G__15849,G__15850,G__15851,G__15852,G__15853,G__15854,G__15855,G__15856) : target_fn.call(null,G__15839,G__15840,G__15841,G__15842,G__15843,G__15844,G__15845,G__15846,G__15847,G__15848,G__15849,G__15850,G__15851,G__15852,G__15853,G__15854,G__15855,G__15856));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15857 = a;
var G__15858 = b;
var G__15859 = c;
var G__15860 = d;
var G__15861 = e;
var G__15862 = f;
var G__15863 = g;
var G__15864 = h;
var G__15865 = i;
var G__15866 = j;
var G__15867 = k;
var G__15868 = l;
var G__15869 = m;
var G__15870 = n;
var G__15871 = o;
var G__15872 = p;
var G__15873 = q;
var G__15874 = r;
var G__15875 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15857,G__15858,G__15859,G__15860,G__15861,G__15862,G__15863,G__15864,G__15865,G__15866,G__15867,G__15868,G__15869,G__15870,G__15871,G__15872,G__15873,G__15874,G__15875) : self__.dispatch_fn.call(null,G__15857,G__15858,G__15859,G__15860,G__15861,G__15862,G__15863,G__15864,G__15865,G__15866,G__15867,G__15868,G__15869,G__15870,G__15871,G__15872,G__15873,G__15874,G__15875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15876 = a;
var G__15877 = b;
var G__15878 = c;
var G__15879 = d;
var G__15880 = e;
var G__15881 = f;
var G__15882 = g;
var G__15883 = h;
var G__15884 = i;
var G__15885 = j;
var G__15886 = k;
var G__15887 = l;
var G__15888 = m;
var G__15889 = n;
var G__15890 = o;
var G__15891 = p;
var G__15892 = q;
var G__15893 = r;
var G__15894 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15876,G__15877,G__15878,G__15879,G__15880,G__15881,G__15882,G__15883,G__15884,G__15885,G__15886,G__15887,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893,G__15894) : target_fn.call(null,G__15876,G__15877,G__15878,G__15879,G__15880,G__15881,G__15882,G__15883,G__15884,G__15885,G__15886,G__15887,G__15888,G__15889,G__15890,G__15891,G__15892,G__15893,G__15894));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__15895 = a;
var G__15896 = b;
var G__15897 = c;
var G__15898 = d;
var G__15899 = e;
var G__15900 = f;
var G__15901 = g;
var G__15902 = h;
var G__15903 = i;
var G__15904 = j;
var G__15905 = k;
var G__15906 = l;
var G__15907 = m;
var G__15908 = n;
var G__15909 = o;
var G__15910 = p;
var G__15911 = q;
var G__15912 = r;
var G__15913 = s;
var G__15914 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15895,G__15896,G__15897,G__15898,G__15899,G__15900,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907,G__15908,G__15909,G__15910,G__15911,G__15912,G__15913,G__15914) : self__.dispatch_fn.call(null,G__15895,G__15896,G__15897,G__15898,G__15899,G__15900,G__15901,G__15902,G__15903,G__15904,G__15905,G__15906,G__15907,G__15908,G__15909,G__15910,G__15911,G__15912,G__15913,G__15914));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__15915 = a;
var G__15916 = b;
var G__15917 = c;
var G__15918 = d;
var G__15919 = e;
var G__15920 = f;
var G__15921 = g;
var G__15922 = h;
var G__15923 = i;
var G__15924 = j;
var G__15925 = k;
var G__15926 = l;
var G__15927 = m;
var G__15928 = n;
var G__15929 = o;
var G__15930 = p;
var G__15931 = q;
var G__15932 = r;
var G__15933 = s;
var G__15934 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15915,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929,G__15930,G__15931,G__15932,G__15933,G__15934) : target_fn.call(null,G__15915,G__15916,G__15917,G__15918,G__15919,G__15920,G__15921,G__15922,G__15923,G__15924,G__15925,G__15926,G__15927,G__15928,G__15929,G__15930,G__15931,G__15932,G__15933,G__15934));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__15936 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__15936);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4328__auto__,writer__4329__auto__,opt__4330__auto__){
return cljs.core._write(writer__4329__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.ExceptionInfo.prototype = (new Error());
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,map){
return (new cljs.core.ExceptionInfo(msg,map,null));
});
var ex_info__3 = (function (msg,map,cause){
return (new cljs.core.ExceptionInfo(msg,map,cause));
});
ex_info = function(msg,map,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,map);
case 3:
return ex_info__3.call(this,msg,map,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__15941 = x;
var G__15942 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15941,G__15942) : pred.call(null,G__15941,G__15942));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__15943 = y;
var G__15944 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15943,G__15944) : pred.call(null,G__15943,G__15944));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$20;
} else {
return cljs.core.constant$keyword$21;
}
});
